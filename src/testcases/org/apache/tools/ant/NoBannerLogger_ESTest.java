/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:58:53 GMT 2020
 */

package org.apache.tools.ant;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildEvent;
import org.apache.tools.ant.NoBannerLogger;
import org.apache.tools.ant.Target;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NoBannerLogger_ESTest extends NoBannerLogger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NoBannerLogger noBannerLogger0 = new NoBannerLogger();
      Target target0 = mock(Target.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(target0).getName();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn(target0).when(buildEvent0).getTarget();
      noBannerLogger0.targetStarted(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NoBannerLogger noBannerLogger0 = new NoBannerLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(buildEvent0).getMessage();
      doReturn(0).when(buildEvent0).getPriority();
      noBannerLogger0.messageLogged(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NoBannerLogger noBannerLogger0 = new NoBannerLogger();
      noBannerLogger0.targetFinished((BuildEvent) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NoBannerLogger noBannerLogger0 = new NoBannerLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Target) null).when(buildEvent0).getTarget();
      // Undeclared exception!
      try { 
        noBannerLogger0.targetStarted(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.NoBannerLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NoBannerLogger noBannerLogger0 = new NoBannerLogger();
      // Undeclared exception!
      try { 
        noBannerLogger0.messageLogged((BuildEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.NoBannerLogger", e);
      }
  }
}
