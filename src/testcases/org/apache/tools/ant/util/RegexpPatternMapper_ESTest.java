/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:56:00 GMT 2020
 */

package org.apache.tools.ant.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.util.RegexpPatternMapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegexpPatternMapper_ESTest extends RegexpPatternMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RegexpPatternMapper regexpPatternMapper0 = new RegexpPatternMapper();
      regexpPatternMapper0.setTo("");
      regexpPatternMapper0.setFrom("x>");
      String string0 = regexpPatternMapper0.replaceReferences("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RegexpPatternMapper regexpPatternMapper0 = new RegexpPatternMapper();
      String[] stringArray0 = regexpPatternMapper0.mapFileName("");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RegexpPatternMapper regexpPatternMapper0 = new RegexpPatternMapper();
      // Undeclared exception!
      try { 
        regexpPatternMapper0.setTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.RegexpPatternMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RegexpPatternMapper regexpPatternMapper0 = new RegexpPatternMapper();
      regexpPatternMapper0.reg = null;
      // Undeclared exception!
      try { 
        regexpPatternMapper0.setFrom("n.^'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.RegexpPatternMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RegexpPatternMapper regexpPatternMapper0 = new RegexpPatternMapper();
      regexpPatternMapper0.setFrom("|}L~hHh%ihG}4n!:P(");
      // Undeclared exception!
      try { 
        regexpPatternMapper0.replaceReferences("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.util.regex.PatternSyntaxException: Unclosed group near index 18
         // |}L~hHh%ihG}4n!:P(
         //
         verifyException("org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RegexpPatternMapper regexpPatternMapper0 = new RegexpPatternMapper();
      // Undeclared exception!
      try { 
        regexpPatternMapper0.replaceReferences("}p]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RegexpPatternMapper regexpPatternMapper0 = new RegexpPatternMapper();
      regexpPatternMapper0.setTo("");
      // Undeclared exception!
      try { 
        regexpPatternMapper0.mapFileName((String) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher", e);
      }
  }
}
