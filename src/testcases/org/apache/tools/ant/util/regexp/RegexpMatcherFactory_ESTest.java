/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:47:26 GMT 2020
 */

package org.apache.tools.ant.util.regexp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.util.regexp.RegexpMatcher;
import org.apache.tools.ant.util.regexp.RegexpMatcherFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegexpMatcherFactory_ESTest extends RegexpMatcherFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RegexpMatcherFactory regexpMatcherFactory0 = new RegexpMatcherFactory();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(project0).getProperty(anyString());
      RegexpMatcher regexpMatcher0 = regexpMatcherFactory0.newRegexpMatcher(project0);
      assertNotNull(regexpMatcher0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RegexpMatcherFactory regexpMatcherFactory0 = new RegexpMatcherFactory();
      RegexpMatcher regexpMatcher0 = regexpMatcherFactory0.newRegexpMatcher();
      assertNotNull(regexpMatcher0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RegexpMatcherFactory regexpMatcherFactory0 = new RegexpMatcherFactory();
      try { 
        regexpMatcherFactory0.testAvailability((String) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.tools.ant.util.regexp.RegexpMatcherFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RegexpMatcherFactory regexpMatcherFactory0 = new RegexpMatcherFactory();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn("").when(project0).getProperty(anyString());
      try { 
        regexpMatcherFactory0.newRegexpMatcher(project0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("org.apache.tools.ant.util.regexp.RegexpMatcherFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RegexpMatcherFactory regexpMatcherFactory0 = new RegexpMatcherFactory();
      try { 
        regexpMatcherFactory0.createInstance("1?_.9N^E@;3,5#!'");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.ClassNotFoundException: 1?_/9N^E@;3,5#!'
         //
         verifyException("org.apache.tools.ant.util.regexp.RegexpMatcherFactory", e);
      }
  }
}
