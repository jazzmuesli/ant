/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:42:34 GMT 2020
 */

package org.apache.tools.ant.util.regexp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Jdk14RegexpRegexp_ESTest extends Jdk14RegexpRegexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Jdk14RegexpRegexp jdk14RegexpRegexp0 = new Jdk14RegexpRegexp();
      jdk14RegexpRegexp0.setPattern("O26u2}yi");
      String string0 = jdk14RegexpRegexp0.substitute("", "", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Jdk14RegexpRegexp jdk14RegexpRegexp0 = new Jdk14RegexpRegexp();
      int int0 = jdk14RegexpRegexp0.getSubsOptions((-1028));
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Jdk14RegexpRegexp jdk14RegexpRegexp0 = new Jdk14RegexpRegexp();
      // Undeclared exception!
      try { 
        jdk14RegexpRegexp0.substitute("", "", 3541);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Jdk14RegexpRegexp jdk14RegexpRegexp0 = new Jdk14RegexpRegexp();
      jdk14RegexpRegexp0.setPattern("w,7");
      // Undeclared exception!
      try { 
        jdk14RegexpRegexp0.substitute("w,7", "=w$n+^i0Cw=", 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }
}
