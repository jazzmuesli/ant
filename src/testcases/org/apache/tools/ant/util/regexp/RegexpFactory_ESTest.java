/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:40:20 GMT 2020
 */

package org.apache.tools.ant.util.regexp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.util.regexp.Regexp;
import org.apache.tools.ant.util.regexp.RegexpFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegexpFactory_ESTest extends RegexpFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RegexpFactory regexpFactory0 = new RegexpFactory();
      Regexp regexp0 = regexpFactory0.newRegexp((Project) null);
      assertNotNull(regexp0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RegexpFactory regexpFactory0 = new RegexpFactory();
      Regexp regexp0 = regexpFactory0.newRegexp();
      assertNotNull(regexp0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RegexpFactory regexpFactory0 = new RegexpFactory();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn("").when(project0).getProperty(anyString());
      try { 
        regexpFactory0.newRegexp(project0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("org.apache.tools.ant.util.regexp.RegexpMatcherFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RegexpFactory regexpFactory0 = new RegexpFactory();
      try { 
        regexpFactory0.createRegexpInstance("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("org.apache.tools.ant.util.regexp.RegexpMatcherFactory", e);
      }
  }
}
