/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:36:33 GMT 2020
 */

package org.apache.tools.ant.util.depend;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Enumeration;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.util.depend.bcel.AncestorAnalyzer;
import org.apache.tools.ant.util.depend.bcel.FullAnalyzer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractAnalyzer_ESTest extends AbstractAnalyzer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FullAnalyzer fullAnalyzer0 = new FullAnalyzer();
      File file0 = fullAnalyzer0.getSourceContainer("LZVD4");
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      File file0 = ancestorAnalyzer0.getClassContainer("");
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FullAnalyzer fullAnalyzer0 = new FullAnalyzer();
      fullAnalyzer0.addSourcePath((Path) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FullAnalyzer fullAnalyzer0 = new FullAnalyzer();
      fullAnalyzer0.addClassPath((Path) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      ancestorAnalyzer0.setClosure(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      ancestorAnalyzer0.reset();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      Enumeration enumeration0 = ancestorAnalyzer0.getFileDependencies();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      Enumeration enumeration0 = ancestorAnalyzer0.getClassDependencies();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FullAnalyzer fullAnalyzer0 = new FullAnalyzer();
      fullAnalyzer0.config("LZVD4", (Object) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      ancestorAnalyzer0.addRootClass("?-K&f-(Nt");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      // Undeclared exception!
      try { 
        ancestorAnalyzer0.getSourceContainer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.depend.AbstractAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      // Undeclared exception!
      try { 
        ancestorAnalyzer0.getClassContainer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.depend.AbstractAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      Path path0 = mock(Path.class, new ViolatedAssumptionAnswer());
      doReturn((String[]) null).when(path0).list();
      // Undeclared exception!
      try { 
        ancestorAnalyzer0.addSourcePath(path0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AncestorAnalyzer ancestorAnalyzer0 = new AncestorAnalyzer();
      Path path0 = mock(Path.class, new ViolatedAssumptionAnswer());
      doReturn((String[]) null).when(path0).list();
      // Undeclared exception!
      try { 
        ancestorAnalyzer0.addClassPath(path0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }
}
