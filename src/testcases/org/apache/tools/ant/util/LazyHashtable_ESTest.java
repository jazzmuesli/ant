/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:48:16 GMT 2020
 */

package org.apache.tools.ant.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Enumeration;
import org.apache.tools.ant.util.LazyHashtable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LazyHashtable_ESTest extends LazyHashtable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      boolean boolean0 = lazyHashtable0.containsValue("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      boolean boolean0 = lazyHashtable0.containsKey("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      boolean boolean0 = lazyHashtable0.contains("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      int int0 = lazyHashtable0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      Enumeration enumeration0 = lazyHashtable0.keys();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      boolean boolean0 = lazyHashtable0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      lazyHashtable0.initAll();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      Enumeration enumeration0 = lazyHashtable0.elements();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      // Undeclared exception!
      try { 
        lazyHashtable0.containsValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      // Undeclared exception!
      try { 
        lazyHashtable0.containsKey((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LazyHashtable lazyHashtable0 = new LazyHashtable();
      // Undeclared exception!
      try { 
        lazyHashtable0.contains((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }
}
