/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:32:44 GMT 2020
 */

package org.apache.tools.ant.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.types.Resource;
import org.apache.tools.ant.util.FileNameMapper;
import org.apache.tools.ant.util.SourceFileScanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SourceFileScanner_ESTest extends SourceFileScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      SourceFileScanner sourceFileScanner0 = new SourceFileScanner(task0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "6`IO*{}.";
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      doReturn((String[]) null).when(fileNameMapper0).mapFileName(anyString());
      File[] fileArray0 = sourceFileScanner0.restrictAsFiles(stringArray0, (File) null, (File) null, fileNameMapper0);
      assertEquals(0, fileArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      SourceFileScanner sourceFileScanner0 = new SourceFileScanner(task0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "6`IO*{}.";
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      doReturn((String[]) null).when(fileNameMapper0).mapFileName(anyString());
      String[] stringArray1 = sourceFileScanner0.restrict(stringArray0, (File) null, (File) null, fileNameMapper0);
      assertNotSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      SourceFileScanner sourceFileScanner0 = new SourceFileScanner(task0);
      Resource resource0 = sourceFileScanner0.getResource("");
      assertNotNull(resource0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      SourceFileScanner sourceFileScanner0 = new SourceFileScanner(task0);
      String[] stringArray0 = new String[9];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        sourceFileScanner0.restrictAsFiles(stringArray0, file0, file0, fileNameMapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      SourceFileScanner sourceFileScanner0 = new SourceFileScanner(task0);
      String[] stringArray0 = new String[1];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        sourceFileScanner0.restrict(stringArray0, file0, file0, fileNameMapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SourceFileScanner sourceFileScanner0 = new SourceFileScanner((Task) null);
      // Undeclared exception!
      try { 
        sourceFileScanner0.getResource((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.FileUtils", e);
      }
  }
}
