/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:48:06 GMT 2020
 */

package org.apache.tools.ant.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.ProjectComponent;
import org.apache.tools.ant.types.Resource;
import org.apache.tools.ant.types.ResourceFactory;
import org.apache.tools.ant.util.FileNameMapper;
import org.apache.tools.ant.util.ResourceUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResourceUtils_ESTest extends ResourceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProjectComponent projectComponent0 = mock(ProjectComponent.class, new ViolatedAssumptionAnswer());
      Resource[] resourceArray0 = new Resource[0];
      ResourceFactory resourceFactory0 = mock(ResourceFactory.class, new ViolatedAssumptionAnswer());
      Resource[] resourceArray1 = ResourceUtils.selectOutOfDateSources(projectComponent0, resourceArray0, (FileNameMapper) null, resourceFactory0);
      assertNotSame(resourceArray0, resourceArray1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResourceUtils resourceUtils0 = new ResourceUtils();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ProjectComponent projectComponent0 = mock(ProjectComponent.class, new ViolatedAssumptionAnswer());
      Resource[] resourceArray0 = new Resource[3];
      ResourceFactory resourceFactory0 = mock(ResourceFactory.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ResourceUtils.selectOutOfDateSources(projectComponent0, resourceArray0, (FileNameMapper) null, resourceFactory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.ResourceUtils", e);
      }
  }
}
