/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 23:00:02 GMT 2020
 */

package org.apache.tools.ant.util.optional;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.Permission;
import org.apache.tools.ant.ExitException;
import org.apache.tools.ant.util.optional.NoExitSecurityManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NoExitSecurityManager_ESTest extends NoExitSecurityManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NoExitSecurityManager noExitSecurityManager0 = new NoExitSecurityManager();
      noExitSecurityManager0.checkPermission((Permission) null);
      assertFalse(noExitSecurityManager0.getInCheck());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NoExitSecurityManager noExitSecurityManager0 = new NoExitSecurityManager();
      // Undeclared exception!
      try { 
        noExitSecurityManager0.checkExit(0);
        fail("Expecting exception: ExitException");
      
      } catch(ExitException e) {
         //
         // ExitException: status 0
         //
         verifyException("org.apache.tools.ant.util.optional.NoExitSecurityManager", e);
      }
  }
}
