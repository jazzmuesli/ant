/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 23:00:09 GMT 2020
 */

package org.apache.tools.ant.filters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import org.apache.tools.ant.filters.StripLineComments;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StripLineComments_ESTest extends StripLineComments_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StripLineComments stripLineComments0 = new StripLineComments(stringReader0);
      int int0 = stripLineComments0.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StripLineComments stripLineComments0 = new StripLineComments();
      Reader reader0 = stripLineComments0.chain(stripLineComments0);
      assertNotSame(stripLineComments0, reader0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StripLineComments.Comment stripLineComments_Comment0 = new StripLineComments.Comment();
      stripLineComments_Comment0.setValue("r!@\"uc%Yp]Yr");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StripLineComments.Comment stripLineComments_Comment0 = new StripLineComments.Comment();
      String string0 = stripLineComments_Comment0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h2dhu=9CXegTE%");
      StripLineComments stripLineComments0 = new StripLineComments(stringReader0);
      StripLineComments.Comment stripLineComments_Comment0 = new StripLineComments.Comment();
      stripLineComments0.addConfiguredComment(stripLineComments_Comment0);
      // Undeclared exception!
      try { 
        stripLineComments0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StripLineComments stripLineComments0 = new StripLineComments();
      try { 
        stripLineComments0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StripLineComments stripLineComments0 = new StripLineComments();
      // Undeclared exception!
      try { 
        stripLineComments0.chain((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StripLineComments stripLineComments0 = new StripLineComments();
      // Undeclared exception!
      try { 
        stripLineComments0.addConfiguredComment((StripLineComments.Comment) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.filters.StripLineComments", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StripLineComments stripLineComments0 = null;
      try {
        stripLineComments0 = new StripLineComments((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }
}
