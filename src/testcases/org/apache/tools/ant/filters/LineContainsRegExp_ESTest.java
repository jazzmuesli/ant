/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:48:53 GMT 2020
 */

package org.apache.tools.ant.filters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.filters.LineContainsRegExp;
import org.apache.tools.ant.types.RegularExpression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LineContainsRegExp_ESTest extends LineContainsRegExp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YD (B>tCj9P&");
      LineContainsRegExp lineContainsRegExp0 = new LineContainsRegExp(stringReader0);
      int int0 = lineContainsRegExp0.read();
      assertEquals(89, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YD (B>tCj9P&");
      LineContainsRegExp lineContainsRegExp0 = new LineContainsRegExp(stringReader0);
      Reader reader0 = lineContainsRegExp0.chain(stringReader0);
      assertNotSame(lineContainsRegExp0, reader0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZNMTz,T[<Y,_2XaSk");
      LineContainsRegExp lineContainsRegExp0 = new LineContainsRegExp(stringReader0);
      RegularExpression regularExpression0 = new RegularExpression();
      lineContainsRegExp0.addConfiguredRegexp(regularExpression0);
      // Undeclared exception!
      try { 
        lineContainsRegExp0.read();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LineContainsRegExp lineContainsRegExp0 = new LineContainsRegExp();
      try { 
        lineContainsRegExp0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LineContainsRegExp lineContainsRegExp0 = new LineContainsRegExp();
      // Undeclared exception!
      try { 
        lineContainsRegExp0.chain((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LineContainsRegExp lineContainsRegExp0 = null;
      try {
        lineContainsRegExp0 = new LineContainsRegExp((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }
}
