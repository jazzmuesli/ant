/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:05:02 GMT 2020
 */

package org.apache.tools.ant;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintStream;
import org.apache.tools.ant.BuildEvent;
import org.apache.tools.ant.Target;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.XmlLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlLogger_ESTest extends XmlLogger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn(task0).when(buildEvent0).getTask();
      xmlLogger0.taskFinished(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      Target target0 = mock(Target.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(target0).getName();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn(target0).when(buildEvent0).getTarget();
      xmlLogger0.targetStarted(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      Target target0 = mock(Target.class, new ViolatedAssumptionAnswer());
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn(target0).when(buildEvent0).getTarget();
      xmlLogger0.targetFinished(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      xmlLogger0.setOutputPrintStream(printStream0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      xmlLogger0.setMessageOutputLevel((-1));
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(buildEvent0).getPriority();
      xmlLogger0.messageLogged(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      xmlLogger0.setErrorPrintStream((PrintStream) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      xmlLogger0.setEmacsMode(true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      xmlLogger0.buildStarted(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Task) null, (Task) null).when(buildEvent0).getTask();
      // Undeclared exception!
      try { 
        xmlLogger0.taskStarted(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.XmlLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Task) null).when(buildEvent0).getTask();
      // Undeclared exception!
      try { 
        xmlLogger0.taskFinished(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Target) null).when(buildEvent0).getTarget();
      // Undeclared exception!
      try { 
        xmlLogger0.targetStarted(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.XmlLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Target) null).when(buildEvent0).getTarget();
      // Undeclared exception!
      try { 
        xmlLogger0.targetFinished(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      // Undeclared exception!
      try { 
        xmlLogger0.setOutputPrintStream((PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(buildEvent0).getMessage();
      doReturn(0, 0).when(buildEvent0).getPriority();
      doReturn((Target) null).when(buildEvent0).getTarget();
      doReturn((Task) null).when(buildEvent0).getTask();
      // Undeclared exception!
      try { 
        xmlLogger0.messageLogged(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.XmlLogger$TimedElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XmlLogger xmlLogger0 = new XmlLogger();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xmlLogger0.buildFinished(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.XmlLogger$TimedElement", e);
      }
  }
}
