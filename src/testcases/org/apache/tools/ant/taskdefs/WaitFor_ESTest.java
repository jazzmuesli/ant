/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:45:27 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.taskdefs.Checksum;
import org.apache.tools.ant.taskdefs.WaitFor;
import org.apache.tools.ant.taskdefs.condition.And;
import org.apache.tools.ant.taskdefs.condition.Http;
import org.apache.tools.ant.taskdefs.condition.IsReference;
import org.apache.tools.ant.taskdefs.condition.IsTrue;
import org.apache.tools.ant.taskdefs.condition.Socket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WaitFor_ESTest extends WaitFor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WaitFor waitFor0 = new WaitFor();
      waitFor0.log("", 3284);
      waitFor0.log("", 3284);
      And and0 = mock(And.class, new ViolatedAssumptionAnswer());
      waitFor0.addAnd(and0);
      waitFor0.setMaxWait(0L);
      waitFor0.execute();
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      waitFor_Unit0.getValues();
      // Undeclared exception!
      try { 
        waitFor_Unit0.getMultiplier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor$Unit", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WaitFor waitFor0 = new WaitFor();
      Checksum checksum0 = mock(Checksum.class, new ViolatedAssumptionAnswer());
      waitFor0.addChecksum(checksum0);
      IsReference isReference0 = mock(IsReference.class, new ViolatedAssumptionAnswer());
      waitFor0.addIsReference(isReference0);
      waitFor0.addIsReference((IsReference) null);
      waitFor0.log("", (-2419));
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      waitFor_Unit0.indexOfValue("");
      // Undeclared exception!
      try { 
        waitFor0.setCheckEveryUnit(waitFor_Unit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor$Unit", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WaitFor waitFor0 = new WaitFor();
      WaitFor.Unit waitFor_Unit0 = null;
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      waitFor0.addSocket(socket0);
      waitFor0.log("5Lq&PC:,OUl mk`2M", 0);
      // Undeclared exception!
      try { 
        waitFor0.setMaxWaitUnit((WaitFor.Unit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WaitFor waitFor0 = new WaitFor();
      waitFor0.setTimeoutProperty("-KO>Xi\"");
      waitFor0.setTimeoutProperty("");
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      waitFor_Unit0.getValues();
      waitFor_Unit0.getValue();
      try { 
        waitFor0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must nest a condition into <waitfor>
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WaitFor waitFor0 = new WaitFor();
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      waitFor_Unit0.toString();
      waitFor_Unit0.getValues();
      // Undeclared exception!
      try { 
        waitFor0.setMaxWaitUnit(waitFor_Unit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor$Unit", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WaitFor waitFor0 = new WaitFor();
      waitFor0.setTimeoutProperty("");
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      // Undeclared exception!
      try { 
        waitFor_Unit0.getMultiplier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor$Unit", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      waitFor_Unit0.getValues();
      waitFor_Unit0.toString();
      waitFor_Unit0.getValues();
      WaitFor waitFor0 = new WaitFor();
      Http http0 = mock(Http.class, new ViolatedAssumptionAnswer());
      waitFor0.addHttp(http0);
      WaitFor.Unit waitFor_Unit1 = new WaitFor.Unit();
      waitFor_Unit1.getValues();
      waitFor_Unit1.getIndex();
      // Undeclared exception!
      try { 
        waitFor0.setCheckEveryUnit(waitFor_Unit1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor$Unit", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WaitFor waitFor0 = new WaitFor();
      waitFor0.log("<:SV:;!t$-55x@?", (-1));
      waitFor0.setTimeoutProperty("");
      waitFor0.setMaxWait((-1288L));
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      waitFor_Unit0.toString();
      // Undeclared exception!
      try { 
        waitFor0.setMaxWaitUnit(waitFor_Unit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.WaitFor$Unit", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      WaitFor.Unit waitFor_Unit0 = new WaitFor.Unit();
      WaitFor.Unit waitFor_Unit1 = new WaitFor.Unit();
      WaitFor waitFor0 = new WaitFor();
      IsTrue isTrue0 = mock(IsTrue.class, new ViolatedAssumptionAnswer());
      waitFor0.getProject();
      waitFor0.setProject((Project) null);
      IsReference isReference0 = mock(IsReference.class, new ViolatedAssumptionAnswer());
      waitFor0.addIsReference(isReference0);
      waitFor0.addIsTrue((IsTrue) null);
      waitFor0.addIsTrue(isTrue0);
      waitFor0.setMaxWait((-3351L));
      waitFor0.setCheckEvery(0L);
      waitFor0.setCheckEvery(1L);
  }
}
