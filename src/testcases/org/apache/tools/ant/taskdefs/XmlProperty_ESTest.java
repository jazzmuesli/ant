/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:55:53 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.RuntimeConfigurable;
import org.apache.tools.ant.taskdefs.XmlProperty;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlProperty_ESTest extends XmlProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setPrefix("%d#@");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      doReturn((short)0).when(node0).getNodeType();
      doReturn(false).when(node0).hasAttributes();
      Object object0 = xmlProperty0.processNode(node0, (String) null, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(node0).getNodeName();
      doReturn((short)0, (short)0).when(node0).getNodeType();
      doReturn(false).when(node0).hasAttributes();
      doReturn(false).when(node0).hasChildNodes();
      xmlProperty0.addNodeRecursively(node0, "vk}SZ");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setValidate(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setSemanticAttributes(false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setRootDirectory((File) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setKeeproot(false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setIncludeSemanticAttribute(true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setFile((File) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.setCollapseAttributes(false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      xmlProperty0.init();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      boolean boolean0 = xmlProperty0.getValidate();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      boolean boolean0 = xmlProperty0.getSemanticAttributes();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      File file0 = xmlProperty0.getRootDirectory();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      String string0 = xmlProperty0.getPrefix();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      boolean boolean0 = xmlProperty0.getKeeproot();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      boolean boolean0 = xmlProperty0.getIncludeSementicAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      File file0 = xmlProperty0.getFile();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      boolean boolean0 = xmlProperty0.getCollapseAttributes();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      // Undeclared exception!
      try { 
        xmlProperty0.setPrefix((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.XmlProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      RuntimeConfigurable runtimeConfigurable0 = xmlProperty0.getRuntimeConfigurableWrapper();
      // Undeclared exception!
      try { 
        xmlProperty0.processNode((Node) null, "vk}SZ", runtimeConfigurable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.XmlProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      try { 
        xmlProperty0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // XmlProperty task requires a file attribute
         //
         verifyException("org.apache.tools.ant.taskdefs.XmlProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XmlProperty xmlProperty0 = new XmlProperty();
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      doReturn((short)0).when(node0).getNodeType();
      // Undeclared exception!
      try { 
        xmlProperty0.addNodeRecursively(node0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.XmlProperty", e);
      }
  }
}
