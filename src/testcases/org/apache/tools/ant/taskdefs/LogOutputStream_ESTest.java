/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:43:10 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.taskdefs.LogOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LogOutputStream_ESTest extends LogOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      LogOutputStream logOutputStream0 = new LogOutputStream(task0, 2218);
      logOutputStream0.processLine("j+", (-2065));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      LogOutputStream logOutputStream0 = new LogOutputStream(task0, 2218);
      logOutputStream0.processLine("j+");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      LogOutputStream logOutputStream0 = new LogOutputStream(task0, 2218);
      logOutputStream0.processBuffer();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      LogOutputStream logOutputStream0 = new LogOutputStream(task0, 2218);
      logOutputStream0.write((-2065));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LogOutputStream logOutputStream0 = new LogOutputStream((Task) null, (-3549));
      int int0 = logOutputStream0.getMessageLevel();
      assertEquals((-3549), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LogOutputStream logOutputStream0 = new LogOutputStream((Task) null, (-3549));
      logOutputStream0.close();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LogOutputStream logOutputStream0 = new LogOutputStream((Task) null, (-3549));
      // Undeclared exception!
      try { 
        logOutputStream0.processLine("IOrqM!", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.LogOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LogOutputStream logOutputStream0 = new LogOutputStream((Task) null, 311);
      // Undeclared exception!
      try { 
        logOutputStream0.processLine("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.LogOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LogOutputStream logOutputStream0 = new LogOutputStream((Task) null, 306);
      // Undeclared exception!
      try { 
        logOutputStream0.processBuffer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.LogOutputStream", e);
      }
  }
}
