/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:01:52 GMT 2020
 */

package org.apache.tools.ant.taskdefs.condition;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.condition.Equals;
import org.apache.tools.ant.taskdefs.condition.Http;
import org.apache.tools.ant.taskdefs.condition.IsSet;
import org.apache.tools.ant.taskdefs.condition.Not;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Not_ESTest extends Not_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Not not0 = new Not();
      Http http0 = mock(Http.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(http0).eval();
      not0.addHttp(http0);
      boolean boolean0 = not0.eval();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Not not0 = new Not();
      Http http0 = mock(Http.class, new ViolatedAssumptionAnswer());
      not0.addHttp(http0);
      IsSet isSet0 = mock(IsSet.class, new ViolatedAssumptionAnswer());
      not0.addIsSet(isSet0);
      try { 
        not0.eval();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not nest more than one condition into <not>
         //
         verifyException("org.apache.tools.ant.taskdefs.condition.Not", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Not not0 = new Not();
      not0.addEquals((Equals) null);
      // Undeclared exception!
      try { 
        not0.eval();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.condition.Not", e);
      }
  }
}
