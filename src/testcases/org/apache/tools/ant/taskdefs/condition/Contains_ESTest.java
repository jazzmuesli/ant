/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:43:34 GMT 2020
 */

package org.apache.tools.ant.taskdefs.condition;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.condition.Contains;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Contains_ESTest extends Contains_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Contains contains0 = new Contains();
      contains0.setSubstring("AA~-#*&`0x\"'Aw");
      contains0.setString("");
      boolean boolean0 = contains0.eval();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Contains contains0 = new Contains();
      contains0.setCasesensitive(true);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Contains contains0 = new Contains();
      try { 
        contains0.eval();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // both string and substring are required in contains
         //
         verifyException("org.apache.tools.ant.taskdefs.condition.Contains", e);
      }
  }
}
