/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:18:00 GMT 2020
 */

package org.apache.tools.ant.taskdefs.rmic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.taskdefs.Rmic;
import org.apache.tools.ant.taskdefs.rmic.KaffeRmic;
import org.apache.tools.ant.taskdefs.rmic.SunRmic;
import org.apache.tools.ant.taskdefs.rmic.WLRmic;
import org.apache.tools.ant.types.Commandline;
import org.apache.tools.ant.util.FileNameMapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultRmicAdapter_ESTest extends DefaultRmicAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WLRmic wLRmic0 = new WLRmic();
      wLRmic0.setRmic((Rmic) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WLRmic wLRmic0 = new WLRmic();
      String string0 = wLRmic0.getTieClassSuffix();
      assertEquals("_Tie", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SunRmic sunRmic0 = new SunRmic();
      String string0 = sunRmic0.getStubClassSuffix();
      assertEquals("_Stub", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SunRmic sunRmic0 = new SunRmic();
      String string0 = sunRmic0.getSkelClassSuffix();
      assertEquals("_Skel", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WLRmic wLRmic0 = new WLRmic();
      Rmic rmic0 = wLRmic0.getRmic();
      assertNull(rmic0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WLRmic wLRmic0 = new WLRmic();
      FileNameMapper fileNameMapper0 = wLRmic0.getMapper();
      assertNull(fileNameMapper0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WLRmic wLRmic0 = new WLRmic();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        wLRmic0.setupRmicCommand(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SunRmic sunRmic0 = new SunRmic();
      // Undeclared exception!
      try { 
        sunRmic0.setupRmicCommand();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KaffeRmic kaffeRmic0 = new KaffeRmic();
      // Undeclared exception!
      try { 
        kaffeRmic0.logAndAddFilesToCompile((Commandline) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KaffeRmic kaffeRmic0 = new KaffeRmic();
      // Undeclared exception!
      try { 
        kaffeRmic0.getCompileClasspath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KaffeRmic kaffeRmic0 = new KaffeRmic();
      // Undeclared exception!
      try { 
        kaffeRmic0.getClasspath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter", e);
      }
  }
}
