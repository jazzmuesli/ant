/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:52:50 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.Checksum;
import org.apache.tools.ant.types.FileSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Checksum_ESTest extends Checksum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      checksum0.setVerifyproperty((String) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      checksum0.setReadBufferSize(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      checksum0.setProperty("");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      checksum0.setForceOverwrite(true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      checksum0.setFileext("%(oC;;dNqJ5l");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      checksum0.setAlgorithm("_P^(G8S4^4[siM~NzMX");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      try { 
        checksum0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Specify at least one source - a file or a fileset.
         //
         verifyException("org.apache.tools.ant.taskdefs.Checksum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(file0).exists();
      doReturn((String) null).when(file0).getAbsolutePath();
      checksum0.setFile(file0);
      // Undeclared exception!
      try { 
        checksum0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      checksum0.setProvider("");
      FileSet fileSet0 = checksum0.getImplicitFileSet();
      checksum0.addFileset(fileSet0);
      // Undeclared exception!
      try { 
        checksum0.execute();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // missing provider
         //
         verifyException("java.security.MessageDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      try { 
        checksum0.eval();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Specify at least one source - a file or a fileset.
         //
         verifyException("org.apache.tools.ant.taskdefs.Checksum", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(file0).exists();
      doReturn((String) null).when(file0).getAbsolutePath();
      checksum0.setFile(file0);
      // Undeclared exception!
      try { 
        checksum0.eval();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Checksum checksum0 = new Checksum();
      FileSet fileSet0 = checksum0.getImplicitFileSet();
      checksum0.addFileset(fileSet0);
      checksum0.setProvider("");
      // Undeclared exception!
      try { 
        checksum0.eval();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // missing provider
         //
         verifyException("java.security.MessageDigest", e);
      }
  }
}
