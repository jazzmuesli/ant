/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:59:48 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.Ant;
import org.apache.tools.ant.taskdefs.Property;
import org.apache.tools.ant.taskdefs.SubAnt;
import org.apache.tools.ant.types.DirSet;
import org.apache.tools.ant.types.FileList;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubAnt_ESTest extends SubAnt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      subAnt0.setTarget("j.(\u0005K|aFl");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      subAnt0.setInheritrefs(true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      subAnt0.setInheritall(true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      subAnt0.setFailonerror(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      subAnt0.setBuildpathRef(reference0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      Path path0 = subAnt0.createBuildpath();
      subAnt0.setBuildpath(path0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      subAnt0.setAntfile("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      Path.PathElement path_PathElement0 = subAnt0.createBuildpathElement();
      assertNotNull(path_PathElement0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      subAnt0.addReference((Ant.Reference) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      Property property0 = mock(Property.class, new ViolatedAssumptionAnswer());
      subAnt0.addProperty(property0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      subAnt0.addFileset(fileSet0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      FileList fileList0 = mock(FileList.class, new ViolatedAssumptionAnswer());
      subAnt0.addFilelist(fileList0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      DirSet dirSet0 = mock(DirSet.class, new ViolatedAssumptionAnswer());
      subAnt0.addDirset(dirSet0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      try { 
        subAnt0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No buildpath specified
         //
         verifyException("org.apache.tools.ant.taskdefs.SubAnt", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SubAnt subAnt0 = new SubAnt();
      subAnt0.createBuildpath();
      // Undeclared exception!
      try { 
        subAnt0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }
}
