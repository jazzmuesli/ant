/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:52:46 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.taskdefs.Redirector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Redirector_ESTest extends Redirector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.setInputString("");
      redirector0.createHandler();
      redirector0.setLogError(true);
      redirector0.handleErrorFlush("");
      redirector0.setInputString("");
      redirector0.setAppend(true);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setOutput(file0);
      File file1 = mock(File.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      redirector0.handleInput(byteArray0, 0, (byte)0);
      redirector0.setInput(file1);
      redirector0.setOutput((File) null);
      redirector0.getOutputStream();
      redirector0.setInputString((String) null);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        redirector0.handleInput(byteArray1, 1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.createStreams();
      redirector0.getInputStream();
      redirector0.createStreams();
      redirector0.getErrorStream();
      redirector0.getInputStream();
      redirector0.handleFlush("dexoB|H5:");
      redirector0.complete();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setError(file0);
      redirector0.setLogError(true);
      redirector0.setErrorProperty("");
      String string0 = "<N/;@%l'lrC";
      redirector0.handleErrorFlush("@xM?");
      redirector0.handleErrorOutput("<N/;@%l'lrC");
      File file1 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file1).getAbsolutePath();
      redirector0.setOutput(file1);
      redirector0.getOutputStream();
      redirector0.setOutputProperty("<N/;@%l'lrC");
      // Undeclared exception!
      try { 
        redirector0.createStreams();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.createHandler();
      redirector0.setAppend(true);
      redirector0.getInputStream();
      redirector0.getOutputStream();
      redirector0.createStreams();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setInput(file0);
      redirector0.setInputString("");
      redirector0.setLogError(false);
      redirector0.complete();
      File file1 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setError(file1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.getErrorStream();
      redirector0.setOutputProperty("");
      redirector0.setOutputProperty("");
      redirector0.createStreams();
      redirector0.handleErrorOutput("");
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      redirector0.setAppend(true);
      redirector0.setOutput((File) null);
      redirector0.setInput((File) null);
      String string0 = null;
      redirector0.handleFlush((String) null);
      redirector0.setInput((File) null);
      redirector0.setError(file0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        redirector0.createHandler();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.createHandler();
      redirector0.handleFlush("h)`a1PX_");
      redirector0.setAppend(false);
      redirector0.setInputString("h)`a1PX_");
      redirector0.handleErrorOutput("h)`a1PX_");
      redirector0.handleFlush((String) null);
      redirector0.setErrorProperty("h)`a1PX_");
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setInputString("");
      redirector0.setInput(file0);
      File file1 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setOutput(file1);
      File file2 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setErrorProperty((String) null);
      redirector0.setError(file2);
      redirector0.setLogError(false);
      redirector0.setInput((File) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Redirector redirector0 = new Redirector((Task) null);
      redirector0.setError((File) null);
      redirector0.getOutputStream();
      redirector0.createStreams();
      redirector0.handleErrorFlush((String) null);
      redirector0.handleErrorFlush("0_U2UN");
      redirector0.setError((File) null);
      redirector0.setAppend(true);
      redirector0.setInput((File) null);
      redirector0.getErrorStream();
      redirector0.setOutputProperty((String) null);
      redirector0.handleFlush("0_U2UN");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setInput(file0);
      redirector0.setInputString("");
      // Undeclared exception!
      try { 
        redirector0.createStreams();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // The \"input\" and \"inputstring\" attributes cannot both be specified
         //
         verifyException("org.apache.tools.ant.taskdefs.Redirector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setInput(file0);
      redirector0.setErrorProperty("9/HFf");
      redirector0.setAppend(false);
      // Undeclared exception!
      try { 
        redirector0.handleErrorFlush("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      Redirector redirector0 = new Redirector(task0);
      String string0 = "";
      redirector0.createStreams();
      redirector0.handleOutput("");
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setOutput(file0);
      redirector0.setInputString("");
      redirector0.setLogError(false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      redirector0.setLogError(true);
      byteArray0[1] = (byte)1;
      // Undeclared exception!
      try { 
        redirector0.handleInput(byteArray0, 1325, 1325);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Redirector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.getErrorStream();
      redirector0.setOutputProperty("3h;U8OjWr+Pc");
      // Undeclared exception!
      try { 
        redirector0.handleErrorOutput("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.getInputStream();
      redirector0.setLogError(false);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setOutput(file0);
      redirector0.setOutput((File) null);
      redirector0.getOutputStream();
      redirector0.setErrorProperty("");
      redirector0.setInputString("");
      redirector0.setInput((File) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Redirector redirector0 = new Redirector((Task) null);
      redirector0.createHandler();
      redirector0.setInputString("YC:T");
      String string0 = "8r|OcSp";
      // Undeclared exception!
      try { 
        redirector0.handleOutput("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.LogOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Redirector redirector0 = new Redirector((Task) null);
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = false;
      String string0 = "";
      redirector0.getErrorStream();
      // Undeclared exception!
      try { 
        redirector0.handleFlush("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Redirector redirector0 = new Redirector((Task) null);
      // Undeclared exception!
      try { 
        redirector0.complete();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Redirector", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      redirector0.setOutputProperty("");
      // Undeclared exception!
      try { 
        redirector0.handleOutput("Oo>pA1e%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      Redirector redirector0 = new Redirector(task0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      redirector0.setLogError(false);
      redirector0.setOutputProperty("");
      redirector0.setInput(file0);
      // Undeclared exception!
      try { 
        redirector0.handleFlush("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }
}
