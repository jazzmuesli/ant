/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:58:35 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.windows;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.windows.Attrib;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Attrib_ESTest extends Attrib_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getName();
      doReturn((String) null).when(file0).getParent();
      attrib0.setFile(file0);
      attrib0.setHidden(false);
      attrib0.checkConfiguration();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      attrib0.setSystem(true);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      attrib0.setReadonly(true);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      attrib0.setArchive(false);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      boolean boolean0 = attrib0.isValidOs();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      // Undeclared exception!
      try { 
        attrib0.setFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.AbstractFileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      // Undeclared exception!
      try { 
        attrib0.setExecutable("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't support the executable attribute
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.windows.Attrib", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      // Undeclared exception!
      try { 
        attrib0.setCommand("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't support the command attribute
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.windows.Attrib", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Attrib attrib0 = new Attrib();
      // Undeclared exception!
      try { 
        attrib0.checkConfiguration();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Missing attribute parameter
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.windows.Attrib", e);
      }
  }
}
