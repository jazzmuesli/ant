/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:51:03 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.junit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.junit.FormatterElement;
import org.apache.tools.ant.taskdefs.optional.junit.JUnitResultFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FormatterElement_ESTest extends FormatterElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      FormatterElement.TypeAttribute formatterElement_TypeAttribute0 = new FormatterElement.TypeAttribute();
      formatterElement0.setType(formatterElement_TypeAttribute0);
      JUnitResultFormatter jUnitResultFormatter0 = formatterElement0.createFormatter();
      assertNotNull(jUnitResultFormatter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FormatterElement.TypeAttribute formatterElement_TypeAttribute0 = new FormatterElement.TypeAttribute();
      String[] stringArray0 = formatterElement_TypeAttribute0.getValues();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      formatterElement0.setUseFile(false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      formatterElement0.setOutput(outputStream0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      formatterElement0.setExtension((String) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      formatterElement0.setClassname(",7@xY!d^>OW<3YCwc2W");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      boolean boolean0 = formatterElement0.getUseFile();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      String string0 = formatterElement0.getExtension();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      String string0 = formatterElement0.getClassname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      // Undeclared exception!
      try { 
        formatterElement0.setType((FormatterElement.TypeAttribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.FormatterElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      try { 
        formatterElement0.createFormatter();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // you must specify type or classname
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.FormatterElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FormatterElement formatterElement0 = new FormatterElement();
      FormatterElement.TypeAttribute formatterElement_TypeAttribute0 = new FormatterElement.TypeAttribute();
      formatterElement0.setType(formatterElement_TypeAttribute0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getPath();
      formatterElement0.setOutfile(file0);
      // Undeclared exception!
      try { 
        formatterElement0.createFormatter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }
}
