/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:38:14 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.junit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Hashtable;
import java.util.Properties;
import java.util.Vector;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.taskdefs.optional.junit.FormatterElement;
import org.apache.tools.ant.taskdefs.optional.junit.JUnitTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JUnitTest_ESTest extends JUnitTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = jUnitTest0.shouldRun(project0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("");
      FormatterElement[] formatterElementArray0 = jUnitTest0.getFormatters();
      assertEquals(0, formatterElementArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("", false, false, false);
      jUnitTest0.addFormattersTo((Vector) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      jUnitTest0.setRunTime(0L);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      jUnitTest0.setOutfile("KQ`GDEh+W^S|#");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      jUnitTest0.setName("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("");
      jUnitTest0.setCounts(0L, 0L, 0L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      long long0 = jUnitTest0.runCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      long long0 = jUnitTest0.getRunTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      Properties properties0 = jUnitTest0.getProperties();
      assertNull(properties0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      String string0 = jUnitTest0.getName();
      assertEquals("KQ`GDEh+W^S|#", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      long long0 = jUnitTest0.failureCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      long long0 = jUnitTest0.errorCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      Object object0 = jUnitTest0.clone();
      assertNotSame(object0, jUnitTest0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("", false, false, false);
      String string0 = jUnitTest0.getOutfile();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("");
      jUnitTest0.ifProperty = "";
      // Undeclared exception!
      try { 
        jUnitTest0.shouldRun((Project) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest();
      // Undeclared exception!
      try { 
        jUnitTest0.setProperties((Hashtable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest((String) null);
      jUnitTest0.formatters = null;
      // Undeclared exception!
      try { 
        jUnitTest0.getFormatters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JUnitTest jUnitTest0 = new JUnitTest("KQ`GDEh+W^S|#");
      jUnitTest0.formatters = null;
      // Undeclared exception!
      try { 
        jUnitTest0.addFormattersTo((Vector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTest", e);
      }
  }
}
