/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:54:42 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.jsp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.Target;
import org.apache.tools.ant.taskdefs.optional.jsp.JspC;
import org.apache.tools.ant.taskdefs.optional.jsp.JspMangler;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.apache.tools.ant.types.selectors.AndSelector;
import org.apache.tools.ant.types.selectors.ExtendSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JspC_ESTest extends JspC_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JspC jspC0 = new JspC();
      Path path0 = jspC0.createClasspath();
      jspC0.setSrcDir(path0);
      jspC0.getWebinc();
      JspMangler jspMangler0 = mock(JspMangler.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      jspC0.getSrcDir();
      stringArray0[1] = "";
      jspC0.scanDir((File) null, (File) null, jspMangler0, stringArray0);
      jspC0.setCompiler("");
      jspC0.setClasspath(path0);
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(reference0).getRefId();
      doReturn((Object) null, (Object) null).when(reference0).getReferencedObject(any(org.apache.tools.ant.Project.class));
      jspC0.setClasspathRef(reference0);
      jspC0.createClasspath();
      jspC0.getSrcDir();
      jspC0.setWebxml((File) null);
      Path path1 = jspC0.getClasspath();
      // Undeclared exception!
      try { 
        jspC0.setSrcDir(path1);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't denote a path null
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getUribase();
      jspC0.getPackage();
      jspC0.getWebinc();
      jspC0.setCompiler("]B.IoSnngnSz}");
      JspMangler jspMangler0 = mock(JspMangler.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = "]B.IoSnngnSz}";
      stringArray0[2] = null;
      stringArray0[3] = "]B.IoSnngnSz}";
      stringArray0[4] = null;
      stringArray0[5] = "]B.IoSnngnSz}";
      stringArray0[6] = null;
      // Undeclared exception!
      try { 
        jspC0.scanDir((File) null, (File) null, jspMangler0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.setMapped(true);
      Path path0 = jspC0.createClasspath();
      jspC0.getIeplugin();
      JspC.WebAppParameter jspC_WebAppParameter0 = new JspC.WebAppParameter();
      jspC0.hasSelectors();
      jspC0.createIncludesFile();
      jspC_WebAppParameter0.getDirectory();
      jspC_WebAppParameter0.setBaseDir((File) null);
      jspC_WebAppParameter0.setBaseDir((File) null);
      jspC0.getDestdir();
      jspC_WebAppParameter0.setBaseDir((File) null);
      jspC0.setIeplugin((String) null);
      jspC0.setMapped(true);
      jspC0.setClasspath(path0);
      jspC0.getClasspath();
      jspC0.setUriroot((File) null);
      jspC0.getVerbose();
      jspC0.setMapped(true);
      jspC0.addWebApp(jspC_WebAppParameter0);
      jspC0.setMapped(true);
      jspC0.getCompileList();
      try { 
        jspC0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // destdir attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.JspC", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.setClasspathRef((Reference) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getUribase();
      jspC0.setWebxml((File) null);
      jspC0.getPackage();
      jspC0.getCompilerclasspath();
      jspC0.setClasspath((Path) null);
      jspC0.getFailonerror();
      jspC0.getWebxml();
      jspC0.setWebxml((File) null);
      jspC0.setFailonerror(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getClasspath();
      jspC0.selectorElements();
      jspC0.getWebxml();
      jspC0.getClasspath();
      jspC0.getSrcDir();
      jspC0.setCompilerclasspath((Path) null);
      jspC0.getVerbose();
      jspC0.setUriroot((File) null);
      jspC0.setCompilerclasspath((Path) null);
      jspC0.setMapped(false);
      jspC0.setPackage("~F=A080");
      // Undeclared exception!
      try { 
        jspC0.setUribase((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getFailonerror();
      jspC0.setIeplugin("`D`b@$3u^PF$}c7p=(!");
      jspC0.getOwningTarget();
      // Undeclared exception!
      try { 
        jspC0.XsetIgnore("n#~HzBf.$b68fdP0-(G");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getUriroot();
      Path path0 = jspC0.createCompilerclasspath();
      jspC0.setCompilerclasspath(path0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JspC jspC0 = new JspC();
      JspC.WebAppParameter jspC_WebAppParameter0 = new JspC.WebAppParameter();
      jspC_WebAppParameter0.getDirectory();
      jspC_WebAppParameter0.getDirectory();
      jspC_WebAppParameter0.getDirectory();
      jspC0.webApp = jspC_WebAppParameter0;
      jspC0.setTaskType("H}?Z%Ze$z<3R29CE]");
      jspC_WebAppParameter0.setBaseDir((File) null);
      jspC0.setIeplugin("H}?Z%Ze$z<3R29CE]");
      jspC0.getUriroot();
      jspC0.getCompileList();
      jspC_WebAppParameter0.setBaseDir((File) null);
      jspC0.getCompileList();
      JspC.WebAppParameter jspC_WebAppParameter1 = new JspC.WebAppParameter();
      jspC_WebAppParameter1.setBaseDir((File) null);
      try { 
        jspC0.addWebApp(jspC_WebAppParameter1);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Only one webapp can be specified
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.JspC", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getUribase();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "7M4RO ";
      stringArray0[2] = "i:$h";
      stringArray0[3] = "t>v!r]m%GKu>FV";
      stringArray0[4] = "^i<)qx+42|lF2`eA";
      stringArray0[5] = "";
      stringArray0[6] = "";
      jspC0.scanDir((File) null, (File) null, (JspMangler) null, stringArray0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.setIeplugin("6,");
      jspC0.setCaseSensitive(true);
      jspC0.setMapped(true);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getWebinc();
      jspC0.getUriroot();
      jspC0.setWebinc((File) null);
      jspC0.createCompilerclasspath();
      jspC0.setIeplugin("");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getCompilerclasspath();
      jspC0.getProject();
      jspC0.setProject((Project) null);
      jspC0.setClasspath((Path) null);
      jspC0.setClasspath((Path) null);
      jspC0.getCompileList();
      jspC0.setIeplugin("ybXAlUEW");
      jspC0.setIeplugin("WyWV@GOI:K");
      jspC0.getWebxml();
      JspC.WebAppParameter jspC_WebAppParameter0 = new JspC.WebAppParameter();
      jspC_WebAppParameter0.setBaseDir((File) null);
      jspC0.addWebApp(jspC_WebAppParameter0);
      jspC0.getCompilerclasspath();
      jspC0.getUriroot();
      jspC0.setPackage("");
      jspC0.setCompiler("v/.pJeW'LC68%R");
      jspC0.getDestdir();
      jspC0.deleteEmptyJavaFiles();
      try { 
        jspC0.addWebApp(jspC_WebAppParameter0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Only one webapp can be specified
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.JspC", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.setFailonerror(true);
      jspC0.getWebApp();
      jspC0.getCompilerclasspath();
      jspC0.setSrcDir((Path) null);
      jspC0.getWebinc();
      // Undeclared exception!
      try { 
        jspC0.setUribase((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JspC jspC0 = new JspC();
      JspC.WebAppParameter jspC_WebAppParameter0 = new JspC.WebAppParameter();
      jspC0.createExclude();
      jspC_WebAppParameter0.setBaseDir((File) null);
      jspC0.setTaskName("-v|BF,w_jmL");
      jspC0.createExclude();
      jspC_WebAppParameter0.getDirectory();
      jspC0.webApp = jspC_WebAppParameter0;
      jspC0.setIncludes("");
      jspC0.getUriroot();
      AndSelector andSelector0 = mock(AndSelector.class, new ViolatedAssumptionAnswer());
      jspC0.addAnd(andSelector0);
      ExtendSelector extendSelector0 = mock(ExtendSelector.class, new ViolatedAssumptionAnswer());
      jspC0.addCustom(extendSelector0);
      jspC0.setFailonerror(false);
      jspC0.getPackage();
      jspC0.getUribase();
      jspC0.isMapped();
      jspC0.getPackage();
      jspC0.getWebApp();
      jspC0.createClasspath();
      jspC0.getDestdir();
      jspC0.createCompilerclasspath();
      JspMangler jspMangler0 = mock(JspMangler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jspC0.mapToJavaFile(jspMangler0, (File) null, (File) null, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.JspC", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getSrcDir();
      jspC0.resetFileLists();
      jspC0.setVerbose((-1));
      jspC0.getClasspath();
      jspC0.setClasspath((Path) null);
      try { 
        jspC0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // destdir attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.JspC", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.getUribase();
      // Undeclared exception!
      try { 
        jspC0.setUribase((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JspC jspC0 = new JspC();
      JspC.WebAppParameter jspC_WebAppParameter0 = new JspC.WebAppParameter();
      jspC_WebAppParameter0.getDirectory();
      jspC0.setDestdir((File) null);
      jspC0.getWebinc();
      Path path0 = jspC0.getSrcDir();
      assertNull(path0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JspC jspC0 = new JspC();
      jspC0.maybeConfigure();
      jspC0.hasSelectors();
      jspC0.getDestdir();
      // Undeclared exception!
      try { 
        jspC0.setUribase((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }
}
