/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:09:03 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.clearcase;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CCUpdate_ESTest extends CCUpdate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      cCUpdate0.setRename(false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      cCUpdate0.setPreserveTime(false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      cCUpdate0.setOverwrite(true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      cCUpdate0.setLog("");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      cCUpdate0.setGraphical(false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      cCUpdate0.setCurrentTime(false);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      boolean boolean0 = cCUpdate0.getRename();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      boolean boolean0 = cCUpdate0.getPreserveTime();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      boolean boolean0 = cCUpdate0.getOverwrite();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      String string0 = cCUpdate0.getLog();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      boolean boolean0 = cCUpdate0.getGraphical();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      boolean boolean0 = cCUpdate0.getCurrentTime();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      cCUpdate0.setViewPath("JEKGj>\"'mjM");
      try { 
        cCUpdate0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Can't handle single and double quotes in same argument
         //
         verifyException("org.apache.tools.ant.types.Commandline", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CCUpdate cCUpdate0 = new CCUpdate();
      // Undeclared exception!
      try { 
        cCUpdate0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate", e);
      }
  }
}
