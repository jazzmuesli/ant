/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:57:07 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.clearcase;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CCMklbtype_ESTest extends CCMklbtype_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setVOB("V");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setShared(false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setReplace(true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setPbranch(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setOrdinary(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setGlobal(true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setCommentFile("'");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setComment((String) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      String string0 = cCMklbtype0.getVOB();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      String string0 = cCMklbtype0.getTypeName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      boolean boolean0 = cCMklbtype0.getShared();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      boolean boolean0 = cCMklbtype0.getReplace();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      boolean boolean0 = cCMklbtype0.getPbranch();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      boolean boolean0 = cCMklbtype0.getOrdinary();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      boolean boolean0 = cCMklbtype0.getGlobal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      String string0 = cCMklbtype0.getCommentFile();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      String string0 = cCMklbtype0.getComment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      try { 
        cCMklbtype0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Required attribute TypeName not specified
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CCMklbtype cCMklbtype0 = new CCMklbtype();
      cCMklbtype0.setTypeName("uT$C p~}NUA8;=(*");
      // Undeclared exception!
      try { 
        cCMklbtype0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase", e);
      }
  }
}
