/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:29:27 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.ssh;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.ssh.SSHExec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SSHExec_ESTest extends SSHExec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SSHExec sSHExec0 = new SSHExec();
      sSHExec0.setTimeout(1L);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SSHExec sSHExec0 = new SSHExec();
      sSHExec0.setOutputproperty("{(ZtY");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SSHExec sSHExec0 = new SSHExec();
      sSHExec0.setOutput((File) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SSHExec sSHExec0 = new SSHExec();
      sSHExec0.setCommand("Gj@^\"#&|rs{Be#");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SSHExec sSHExec0 = new SSHExec();
      sSHExec0.setAppend(true);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SSHExec sSHExec0 = new SSHExec();
      try { 
        sSHExec0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Host is required.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.ssh.SSHExec", e);
      }
  }
}
