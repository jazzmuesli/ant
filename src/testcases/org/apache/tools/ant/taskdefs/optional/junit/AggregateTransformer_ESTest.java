/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:23:12 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.junit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import javax.xml.parsers.DocumentBuilderFactory;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AggregateTransformer_ESTest extends AggregateTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      AggregateTransformer.Format aggregateTransformer_Format0 = new AggregateTransformer.Format();
      aggregateTransformer0.setFormat(aggregateTransformer_Format0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      aggregateTransformer0.setExtension("tx-;s);sXU6~bPAShK");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(project0).resolveFile(anyString());
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn(project0).when(task0).getProject();
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      aggregateTransformer0.checkOptions();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AggregateTransformer.Format aggregateTransformer_Format0 = new AggregateTransformer.Format();
      String[] stringArray0 = aggregateTransformer_Format0.getValues();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      aggregateTransformer0.setXmlDocument((Document) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      aggregateTransformer0.setTodir((File) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      aggregateTransformer0.setStyledir((File) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DocumentBuilderFactory documentBuilderFactory0 = AggregateTransformer.getDocumentBuilderFactory();
      assertNotNull(documentBuilderFactory0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      // Undeclared exception!
      try { 
        aggregateTransformer0.transform();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(project0).resolveFile(anyString());
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn(project0).when(task0).getProject();
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      // Undeclared exception!
      try { 
        aggregateTransformer0.transform();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      try { 
        aggregateTransformer0.setXmlfile((File) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Error while parsing document: null
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      // Undeclared exception!
      try { 
        aggregateTransformer0.setFormat((AggregateTransformer.Format) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer((Task) null);
      // Undeclared exception!
      try { 
        aggregateTransformer0.setExtension((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      try { 
        aggregateTransformer0.getStylesheetSystemId();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // Could not find jar resource junit-frames.xsl
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      AggregateTransformer aggregateTransformer0 = new AggregateTransformer(task0);
      // Undeclared exception!
      try { 
        aggregateTransformer0.checkOptions();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer", e);
      }
  }
}
