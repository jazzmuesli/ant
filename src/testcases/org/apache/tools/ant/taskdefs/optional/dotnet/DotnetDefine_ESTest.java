/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:48:34 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.dotnet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Location;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DotnetDefine_ESTest extends DotnetDefine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DotnetDefine dotnetDefine0 = new DotnetDefine();
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      boolean boolean0 = dotnetDefine0.isSet(task0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DotnetDefine dotnetDefine0 = new DotnetDefine();
      dotnetDefine0.setName("IDij(Xq<sIV");
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      String string0 = dotnetDefine0.getValue(task0);
      assertEquals("IDij(Xq<sIV", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DotnetDefine dotnetDefine0 = new DotnetDefine();
      String string0 = dotnetDefine0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DotnetDefine dotnetDefine0 = new DotnetDefine();
      dotnetDefine0.setUnless("IDij(Xq<sIV");
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      // Undeclared exception!
      try { 
        dotnetDefine0.isSet(task0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DotnetDefine dotnetDefine0 = new DotnetDefine();
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Location) null).when(task0).getLocation();
      try { 
        dotnetDefine0.getValue(task0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No name provided for the define element
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DotnetDefine dotnetDefine0 = new DotnetDefine();
      dotnetDefine0.setName("Kl*Z");
      dotnetDefine0.setIf("Kl*Z");
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      // Undeclared exception!
      try { 
        dotnetDefine0.getValue(task0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine", e);
      }
  }
}
