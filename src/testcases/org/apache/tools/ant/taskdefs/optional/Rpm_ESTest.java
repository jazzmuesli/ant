/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:50:58 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.Rpm;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Rpm_ESTest extends Rpm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      rpm0.setSpecFile("$m");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      rpm0.setTopDir(file0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      rpm0.setRemoveSpec(true);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      rpm0.setRemoveSource(true);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      rpm0.setOutput(file0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      rpm0.setError(file0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      rpm0.setCleanBuildDir(true);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      // Undeclared exception!
      try { 
        rpm0.setSpecFile("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must specify a spec file
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.Rpm", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      rpm0.setCommand("U\"");
      try { 
        rpm0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // unbalanced quotes in U\"
         //
         verifyException("org.apache.tools.ant.types.Commandline", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Rpm rpm0 = new Rpm();
      // Undeclared exception!
      try { 
        rpm0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.Rpm", e);
      }
  }
}
