/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:37:18 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.sos;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.sos.SOSCheckin;
import org.apache.tools.ant.taskdefs.optional.sos.SOSCheckout;
import org.apache.tools.ant.taskdefs.optional.sos.SOSGet;
import org.apache.tools.ant.taskdefs.optional.sos.SOSLabel;
import org.apache.tools.ant.types.Commandline;
import org.apache.tools.ant.types.Path;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SOS_ESTest extends SOS_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      sOSCheckout0.setProjectPath("3O'");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      Path path0 = mock(Path.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(path0).toString();
      sOSGet0.setLocalPath(path0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      sOSGet0.setVssServerPath("YhB9y;|'w");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      sOSLabel0.setVerbose(true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      sOSLabel0.setUsername("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      sOSCheckout0.setSosServerPath((String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      sOSGet0.setSosHome("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      sOSLabel0.setSosCmd("");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      sOSGet0.setPassword("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      sOSGet0.setNoCompress(true);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      sOSGet0.setNoCache(false);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      sOSCheckout0.setInternalVersion("");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SOSCheckin sOSCheckin0 = new SOSCheckin();
      sOSCheckin0.setInternalRecursive(false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      sOSGet0.setInternalLabel("");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      sOSGet0.setInternalFilename("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      sOSCheckout0.setInternalComment("@0sx^yE#\"Yx6");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      String string0 = sOSCheckout0.getVssServerPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      String string0 = sOSLabel0.getVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      String string0 = sOSCheckout0.getVerbose();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      String string0 = sOSLabel0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SOSCheckin sOSCheckin0 = new SOSCheckin();
      String string0 = sOSCheckin0.getSosServerPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SOSCheckin sOSCheckin0 = new SOSCheckin();
      String string0 = sOSCheckin0.getSosHome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      String string0 = sOSLabel0.getSosCommand();
      assertEquals("soscmd", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      String string0 = sOSLabel0.getRecursive();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SOSCheckin sOSCheckin0 = new SOSCheckin();
      String string0 = sOSCheckin0.getProjectPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      String string0 = sOSCheckout0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SOSCheckin sOSCheckin0 = new SOSCheckin();
      String string0 = sOSCheckin0.getNoCompress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SOSCheckin sOSCheckin0 = new SOSCheckin();
      String string0 = sOSCheckin0.getNoCache();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      String string0 = sOSGet0.getLabel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      String string0 = sOSLabel0.getFilename();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      String string0 = sOSLabel0.getComment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SOSCheckin sOSCheckin0 = new SOSCheckin();
      // Undeclared exception!
      try { 
        sOSCheckin0.setProjectPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sos.SOS", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      // Undeclared exception!
      try { 
        sOSCheckout0.setLocalPath((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sos.SOS", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SOSGet sOSGet0 = new SOSGet();
      // Undeclared exception!
      try { 
        sOSGet0.run((Commandline) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sos.SOS", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      // Undeclared exception!
      try { 
        sOSLabel0.getRequiredAttributes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sos.SOS", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      // Undeclared exception!
      try { 
        sOSCheckout0.getOptionalAttributes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sos.SOS", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SOSCheckout sOSCheckout0 = new SOSCheckout();
      // Undeclared exception!
      try { 
        sOSCheckout0.getLocalPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sos.SOS", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SOSLabel sOSLabel0 = new SOSLabel();
      try { 
        sOSLabel0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // sosserverpath attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sos.SOS", e);
      }
  }
}
