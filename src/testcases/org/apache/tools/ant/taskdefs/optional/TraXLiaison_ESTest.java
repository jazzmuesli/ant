/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:49:11 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import javax.xml.transform.TransformerException;
import javax.xml.transform.URIResolver;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.XSLTLogger;
import org.apache.tools.ant.taskdefs.optional.TraXLiaison;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TraXLiaison_ESTest extends TraXLiaison_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      String string0 = "DtI;lKeIP6wnlt";
      String string1 = "6)fYr)`0kA";
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      URIResolver uRIResolver0 = mock(URIResolver.class, new ViolatedAssumptionAnswer());
      XSLTLogger xSLTLogger0 = mock(XSLTLogger.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setLogger(xSLTLogger0);
      // Undeclared exception!
      try { 
        traXLiaison0.error((TransformerException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.TraXLiaison", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      traXLiaison0.setOutputProperty("[", (String) null);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("").when(file0).getAbsolutePath();
      String string0 = traXLiaison0.getSystemId(file0);
      assertEquals("file:", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setStylesheet(file0);
      String string0 = "dc";
      traXLiaison0.setFactory("dc");
      traXLiaison0.setOutputProperty("I/O exception trying to resolve", "I/O exception trying to resolve");
      TransformerException transformerException0 = mock(TransformerException.class, new ViolatedAssumptionAnswer());
      traXLiaison0.addParam("dc", "");
      traXLiaison0.warning(transformerException0);
      TransformerException transformerException1 = mock(TransformerException.class, new ViolatedAssumptionAnswer());
      traXLiaison0.error(transformerException1);
      traXLiaison0.addParam("-#:5#1X)$j_@'*J#O", "");
      String string1 = "s>K6HK";
      XSLTLogger xSLTLogger0 = mock(XSLTLogger.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setLogger(xSLTLogger0);
      File file1 = mock(File.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setStylesheet(file1);
      traXLiaison0.setAttribute("yMz<DTZo-0~n):#;}M'", "s>K6HK");
      URIResolver uRIResolver0 = mock(URIResolver.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setURIResolver(uRIResolver0);
      traXLiaison0.setOutputProperty("I/O exception trying to resolve", "=A");
      TransformerException transformerException2 = null;
      // Undeclared exception!
      try { 
        traXLiaison0.fatalError((TransformerException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.TraXLiaison", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      EntityResolver entityResolver0 = mock(EntityResolver.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setEntityResolver(entityResolver0);
      traXLiaison0.setFactory((String) null);
      TransformerException transformerException0 = mock(TransformerException.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        traXLiaison0.fatalError(transformerException0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Fatal error during transformation
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.TraXLiaison", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      // Undeclared exception!
      try { 
        traXLiaison0.getSystemId(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      traXLiaison0.setFactory("yz");
      traXLiaison0.setAttribute("S", "S");
      traXLiaison0.setAttribute("", "");
      traXLiaison0.setAttribute("", "[X$+5");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      URIResolver uRIResolver0 = mock(URIResolver.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setURIResolver(uRIResolver0);
      TransformerException transformerException0 = mock(TransformerException.class, new ViolatedAssumptionAnswer());
      traXLiaison0.warning(transformerException0);
      TransformerException transformerException1 = mock(TransformerException.class, new ViolatedAssumptionAnswer());
      traXLiaison0.error(transformerException1);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setStylesheet(file0);
      traXLiaison0.addParam("-HF)r,hh'9RO@hf)uK9", "");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      traXLiaison0.setOutputProperty("&#DP@E0", "&#DP@E0");
      String string0 = "qLJBrE/&R.dr";
      String string1 = null;
      traXLiaison0.addParam("qLJBrE/&R.dr", (String) null);
      XSLTLogger xSLTLogger0 = mock(XSLTLogger.class, new ViolatedAssumptionAnswer());
      traXLiaison0.setOutputProperty((String) null, "");
      traXLiaison0.setLogger(xSLTLogger0);
      TransformerException transformerException0 = null;
      // Undeclared exception!
      try { 
        traXLiaison0.warning((TransformerException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.TraXLiaison", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      String string0 = "Resolved URI";
      TransformerException transformerException0 = mock(TransformerException.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        traXLiaison0.fatalError(transformerException0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Fatal error during transformation
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.TraXLiaison", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TraXLiaison traXLiaison0 = new TraXLiaison();
      String string0 = "Resolved system";
      traXLiaison0.addParam("Resolved system", "Resolved system");
      traXLiaison0.setOutputProperty("Resolved system", "-//OASIS//DTD XML Catalogs V1.0//EN");
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      try { 
        traXLiaison0.transform(file0, file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URIResolver uRIResolver0 = mock(URIResolver.class, new ViolatedAssumptionAnswer());
  }
}
