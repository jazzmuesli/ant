/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:09:32 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.sound;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import javax.sound.sampled.LineEvent;
import org.apache.tools.ant.BuildEvent;
import org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AntSoundPlayer_ESTest extends AntSoundPlayer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Throwable) null, (Throwable) null).when(buildEvent0).getException();
      antSoundPlayer0.buildFinished(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      antSoundPlayer0.taskStarted(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      antSoundPlayer0.taskFinished(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      antSoundPlayer0.targetStarted((BuildEvent) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      antSoundPlayer0.targetFinished((BuildEvent) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      antSoundPlayer0.messageLogged((BuildEvent) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      antSoundPlayer0.buildStarted((BuildEvent) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Long long0 = new Long((-3721));
      antSoundPlayer0.addBuildSuccessfulSound(file0, (-1227), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Long long0 = new Long((-3721));
      antSoundPlayer0.addBuildFailedSound(file0, (-3721), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      LineEvent lineEvent0 = mock(LineEvent.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        antSoundPlayer0.update(lineEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AntSoundPlayer antSoundPlayer0 = new AntSoundPlayer();
      // Undeclared exception!
      try { 
        antSoundPlayer0.buildFinished((BuildEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer", e);
      }
  }
}
