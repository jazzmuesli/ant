/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 23:00:44 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.sitraka;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.sitraka.Triggers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Triggers_ESTest extends Triggers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Triggers.Method triggers_Method0 = new Triggers.Method();
      triggers_Method0.action = "";
      triggers_Method0.event = "";
      String string0 = triggers_Method0.toString();
      assertEquals("null:null:null", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Triggers triggers0 = new Triggers();
      String string0 = triggers0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Triggers.Method triggers_Method0 = new Triggers.Method();
      triggers_Method0.setParam("");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Triggers.Method triggers_Method0 = new Triggers.Method();
      triggers_Method0.setName("");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Triggers.Method triggers_Method0 = new Triggers.Method();
      // Undeclared exception!
      try { 
        triggers_Method0.setEvent("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Invalid event, must be one of {clear=C, exit=X, resume=R, suspend=A, pause=P, snapshot=S}
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Triggers$Method", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Triggers.Method triggers_Method0 = new Triggers.Method();
      try { 
        triggers_Method0.setAction("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Invalid action, must be one of {enter=E, exit=X}
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Triggers$Method", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Triggers triggers0 = new Triggers();
      Triggers.Method triggers_Method0 = new Triggers.Method();
      triggers0.addMethod(triggers_Method0);
      // Undeclared exception!
      try { 
        triggers0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Triggers triggers0 = new Triggers();
      Triggers.Method triggers_Method0 = new Triggers.Method();
      triggers0.triggers = null;
      // Undeclared exception!
      try { 
        triggers0.addMethod(triggers_Method0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Triggers", e);
      }
  }
}
