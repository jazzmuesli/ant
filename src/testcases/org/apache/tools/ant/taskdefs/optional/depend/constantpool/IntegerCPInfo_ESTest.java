/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:50:37 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.depend.constantpool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import org.apache.tools.ant.taskdefs.optional.depend.constantpool.IntegerCPInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IntegerCPInfo_ESTest extends IntegerCPInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntegerCPInfo integerCPInfo0 = new IntegerCPInfo();
      String string0 = integerCPInfo0.toString();
      assertEquals("Integer Constant Pool Entry: null", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IntegerCPInfo integerCPInfo0 = new IntegerCPInfo();
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        integerCPInfo0.read(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
}
