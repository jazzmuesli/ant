/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:00:07 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.dotnet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Hashtable;
import org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask;
import org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.selectors.DateSelector;
import org.apache.tools.ant.types.selectors.NoneSelector;
import org.apache.tools.ant.types.selectors.SelectSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DotnetBaseMatchingTask_ESTest extends DotnetBaseMatchingTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DotnetBaseMatchingTask dotnetBaseMatchingTask0 = new DotnetBaseMatchingTask();
      SelectSelector selectSelector0 = mock(SelectSelector.class, new ViolatedAssumptionAnswer());
      dotnetBaseMatchingTask0.addSelector(selectSelector0);
      SelectSelector selectSelector1 = mock(SelectSelector.class, new ViolatedAssumptionAnswer());
      dotnetBaseMatchingTask0.addSelector(selectSelector1);
      dotnetBaseMatchingTask0.getDestFile();
      NoneSelector noneSelector0 = mock(NoneSelector.class, new ViolatedAssumptionAnswer());
      dotnetBaseMatchingTask0.addNone(noneSelector0);
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      dotnetBaseMatchingTask0.addSrc(fileSet0);
      FileSet fileSet1 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      DateSelector dateSelector0 = mock(DateSelector.class, new ViolatedAssumptionAnswer());
      dotnetBaseMatchingTask0.addDate(dateSelector0);
      dotnetBaseMatchingTask0.addSrc(fileSet1);
      dotnetBaseMatchingTask0.getSrcDir();
      dotnetBaseMatchingTask0.setSrcDir((File) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DotnetBaseMatchingTask dotnetBaseMatchingTask0 = new DotnetBaseMatchingTask();
      dotnetBaseMatchingTask0.setDestFile((File) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DotnetBaseMatchingTask dotnetBaseMatchingTask0 = new DotnetBaseMatchingTask();
      long long0 = dotnetBaseMatchingTask0.getOutputFileTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DotnetBaseMatchingTask dotnetBaseMatchingTask0 = new DotnetBaseMatchingTask();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DotnetBaseMatchingTask dotnetBaseMatchingTask0 = new DotnetBaseMatchingTask();
      dotnetBaseMatchingTask0.filesets = null;
      // Undeclared exception!
      try { 
        dotnetBaseMatchingTask0.addSrc((FileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DotnetBaseMatchingTask dotnetBaseMatchingTask0 = new DotnetBaseMatchingTask();
      NetCommand netCommand0 = mock(NetCommand.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dotnetBaseMatchingTask0.addFilesToCommand((Hashtable) null, netCommand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask", e);
      }
  }
}
