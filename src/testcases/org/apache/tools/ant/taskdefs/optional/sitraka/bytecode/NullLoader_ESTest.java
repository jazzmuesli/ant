/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:30:07 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.sitraka.bytecode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.io.File;
import org.apache.tools.ant.taskdefs.optional.sitraka.bytecode.ClassFile;
import org.apache.tools.ant.taskdefs.optional.sitraka.bytecode.NullLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NullLoader_ESTest extends NullLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      NullLoader nullLoader0 = new NullLoader(file0);
      ClassFile[] classFileArray0 = nullLoader0.getClasses();
      assertEquals(0, classFileArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullLoader nullLoader0 = new NullLoader();
      File file0 = nullLoader0.getFile();
      assertNull(file0);
  }
}
