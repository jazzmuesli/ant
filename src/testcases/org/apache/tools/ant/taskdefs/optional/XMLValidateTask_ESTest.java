/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:24:14 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.XMLValidateTask;
import org.apache.tools.ant.types.DTDLocation;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.apache.tools.ant.types.XMLCatalog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;
import org.xml.sax.SAXParseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLValidateTask_ESTest extends XMLValidateTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      xMLValidateTask0.setWarn(false);
      SAXParseException sAXParseException0 = mock(SAXParseException.class, new ViolatedAssumptionAnswer());
      xMLValidateTask0.errorHandler.warning(sAXParseException0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.ValidatorErrorHandler xMLValidateTask_ValidatorErrorHandler0 = xMLValidateTask0.new ValidatorErrorHandler();
      SAXParseException sAXParseException0 = mock(SAXParseException.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sAXParseException0).getMessage();
      doReturn((String) null).when(sAXParseException0).getSystemId();
      // Undeclared exception!
      try { 
        xMLValidateTask_ValidatorErrorHandler0.warning(sAXParseException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.ValidatorErrorHandler xMLValidateTask_ValidatorErrorHandler0 = xMLValidateTask0.new ValidatorErrorHandler();
      xMLValidateTask_ValidatorErrorHandler0.init((File) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.ValidatorErrorHandler xMLValidateTask_ValidatorErrorHandler0 = xMLValidateTask0.errorHandler;
      SAXParseException sAXParseException0 = mock(SAXParseException.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sAXParseException0).getMessage();
      doReturn((String) null).when(sAXParseException0).getSystemId();
      // Undeclared exception!
      try { 
        xMLValidateTask_ValidatorErrorHandler0.fatalError(sAXParseException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.ValidatorErrorHandler xMLValidateTask_ValidatorErrorHandler0 = xMLValidateTask0.errorHandler;
      SAXParseException sAXParseException0 = mock(SAXParseException.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sAXParseException0).getMessage();
      doReturn((String) null).when(sAXParseException0).getSystemId();
      // Undeclared exception!
      try { 
        xMLValidateTask_ValidatorErrorHandler0.error(sAXParseException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.ValidatorErrorHandler xMLValidateTask_ValidatorErrorHandler0 = xMLValidateTask0.new ValidatorErrorHandler();
      boolean boolean0 = xMLValidateTask_ValidatorErrorHandler0.getFailure();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.Attribute xMLValidateTask_Attribute0 = xMLValidateTask0.createAttribute();
      xMLValidateTask_Attribute0.setValue(false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.Attribute xMLValidateTask_Attribute0 = xMLValidateTask0.createAttribute();
      xMLValidateTask_Attribute0.setName((String) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.Attribute xMLValidateTask_Attribute0 = xMLValidateTask0.new Attribute();
      String string0 = xMLValidateTask_Attribute0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      xMLValidateTask0.setLenient(false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      xMLValidateTask0.setFile((File) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      xMLValidateTask0.setFailOnError(false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      xMLValidateTask0.setClasspathRef(reference0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      xMLValidateTask0.setClasspath((Path) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      xMLValidateTask0.setClassName("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      xMLValidateTask0.init();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      EntityResolver entityResolver0 = xMLValidateTask0.getEntityResolver();
      assertNotNull(entityResolver0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      DTDLocation dTDLocation0 = xMLValidateTask0.createDTD();
      assertNotNull(dTDLocation0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      Path path0 = xMLValidateTask0.createClasspath();
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLValidateTask.Attribute xMLValidateTask_Attribute0 = xMLValidateTask0.createAttribute();
      boolean boolean0 = xMLValidateTask_Attribute0.getValue();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      try { 
        xMLValidateTask0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Specify at least one source - a file or a fileset.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.XMLValidateTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      xMLValidateTask0.addFileset(fileSet0);
      // Undeclared exception!
      try { 
        xMLValidateTask0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLValidateTask xMLValidateTask0 = new XMLValidateTask();
      XMLCatalog xMLCatalog0 = mock(XMLCatalog.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xMLValidateTask0.addConfiguredXMLCatalog(xMLCatalog0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.XMLCatalog", e);
      }
  }
}
