/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:20:13 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.extension;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.extension.Extension;
import org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter;
import org.apache.tools.ant.types.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExtensionAdapter_ESTest extends ExtensionAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setExtensionName("KZ");
      String string0 = extensionAdapter0.toString();
      assertEquals("{Extension-Name: KZ\n}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setExtensionName("<6GfY/fY;");
      Extension extension0 = extensionAdapter0.toExtension();
      assertNotNull(extension0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setSpecificationVersion("");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setImplementationVersion("");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setSpecificationVendor("K/)Hzc");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setImplementationVendorId("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setImplementationUrl("k3<!zi,bPyzu");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      // Undeclared exception!
      try { 
        extensionAdapter0.toString();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Extension is missing name.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      try { 
        extensionAdapter0.toExtension();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Extension is missing name.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      // Undeclared exception!
      try { 
        extensionAdapter0.setSpecificationVersion("FG6!I!$nUO~Ka!");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"FG6!I!$nUO~Ka!\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      // Undeclared exception!
      try { 
        extensionAdapter0.setSpecificationVersion((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      extensionAdapter0.setImplementationVendor("");
      try { 
        extensionAdapter0.setRefid((Reference) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not specify more than one attribute when using refid
         //
         verifyException("org.apache.tools.ant.types.DataType", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      // Undeclared exception!
      try { 
        extensionAdapter0.setRefid((Reference) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      // Undeclared exception!
      try { 
        extensionAdapter0.setImplementationVersion("sHmT7m<~yJ0<zF/");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"sHmT7m<~yJ0<zF/\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      // Undeclared exception!
      try { 
        extensionAdapter0.setImplementationVersion((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExtensionAdapter extensionAdapter0 = new ExtensionAdapter();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn(extensionAdapter0).when(reference0).getReferencedObject(any(org.apache.tools.ant.Project.class));
      extensionAdapter0.setRefid(reference0);
      // Undeclared exception!
      try { 
        extensionAdapter0.setImplementationVendor("LZ}QG'b$^B%Plr{D?S");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not specify more than one attribute when using refid
         //
         verifyException("org.apache.tools.ant.types.DataType", e);
      }
  }
}
