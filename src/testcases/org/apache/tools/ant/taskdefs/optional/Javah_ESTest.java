/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:06:30 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.Javah;
import org.apache.tools.ant.types.Commandline;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Javah_ESTest extends Javah_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Javah javah0 = new Javah();
      Path path0 = javah0.createClasspath();
      javah0.setClasspath(path0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Javah javah0 = new Javah();
      Javah.ClassArgument javah_ClassArgument0 = javah0.createClass();
      // Undeclared exception!
      try { 
        javah_ClassArgument0.setName("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Javah javah0 = new Javah();
      Javah.ClassArgument javah_ClassArgument0 = javah0.new ClassArgument();
      String string0 = javah_ClassArgument0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Javah javah0 = new Javah();
      javah0.setVerbose(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Javah javah0 = new Javah();
      javah0.setStubs(false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Javah javah0 = new Javah();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      javah0.setOutputFile(file0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Javah javah0 = new Javah();
      javah0.setOld(false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Javah javah0 = new Javah();
      javah0.setForce(false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Javah javah0 = new Javah();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      javah0.setDestdir(file0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Javah javah0 = new Javah();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      javah0.setClasspathRef(reference0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Javah javah0 = new Javah();
      javah0.setClass("@v}V~;BR`'~~%D-c");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Javah javah0 = new Javah();
      Path path0 = javah0.createBootclasspath();
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Javah javah0 = new Javah();
      Path path0 = javah0.createClasspath();
      javah0.setBootclasspath(path0);
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(reference0).getRefId();
      doReturn((Object) null, (Object) null).when(reference0).getReferencedObject(any(org.apache.tools.ant.Project.class));
      javah0.setBootClasspathRef(reference0);
      // Undeclared exception!
      try { 
        javah0.setClasspath(path0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't denote a path null
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Javah javah0 = new Javah();
      Path path0 = javah0.createClasspath();
      javah0.setBootclasspath(path0);
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(reference0).getRefId();
      doReturn((Object) null, (Object) null).when(reference0).getReferencedObject(any(org.apache.tools.ant.Project.class));
      javah0.setBootClasspathRef(reference0);
      // Undeclared exception!
      try { 
        javah0.setBootclasspath(path0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't denote a path null
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Javah javah0 = new Javah();
      Commandline commandline0 = mock(Commandline.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(commandline0).describeArguments();
      // Undeclared exception!
      try { 
        javah0.logAndAddFilesToCompile(commandline0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Javah javah0 = new Javah();
      try { 
        javah0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // class attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.Javah", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Javah javah0 = new Javah();
      javah0.createClass();
      // Undeclared exception!
      try { 
        javah0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.Javah", e);
      }
  }
}
