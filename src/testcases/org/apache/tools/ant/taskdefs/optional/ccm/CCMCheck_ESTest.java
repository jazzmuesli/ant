/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:01:22 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.ccm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck;
import org.apache.tools.ant.types.FileSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CCMCheck_ESTest extends CCMCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      cCMCheck0.addFileset((FileSet) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      cCMCheck0.setTask("");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      cCMCheck0.setComment((String) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      String string0 = cCMCheck0.getTask();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      File file0 = cCMCheck0.getFile();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      String string0 = cCMCheck0.getComment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      // Undeclared exception!
      try { 
        cCMCheck0.setFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      try { 
        cCMCheck0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Specify at least one source - a file or a fileset.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      cCMCheck0.filesets = null;
      // Undeclared exception!
      try { 
        cCMCheck0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CCMCheck cCMCheck0 = new CCMCheck();
      cCMCheck0.filesets = null;
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        cCMCheck0.addFileset(fileSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck", e);
      }
  }
}
