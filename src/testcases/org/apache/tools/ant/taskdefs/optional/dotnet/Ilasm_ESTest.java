/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:13:41 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.dotnet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm;
import org.apache.tools.ant.types.FileSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Ilasm_ESTest extends Ilasm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ilasm.TargetTypes ilasm_TargetTypes0 = new Ilasm.TargetTypes();
      String[] stringArray0 = ilasm_TargetTypes0.getValues();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setVerbose(false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      Ilasm.TargetTypes ilasm_TargetTypes0 = new Ilasm.TargetTypes();
      ilasm0.setTargetType(ilasm_TargetTypes0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setResourceFile((File) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setOutputFile((File) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setListing(true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setKeyfile((File) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setFailOnError(false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setExtraOptions((String) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.setDebug(true);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      boolean boolean0 = ilasm0.notEmpty("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getVerboseParameter();
      assertEquals("/quiet", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getTargetTypeParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getTargetType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getResourceFileParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getOutputFileParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getListingParameter();
      assertEquals("/nolisting", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getKeyfileParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      boolean boolean0 = ilasm0.getFailOnError();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getExtraOptionsParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getExtraOptions();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      String string0 = ilasm0.getDebugParameter();
      assertEquals("/debug", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      boolean boolean0 = ilasm0.getDebug();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      ilasm0.addReference(fileSet0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      ilasm0.Clear();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      try { 
        ilasm0.setTargetType("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // targetType  is not a valid type
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      // Undeclared exception!
      try { 
        ilasm0.setTargetType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      // Undeclared exception!
      try { 
        ilasm0.setOwner("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        Ilasm.isFileManagedBinary((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Ilasm ilasm0 = new Ilasm();
      // Undeclared exception!
      try { 
        ilasm0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm", e);
      }
  }
}
