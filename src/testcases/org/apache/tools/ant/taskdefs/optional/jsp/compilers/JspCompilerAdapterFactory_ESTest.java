/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:05:48 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.jsp.compilers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.AntClassLoader;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JspCompilerAdapterFactory_ESTest extends JspCompilerAdapterFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AntClassLoader antClassLoader0 = mock(AntClassLoader.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(antClassLoader0).findClass(anyString());
      try { 
        JspCompilerAdapterFactory.getCompiler("ese2?0<{Yr9", task0, antClassLoader0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // ese2?0<{Yr9 caused an interesting exception.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      AntClassLoader antClassLoader0 = mock(AntClassLoader.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        JspCompilerAdapterFactory.getCompiler((String) null, task0, antClassLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((AntClassLoader) null).when(project0).createClassLoader(any(org.apache.tools.ant.types.Path.class));
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn(project0).when(task0).getProject();
      try { 
        JspCompilerAdapterFactory.getCompiler("yYDDmazD5c &`1 r{", task0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // yYDDmazD5c &`1 r{ caused an interesting exception.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Task task0 = mock(Task.class, new ViolatedAssumptionAnswer());
      doReturn((Project) null).when(task0).getProject();
      // Undeclared exception!
      try { 
        JspCompilerAdapterFactory.getCompiler((String) null, task0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory", e);
      }
  }
}
