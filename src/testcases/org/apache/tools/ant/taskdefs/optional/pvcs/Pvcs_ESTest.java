/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:54:44 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.pvcs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.ExecuteStreamHandler;
import org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs;
import org.apache.tools.ant.taskdefs.optional.pvcs.PvcsProject;
import org.apache.tools.ant.types.Commandline;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pvcs_ESTest extends Pvcs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setWorkspace("ld1=f0JPGn@");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setUserId((String) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setUpdateOnly(false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setRevision("F");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setRepository("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setPvcsproject("Id6u#mI 9/4");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setPvcsbin((String) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setPromotiongroup("Id6u#mI 9/4");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setLineStart((String) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setLabel("Id6u#mI 9/4");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setIgnoreReturnCode(false);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setForce((String) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.setFilenameFormat("E;7#,Fg");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getWorkspace();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getUserId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      boolean boolean0 = pvcs0.getUpdateOnly();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getRevision();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getRepository();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      Vector vector0 = pvcs0.getPvcsprojects();
      assertTrue(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getPvcsproject();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getPvcsbin();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getPromotiongroup();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getLineStart();
      assertEquals("\"P:", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getLabel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      boolean boolean0 = pvcs0.getIgnoreReturnCode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getForce();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      String string0 = pvcs0.getFilenameFormat();
      assertEquals("{0}-arc({1})", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      pvcs0.addPvcsproject((PvcsProject) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      Commandline commandline0 = mock(Commandline.class, new ViolatedAssumptionAnswer());
      ExecuteStreamHandler executeStreamHandler0 = mock(ExecuteStreamHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pvcs0.runCmd(commandline0, executeStreamHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Pvcs pvcs0 = new Pvcs();
      try { 
        pvcs0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Required argument repository not specified
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs", e);
      }
  }
}
