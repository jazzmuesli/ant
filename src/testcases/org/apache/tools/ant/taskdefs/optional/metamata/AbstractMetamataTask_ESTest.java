/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:16:36 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.metamata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.ExecuteStreamHandler;
import org.apache.tools.ant.taskdefs.optional.metamata.AbstractMetamataTask;
import org.apache.tools.ant.taskdefs.optional.metamata.MAudit;
import org.apache.tools.ant.taskdefs.optional.metamata.MMetrics;
import org.apache.tools.ant.taskdefs.optional.metamata.MParse;
import org.apache.tools.ant.types.Commandline;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.Path;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractMetamataTask_ESTest extends AbstractMetamataTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MMetrics mMetrics0 = new MMetrics();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Hashtable hashtable0 = mMetrics0.scanSources((Hashtable) null, stringArray0);
      assertNull(hashtable0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      Commandline.Argument commandline_Argument0 = mAudit0.createJvmarg();
      assertNotNull(commandline_Argument0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Enumeration<Object> enumeration0 = (Enumeration<Object>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      AbstractMetamataTask.addAllVector((Vector) null, enumeration0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.setMetamatahome((File) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      mAudit0.setMaxmemory((String) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MMetrics mMetrics0 = new MMetrics();
      mMetrics0.setHome((File) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MMetrics mMetrics0 = new MMetrics();
      Hashtable hashtable0 = mMetrics0.scanSources((Hashtable) null);
      assertTrue(hashtable0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MParse mParse0 = new MParse();
      File file0 = mParse0.getMetamataJar((File) null);
      assertEquals("lib", file0.getParent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      Hashtable hashtable0 = mAudit0.getFileMapping();
      assertNull(hashtable0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      Path path0 = mAudit0.createSourcepath();
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MMetrics mMetrics0 = new MMetrics();
      Path path0 = mMetrics0.createClasspath();
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MMetrics mMetrics0 = new MMetrics();
      mMetrics0.cleanUp();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MMetrics mMetrics0 = new MMetrics();
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      mMetrics0.addFileSet(fileSet0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      try { 
        mAudit0.setUp();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // 'home' must point to Metamata home directory.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.AbstractMetamataTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      // Undeclared exception!
      try { 
        mAudit0.generateOptionsFile((File) null, (Vector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      ExecuteStreamHandler executeStreamHandler0 = mAudit0.createStreamHandler();
      // Undeclared exception!
      try { 
        mAudit0.execute0(executeStreamHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MParse mParse0 = new MParse();
      try { 
        mParse0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // 'metamatahome' must point to Metamata home directory.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.setCleanup(true);
      // Undeclared exception!
      try { 
        mParse0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MMetrics mMetrics0 = new MMetrics();
      // Undeclared exception!
      try { 
        mMetrics0.createTmpFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.AbstractMetamataTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.cmdl = null;
      // Undeclared exception!
      try { 
        mParse0.createJvmarg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.AbstractMetamataTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MAudit mAudit0 = new MAudit();
      try { 
        mAudit0.checkOptions();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // 'home' must point to Metamata home directory.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.AbstractMetamataTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Enumeration<Object> enumeration0 = (Enumeration<Object>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      // Undeclared exception!
      try { 
        AbstractMetamataTask.addAllVector((Vector) null, enumeration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.AbstractMetamataTask", e);
      }
  }
}
