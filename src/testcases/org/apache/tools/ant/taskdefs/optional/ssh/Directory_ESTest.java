/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:59:21 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.ssh;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Iterator;
import org.apache.tools.ant.taskdefs.optional.ssh.Directory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Directory_ESTest extends Directory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = Directory.getPath("BA,Hf|PCs");
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("d17C6`Zl:.R{]").when(file0).getAbsolutePath();
      Directory directory0 = new Directory(file0, (Directory) null);
      String[] stringArray0 = directory0.getPath();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Directory directory0 = new Directory((File) null);
      Directory directory1 = directory0.getChild((File) null);
      assertNull(directory1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Directory directory0 = new Directory(file0, (Directory) null);
      boolean boolean0 = directory0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Directory directory0 = new Directory(file0, (Directory) null);
      boolean boolean0 = directory0.isRoot();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Directory directory0 = new Directory((File) null);
      Directory directory1 = directory0.getParent();
      assertNull(directory1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Directory directory0 = new Directory(file0, (Directory) null);
      File file1 = directory0.getDirectory();
      assertSame(file1, file0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Directory directory0 = new Directory(file0, (Directory) null);
      Iterator iterator0 = directory0.filesIterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Directory directory0 = new Directory(file0);
      int int0 = directory0.fileSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Directory directory0 = new Directory(file0, (Directory) null);
      Iterator iterator0 = directory0.directoryIterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      Directory directory0 = new Directory(file0, (Directory) null);
      File file1 = mock(File.class, new ViolatedAssumptionAnswer());
      directory0.addFile(file1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Directory.getPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      Directory directory0 = new Directory(file0);
      // Undeclared exception!
      try { 
        directory0.getPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Directory directory0 = new Directory((File) null);
      directory0.addDirectory(directory0);
      // Undeclared exception!
      try { 
        directory0.getChild((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.ssh.Directory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Directory directory0 = new Directory((File) null);
      Directory directory1 = new Directory((File) null, directory0);
      // Undeclared exception!
      try { 
        directory1.equals(directory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.ssh.Directory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Directory directory0 = new Directory((File) null);
      Directory directory1 = new Directory((File) null);
      directory0.addDirectory(directory1);
      // Undeclared exception!
      try { 
        directory0.addDirectory(directory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.ssh.Directory", e);
      }
  }
}
