/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:14:51 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.metamata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Vector;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.DummyTaskOk;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.TaskAdapter;
import org.apache.tools.ant.UnknownElement;
import org.apache.tools.ant.taskdefs.optional.metamata.MMetricsStreamHandler;
import org.apache.tools.ant.taskdefs.optional.metamata.MetricsElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MMetricsStreamHandler_ESTest extends MMetricsStreamHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TaskAdapter taskAdapter0 = new TaskAdapter();
      Project project0 = new Project();
      taskAdapter0.setProject(project0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("}l9g|!Nz!1~*W8j");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler(taskAdapter0, objectOutputStream0);
      mMetricsStreamHandler0.processLine("");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DummyTaskOk dummyTaskOk0 = new DummyTaskOk();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler(dummyTaskOk0, pipedOutputStream0);
      Vector<Object> vector0 = new Vector<Object>();
      MetricsElement metricsElement0 = new MetricsElement(0, "", vector0);
      String string0 = mMetricsStreamHandler0.getConstructType(metricsElement0);
      assertEquals("package", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnknownElement unknownElement0 = new UnknownElement("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2045);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler(unknownElement0, mockPrintStream0);
      Vector<Integer> vector0 = new Vector<Integer>();
      MetricsElement metricsElement0 = new MetricsElement(0, "tq", vector0);
      Attributes attributes0 = mMetricsStreamHandler0.createAttributes(metricsElement0);
      assertNotNull(attributes0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, pipedOutputStream0);
      mMetricsStreamHandler0.setProcessOutputStream(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("BW4");
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, mockFileOutputStream0);
      mMetricsStreamHandler0.setProcessInputStream(mockFileOutputStream0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DummyTaskOk dummyTaskOk0 = new DummyTaskOk();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler(dummyTaskOk0, pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-32), (byte) (-124));
      mMetricsStreamHandler0.setProcessErrorStream(byteArrayInputStream0);
      assertEquals((-124), byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, (OutputStream) null);
      // Undeclared exception!
      try { 
        mMetricsStreamHandler0.stop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MMetricsStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, (OutputStream) null);
      Vector<String> vector0 = new Vector<String>();
      MetricsElement metricsElement0 = new MetricsElement(626, "", vector0);
      // Undeclared exception!
      try { 
        mMetricsStreamHandler0.startElement(metricsElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MMetricsStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("BW4");
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, mockFileOutputStream0);
      // Undeclared exception!
      try { 
        mMetricsStreamHandler0.start();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MMetricsStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        mMetricsStreamHandler0.processLine("F2z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MMetricsStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DummyTaskOk dummyTaskOk0 = new DummyTaskOk();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler(dummyTaskOk0, byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        mMetricsStreamHandler0.parseOutput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, dataOutputStream0);
      // Undeclared exception!
      try { 
        mMetricsStreamHandler0.getConstructType((MetricsElement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MMetricsStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MMetricsStreamHandler mMetricsStreamHandler0 = new MMetricsStreamHandler((Task) null, byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        mMetricsStreamHandler0.createAttributes((MetricsElement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MMetricsStreamHandler", e);
      }
  }
}
