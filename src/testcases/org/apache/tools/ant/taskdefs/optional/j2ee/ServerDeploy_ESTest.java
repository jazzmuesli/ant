/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:28:35 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.j2ee;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool;
import org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool;
import org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy;
import org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ServerDeploy_ESTest extends ServerDeploy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      WebLogicHotDeploymentTool webLogicHotDeploymentTool0 = mock(WebLogicHotDeploymentTool.class, new ViolatedAssumptionAnswer());
      serverDeploy0.addWeblogic(webLogicHotDeploymentTool0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      JonasHotDeploymentTool jonasHotDeploymentTool0 = mock(JonasHotDeploymentTool.class, new ViolatedAssumptionAnswer());
      serverDeploy0.addJonas(jonasHotDeploymentTool0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      GenericHotDeploymentTool genericHotDeploymentTool0 = mock(GenericHotDeploymentTool.class, new ViolatedAssumptionAnswer());
      serverDeploy0.addGeneric(genericHotDeploymentTool0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      serverDeploy0.setSource((File) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      serverDeploy0.setAction("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      File file0 = serverDeploy0.getSource();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      String string0 = serverDeploy0.getAction();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      serverDeploy0.execute();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      // Undeclared exception!
      try { 
        serverDeploy0.addWeblogic((WebLogicHotDeploymentTool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      // Undeclared exception!
      try { 
        serverDeploy0.addJonas((JonasHotDeploymentTool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ServerDeploy serverDeploy0 = new ServerDeploy();
      // Undeclared exception!
      try { 
        serverDeploy0.addGeneric((GenericHotDeploymentTool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy", e);
      }
  }
}
