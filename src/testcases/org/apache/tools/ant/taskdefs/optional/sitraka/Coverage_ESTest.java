/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:53:19 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.sitraka;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.taskdefs.optional.sitraka.Coverage;
import org.apache.tools.ant.taskdefs.optional.sitraka.Filters;
import org.apache.tools.ant.taskdefs.optional.sitraka.Socket;
import org.apache.tools.ant.taskdefs.optional.sitraka.Triggers;
import org.apache.tools.ant.types.Commandline;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.Path;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Coverage_ESTest extends Coverage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Integer integer0 = new Integer((-1518));
      coverage0.setWarnlevel(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Coverage.Javavm coverage_Javavm0 = new Coverage.Javavm();
      coverage0.setVm(coverage_Javavm0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Coverage.Recordfromstart coverage_Recordfromstart0 = new Coverage.Recordfromstart();
      coverage0.setRecordfromstart(coverage_Recordfromstart0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Coverage.Recordfromstart coverage_Recordfromstart0 = new Coverage.Recordfromstart();
      String[] stringArray0 = coverage_Recordfromstart0.getValues();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Coverage.Javavm coverage_Javavm0 = new Coverage.Javavm();
      String[] stringArray0 = coverage_Javavm0.getValues();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Coverage.Finalsnapshot coverage_Finalsnapshot0 = new Coverage.Finalsnapshot();
      String[] stringArray0 = coverage_Finalsnapshot0.getValues();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Coverage.CoverageStreamHandler coverage_CoverageStreamHandler0 = new Coverage.CoverageStreamHandler((Task) null);
      // Undeclared exception!
      try { 
        coverage_CoverageStreamHandler0.setProcessInputStream((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Coverage$CoverageStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Coverage.CoverageStreamHandler coverage_CoverageStreamHandler0 = new Coverage.CoverageStreamHandler(coverage0);
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      coverage_CoverageStreamHandler0.setProcessInputStream(outputStream0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setWorkingdir((File) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setTracknatives(false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      File file0 = coverage0.createTempFile((String) null);
      coverage0.setSnapshotdir(file0);
      assertFalse(file0.exists());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setSeedname("");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      File file0 = coverage0.createTempFile("");
      coverage0.setJavaexe(file0);
      assertEquals(0L, file0.lastModified());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setFinalsnapshot("Y39F[@");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setExitprompt("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setClassname("");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setApplet(false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Triggers triggers0 = coverage0.createTriggers();
      assertNotNull(triggers0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Socket socket0 = coverage0.createSocket();
      assertNotNull(socket0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Commandline.Argument commandline_Argument0 = coverage0.createJvmarg();
      assertNotNull(commandline_Argument0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Filters filters0 = coverage0.createFilters();
      assertNotNull(filters0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Path path0 = coverage0.createClasspath();
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      Commandline.Argument commandline_Argument0 = coverage0.createArg();
      assertNotNull(commandline_Argument0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.addFileset((FileSet) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      // Undeclared exception!
      try { 
        coverage0.setWarnlevel((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Coverage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      // Undeclared exception!
      try { 
        coverage0.setVm((Coverage.Javavm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Coverage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      // Undeclared exception!
      try { 
        coverage0.setRecordfromstart((Coverage.Recordfromstart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Coverage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      // Undeclared exception!
      try { 
        coverage0.getParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Coverage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      try { 
        coverage0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Invalid home directory. Must point to JProbe home directory
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Coverage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      File file0 = coverage0.createTempFile("");
      coverage0.setInputfile(file0);
      // Undeclared exception!
      try { 
        coverage0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      // Undeclared exception!
      try { 
        coverage0.createParamFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      try { 
        coverage0.checkOptions();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Invalid home directory. Must point to JProbe home directory
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.sitraka.Coverage", e);
      }
  }
}
