/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:51:09 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.dotnet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.taskdefs.optional.dotnet.CSharp;
import org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource;
import org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CSharp_ESTest extends CSharp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      DotnetResource dotnetResource0 = mock(DotnetResource.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dotnetResource0).getCSharpStyleParameter();
      String string0 = cSharp0.createResourceParameter(dotnetResource0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setUnsafe(true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setOutputFile((File) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setNoConfig(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setIncremental(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setFullPaths(true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setFileAlign(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setDocFile((File) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.setDefinitions("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getUnsafeParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      boolean boolean0 = cSharp0.getUnsafe();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getReferenceDelimiter();
      assertEquals(";", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getNoConfigParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getIncrementalParameter();
      assertEquals("/incremental-", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      boolean boolean0 = cSharp0.getIncremental();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getFullPathsParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getFileExtension();
      assertEquals("cs", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getFileAlignParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getDocFileParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getDefinitionsParameter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      String string0 = cSharp0.getCompilerExeName();
      assertEquals("csc", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      cSharp0.clear();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      // Undeclared exception!
      try { 
        cSharp0.createResourceParameter((DotnetResource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.CSharp", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CSharp cSharp0 = new CSharp();
      // Undeclared exception!
      try { 
        cSharp0.addCompilerSpecificOptions((NetCommand) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.dotnet.CSharp", e);
      }
  }
}
