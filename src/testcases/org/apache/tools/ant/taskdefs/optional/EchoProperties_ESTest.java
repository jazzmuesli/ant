/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:54:55 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import java.util.Hashtable;
import java.util.Properties;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.optional.EchoProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EchoProperties_ESTest extends EchoProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      EchoProperties.FormatAttribute echoProperties_FormatAttribute0 = new EchoProperties.FormatAttribute();
      echoProperties0.setFormat(echoProperties_FormatAttribute0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EchoProperties.FormatAttribute echoProperties_FormatAttribute0 = new EchoProperties.FormatAttribute();
      String[] stringArray0 = echoProperties_FormatAttribute0.getValues();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      echoProperties0.setPrefix("F9N/e+('F8} &");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      echoProperties0.setFailOnError(true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      echoProperties0.setDestfile((File) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        echoProperties0.xmlSaveProperties((Properties) null, outputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.EchoProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      // Undeclared exception!
      try { 
        echoProperties0.setFormat((EchoProperties.FormatAttribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.EchoProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        echoProperties0.saveProperties((Hashtable) null, outputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.EchoProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        echoProperties0.jdkSaveProperties((Properties) null, outputStream0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.EchoProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        echoProperties0.jdk10SaveProperties((Properties) null, outputStream0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.EchoProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(file0).canRead();
      doReturn(true, true).when(file0).exists();
      doReturn(false).when(file0).isDirectory();
      echoProperties0.setSrcfile(file0);
      try { 
        echoProperties0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Can not read from the specified srcfile!
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.EchoProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EchoProperties echoProperties0 = new EchoProperties();
      // Undeclared exception!
      try { 
        echoProperties0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.EchoProperties", e);
      }
  }
}
