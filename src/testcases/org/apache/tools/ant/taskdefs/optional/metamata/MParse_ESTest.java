/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:27:33 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.metamata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Vector;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.ExecuteStreamHandler;
import org.apache.tools.ant.taskdefs.optional.metamata.MParse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MParse_ESTest extends MParse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MParse mParse0 = new MParse();
      File file0 = mParse0.getMetamataJar((File) null);
      mParse0.setTarget(file0);
      Vector vector0 = mParse0.getOptions();
      assertFalse(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.setVerbose(false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.setDebugscanner(false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.setDebugparser(true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MParse mParse0 = new MParse();
      File[] fileArray0 = mParse0.getMetamataLibs();
      assertEquals(2, fileArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.cleanUp();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MParse mParse0 = new MParse();
      try { 
        mParse0.setUp();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // 'metamatahome' must point to Metamata home directory.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MParse mParse0 = new MParse();
      // Undeclared exception!
      try { 
        mParse0.getOptions();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MParse mParse0 = new MParse();
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        mParse0.generateOptionsFile((File) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MParse mParse0 = new MParse();
      try { 
        mParse0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // 'metamatahome' must point to Metamata home directory.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MParse mParse0 = new MParse();
      mParse0.setCleanup(true);
      // Undeclared exception!
      try { 
        mParse0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MParse mParse0 = new MParse();
      try { 
        mParse0.checkOptions();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // 'metamatahome' must point to Metamata home directory.
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MParse mParse0 = new MParse();
      ExecuteStreamHandler executeStreamHandler0 = mParse0.createStreamHandler();
      // Undeclared exception!
      try { 
        mParse0._execute(executeStreamHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.metamata.MParse", e);
      }
  }
}
