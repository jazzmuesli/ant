/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:21:41 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.perforce;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.DirectoryScanner;
import org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat;
import org.apache.tools.ant.types.FileSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class P4Fstat_ESTest extends P4Fstat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      p4Fstat0.setChangelist(3286);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      int int0 = p4Fstat0.getPasses();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      int int0 = p4Fstat0.getLengthOfTask();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      // Undeclared exception!
      try { 
        p4Fstat0.setShowFilter("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // P4Fstat: ShowFilter should be one of: all, existing, non-existing
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      // Undeclared exception!
      try { 
        p4Fstat0.setShowFilter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      try { 
        p4Fstat0.setChangelist((-2577));
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // P4FStat: Changelist# should be a positive number
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "H";
      stringArray0[1] = "";
      stringArray0[2] = "CY T1Eb$";
      stringArray0[3] = "m}t2b(#nVyxMF";
      DirectoryScanner directoryScanner0 = mock(DirectoryScanner.class, new ViolatedAssumptionAnswer());
      doReturn((File) null, (File) null, (File) null, (File) null).when(directoryScanner0).getBasedir();
      doReturn(stringArray0).when(directoryScanner0).getIncludedFiles();
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      doReturn(directoryScanner0).when(fileSet0).getDirectoryScanner(any(org.apache.tools.ant.Project.class));
      p4Fstat0.addFileset(fileSet0);
      try { 
        p4Fstat0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Problem exec'ing P4 command: null
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.perforce.P4Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      P4Fstat p4Fstat0 = new P4Fstat();
      // Undeclared exception!
      try { 
        p4Fstat0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }
}
