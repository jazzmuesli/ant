/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:56:19 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.extension;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import java.util.jar.Manifest;
import org.apache.tools.ant.taskdefs.optional.extension.Specification;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Specification_ESTest extends Specification_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Specification specification0 = new Specification("", "", "", "", "", "", stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Specification specification0 = new Specification("", "", "", "", "", "");
      specification0.getSpecificationTitle();
      Specification specification1 = new Specification("*J-mlNMb)cF", (String) null, "$!g;iepI=B^", "", "", "");
      specification0.toString();
      specification0.getCompatibilityWith(specification1);
      specification1.getSections();
      specification0.getSpecificationVersion();
      specification0.toString();
      specification1.getImplementationVendor();
      specification1.getImplementationTitle();
      specification1.getSections();
      specification1.getImplementationVendor();
      specification1.getSpecificationTitle();
      specification1.isCompatibleWith(specification0);
      Manifest manifest0 = mock(Manifest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(manifest0).getEntries();
      // Undeclared exception!
      try { 
        Specification.getSpecifications(manifest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.Specification", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Specification specification0 = new Specification("", "", "", "", "L~&;-:nb{\"9SjH\"", "L~&;-:nb{\"9SjH\"");
      // Undeclared exception!
      try { 
        specification0.isCompatibleWith((Specification) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.Specification", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Specification specification0 = new Specification("", "", "", "h~7ghqPn", "z8l_}/QYz", "z8l_}/QYz");
      // Undeclared exception!
      try { 
        specification0.getCompatibilityWith((Specification) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.Specification", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Specification specification0 = null;
      try {
        specification0 = new Specification((String) null, (String) null, (String) null, (String) null, "j'b@%rm2r~o", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // specificationTitle
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.Specification", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[6];
      Specification specification0 = null;
      try {
        specification0 = new Specification("#eYVcK}S", "#eYVcK}S", "#eYVcK}S", "#eYVcK}S", "", ":}>6-(`[%|{", stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad specification version format '#eYVcK}S' in '#eYVcK}S'. (Reason: java.lang.NumberFormatException: For input string: \"#eYVcK}S\")
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.Specification", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Specification specification0 = null;
      try {
        specification0 = new Specification((String) null, "", "", "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // specificationTitle
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.Specification", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Specification specification0 = null;
      try {
        specification0 = new Specification("", ":h{DmXVbbh:>fn8_VAa", "", ":h{DmXVbbh:>fn8_VAa", ":h{DmXVbbh:>fn8_VAa", "kT\"=uhA0sS-o2h!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad specification version format ':h{DmXVbbh:>fn8_VAa' in ''. (Reason: java.lang.NumberFormatException: For input string: \":h{DmXVbbh:>fn8_VAa\")
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.extension.Specification", e);
      }
  }
}
