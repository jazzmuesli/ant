/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:48:46 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.junit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import java.util.Enumeration;
import org.apache.tools.ant.taskdefs.ExecuteWatchdog;
import org.apache.tools.ant.taskdefs.optional.junit.BatchTest;
import org.apache.tools.ant.taskdefs.optional.junit.FormatterElement;
import org.apache.tools.ant.taskdefs.optional.junit.JUnitTask;
import org.apache.tools.ant.taskdefs.optional.junit.JUnitTest;
import org.apache.tools.ant.types.Commandline;
import org.apache.tools.ant.types.Environment;
import org.apache.tools.ant.types.Path;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JUnitTask_ESTest extends JUnitTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      JUnitTask.SummaryAttribute jUnitTask_SummaryAttribute0 = new JUnitTask.SummaryAttribute();
      jUnitTask0.setPrintsummary(jUnitTask_SummaryAttribute0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      FormatterElement formatterElement0 = mock(FormatterElement.class, new ViolatedAssumptionAnswer());
      JUnitTest jUnitTest0 = mock(JUnitTest.class, new ViolatedAssumptionAnswer());
      File file0 = jUnitTask0.getOutput(formatterElement0, jUnitTest0);
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.execute();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      ExecuteWatchdog executeWatchdog0 = jUnitTask0.createWatchdog();
      assertNull(executeWatchdog0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JUnitTask.SummaryAttribute jUnitTask_SummaryAttribute0 = new JUnitTask.SummaryAttribute();
      String[] stringArray0 = jUnitTask_SummaryAttribute0.getValues();
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JUnitTask.SummaryAttribute jUnitTask_SummaryAttribute0 = new JUnitTask.SummaryAttribute();
      boolean boolean0 = jUnitTask_SummaryAttribute0.asBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setTempdir((File) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setShowOutput(true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setNewenvironment(false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setMaxmemory("L6nDu&21e&_t&63iD");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setJvm("z[kIeqOODa");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setIncludeantruntime(false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setHaltonfailure(false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setHaltonerror(false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setFork(false);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setFiltertrace(true);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setFailureProperty("");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setErrorProperty("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.setDir((File) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Enumeration enumeration0 = jUnitTask0.getIndividualTests();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      OutputStream outputStream0 = jUnitTask0.getDefaultOutput();
      assertNotNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Commandline.Argument commandline_Argument0 = jUnitTask0.createJvmarg();
      assertNotNull(commandline_Argument0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Path path0 = jUnitTask0.createClasspath();
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      BatchTest batchTest0 = jUnitTask0.createBatchTest();
      assertNotNull(batchTest0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Enumeration enumeration0 = jUnitTask0.allTests();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Environment.Variable environment_Variable0 = mock(Environment.Variable.class, new ViolatedAssumptionAnswer());
      jUnitTask0.addSysproperty(environment_Variable0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      FormatterElement formatterElement0 = mock(FormatterElement.class, new ViolatedAssumptionAnswer());
      jUnitTask0.addFormatter(formatterElement0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Environment.Variable environment_Variable0 = mock(Environment.Variable.class, new ViolatedAssumptionAnswer());
      jUnitTask0.addEnv(environment_Variable0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      // Undeclared exception!
      try { 
        jUnitTask0.setPrintsummary((JUnitTask.SummaryAttribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      // Undeclared exception!
      try { 
        jUnitTask0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      // Undeclared exception!
      try { 
        jUnitTask0.handleOutput("IF-5Q>hq$c/tt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        jUnitTask0.handleInput(byteArray0, (byte)0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      // Undeclared exception!
      try { 
        jUnitTask0.handleFlush("I<!5X@ `64v<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      // Undeclared exception!
      try { 
        jUnitTask0.handleErrorOutput("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      // Undeclared exception!
      try { 
        jUnitTask0.handleErrorFlush("@9+#5lB6/3");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      JUnitTest jUnitTest0 = mock(JUnitTest.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jUnitTask0.getOutput((FormatterElement) null, jUnitTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      JUnitTest jUnitTest0 = mock(JUnitTest.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(jUnitTest0).clone();
      // Undeclared exception!
      try { 
        jUnitTask0.execute(jUnitTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Integer integer0 = new Integer((-4320));
      JUnitTest jUnitTest0 = mock(JUnitTest.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(jUnitTest0).clone();
      // Undeclared exception!
      try { 
        jUnitTask0.execute(jUnitTest0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.apache.tools.ant.taskdefs.optional.junit.JUnitTest
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      jUnitTask0.addTest((JUnitTest) null);
      // Undeclared exception!
      try { 
        jUnitTask0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.optional.junit.JUnitTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      Integer integer0 = new Integer(0);
      jUnitTask0.setTimeout(integer0);
      // Undeclared exception!
      try { 
        jUnitTask0.createWatchdog();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout lesser than 1.
         //
         verifyException("org.apache.tools.ant.util.Watchdog", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JUnitTask jUnitTask0 = new JUnitTask();
      // Undeclared exception!
      try { 
        jUnitTask0.addClasspathEntry("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }
}
