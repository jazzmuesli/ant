/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:07:40 GMT 2020
 */

package org.apache.tools.ant.taskdefs.optional.sitraka;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.taskdefs.optional.sitraka.CovMerge;
import org.apache.tools.ant.taskdefs.optional.sitraka.CovReport;
import org.apache.tools.ant.taskdefs.optional.sitraka.Coverage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CovBase_ESTest extends CovBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CovReport covReport0 = new CovReport();
      String string0 = covReport0.findExecutable("");
      assertEquals("/projects/ant", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      coverage0.setHome((File) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CovMerge covMerge0 = new CovMerge();
      String string0 = covMerge0.getParamFileArgument();
      assertEquals("-jp_paramfile=", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Coverage coverage0 = new Coverage();
      File file0 = coverage0.getHome();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CovMerge covMerge0 = new CovMerge();
      File file0 = covMerge0.findCoverageJar();
      assertFalse(file0.canRead());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CovReport covReport0 = new CovReport();
      File file0 = covReport0.createTempFile((String) null);
      assertEquals("null25822934.tmp", file0.getName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CovReport covReport0 = new CovReport();
      // Undeclared exception!
      try { 
        covReport0.findExecutable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.FileUtils", e);
      }
  }
}
