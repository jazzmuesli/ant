/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:47:51 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Location;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.RuntimeConfigurable;
import org.apache.tools.ant.taskdefs.Javadoc;
import org.apache.tools.ant.types.DirSet;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.apache.tools.ant.types.selectors.ContainsSelector;
import org.apache.tools.ant.types.selectors.FileSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Javadoc_ESTest extends Javadoc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(reference0).getRefId();
      doReturn((Object) null, (Object) null).when(reference0).getReferencedObject(any(org.apache.tools.ant.Project.class));
      javadoc_DocletInfo0.setPathRef(reference0);
      Path path0 = javadoc_DocletInfo0.getPath();
      javadoc_DocletInfo0.createParam();
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc_Html0.getText();
      javadoc_Html0.addText("");
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc_DocletInfo0.createParam();
      javadoc_Html0.getText();
      javadoc_DocletParam0.getValue();
      javadoc_DocletInfo0.createPath();
      javadoc_DocletParam0.setName("");
      javadoc_DocletParam0.getValue();
      // Undeclared exception!
      try { 
        javadoc0.setExtdirs(path0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't denote a path null
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Path path0 = javadoc0.createBootclasspath();
      javadoc0.setSourcepath(path0);
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.getPackagelistLoc();
      javadoc_LinkArgument0.getHref();
      javadoc0.setDoctitle("");
      // Undeclared exception!
      try { 
        javadoc0.setPackagenames((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Javadoc.SourceFile javadoc_SourceFile0 = new Javadoc.SourceFile();
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setPackage(true);
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.getPackagelistLoc();
      javadoc_SourceFile0.setFile((File) null);
      javadoc_SourceFile0.getFile();
      javadoc_SourceFile0.getFile();
      Javadoc javadoc1 = new Javadoc();
      Path path0 = javadoc1.createBootclasspath();
      javadoc1.setBootclasspath(path0);
      String string0 = "x&%>^@S_u";
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc1.addExcludePackage(javadoc_PackageName0);
      javadoc1.setPackagenames("x&%>^@S_u");
      javadoc1.setOld(false);
      javadoc1.createBootclasspath();
      javadoc1.setNohelp(false);
      Javadoc.PackageName javadoc_PackageName1 = new Javadoc.PackageName();
      javadoc_PackageName1.setName("x&%>^@S_u");
      javadoc1.setDoctitle("x&%>^@S_u");
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc1.addHeader(javadoc_Html0);
      javadoc_Html0.getText();
      javadoc0.createBootclasspath();
      // Undeclared exception!
      try { 
        javadoc0.setDestdir((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Path path0 = javadoc0.createClasspath();
      javadoc0.setBootclasspath(path0);
      javadoc0.setWindowtitle("8F 5'*;<'&nN9._t_");
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      javadoc_DocletInfo0.setName("8F 5'*;<'&nN9._t_");
      javadoc_DocletInfo0.getPath();
      javadoc0.createLink();
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc_Html0.addText("8F 5'*;<'&nN9._t_");
      javadoc_Html0.getText();
      javadoc0.addHeader(javadoc_Html0);
      javadoc_DocletInfo0.getName();
      javadoc0.setDoclet("8F 5'*;<'&nN9._t_");
      javadoc0.setEncoding("8F 5'*;<'&nN9._t_");
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc_PackageName0.setName("8F 5'*;<'&nN9._t_");
      javadoc0.addPackage(javadoc_PackageName0);
      javadoc0.setVersion(true);
      javadoc0.setUseExternalFile(true);
      Path path1 = javadoc0.createClasspath();
      assertFalse(path1.equals((Object)path0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setMaxmemory(" ");
      javadoc0.setUse(false);
      // Undeclared exception!
      try { 
        javadoc0.setLinkoffline((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.reconfigure();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      javadoc0.setClasspathRef(reference0);
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.createLink();
      javadoc_LinkArgument0.getPackagelistLoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      Path path0 = javadoc0.createBootclasspath();
      javadoc_DocletInfo0.setPath(path0);
      Path path1 = javadoc_DocletInfo0.getPath();
      javadoc0.setExtdirs(path1);
      javadoc0.setFooter("");
      Reference reference1 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(reference1).getRefId();
      doReturn((Object) null, (Object) null).when(reference1).getReferencedObject(any(org.apache.tools.ant.Project.class));
      javadoc0.setDocletPathRef(reference1);
      javadoc_LinkArgument0.isLinkOffline();
      // Undeclared exception!
      try { 
        javadoc0.setClasspath(path1);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't denote a path null
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.SourceFile javadoc_SourceFile0 = new Javadoc.SourceFile();
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.getPackagelistLoc();
      javadoc_LinkArgument0.isLinkOffline();
      javadoc_LinkArgument0.setOffline(false);
      javadoc_LinkArgument0.getPackagelistLoc();
      javadoc_SourceFile0.setFile((File) null);
      javadoc0.addSource(javadoc_SourceFile0);
      javadoc0.maybeConfigure();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      // Undeclared exception!
      try { 
        javadoc0.setAccess((Javadoc.AccessType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      javadoc_DocletInfo0.getPath();
      javadoc0.setSerialwarn(true);
      // Undeclared exception!
      try { 
        javadoc0.setExtdirs((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setDoclet("Hs)]p~m%!");
      javadoc0.addFooter((Javadoc.Html) null);
      javadoc0.setHeader("m`Xg+ISRF");
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      javadoc0.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      javadoc0.getProject();
      javadoc_DocletInfo0.setProject((Project) null);
      javadoc_DocletInfo0.getName();
      Path path0 = javadoc_DocletInfo0.createPath();
      javadoc0.setBootclasspath(path0);
      Javadoc.SourceFile javadoc_SourceFile0 = new Javadoc.SourceFile();
      javadoc_SourceFile0.getFile();
      javadoc0.setVerbose(true);
      javadoc0.addSource(javadoc_SourceFile0);
      javadoc_TagArgument0.setEnabled(true);
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.isLinkOffline();
      javadoc0.setFooter("");
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      String string0 = javadoc_PackageName0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      javadoc0.getProject();
      javadoc_DocletInfo0.setProject((Project) null);
      javadoc0.addTaglet(javadoc_DocletInfo0);
      Javadoc javadoc1 = new Javadoc();
      javadoc1.createDoclet();
      Path path0 = javadoc1.createBootclasspath();
      javadoc0.setBootclasspath(path0);
      javadoc0.setClasspath(path0);
      javadoc0.setDoctitle("");
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc_PackageName0.toString();
      javadoc0.setDocletPath(path0);
      javadoc0.setExcludePackageNames("");
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc1.createTag();
      javadoc1.addPackage(javadoc_PackageName0);
      javadoc0.addFileset(javadoc_TagArgument0);
      javadoc1.setGroup("");
      javadoc_PackageName0.setName("");
      javadoc1.setDocletPath(path0);
      javadoc0.setUseExternalFile(false);
      javadoc1.setUse(false);
      // Undeclared exception!
      try { 
        javadoc1.expand((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      javadoc0.setDocletPathRef((Reference) null);
      javadoc_DocletInfo0.log("", 0);
      Path path0 = null;
      javadoc_DocletInfo0.setPath((Path) null);
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc_DocletInfo0.setName("");
      javadoc_TagArgument0.setDescription("");
      javadoc0.setFooter("e1P*o>`soaoK[BH");
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc0.addDoctitle(javadoc_Html0);
      String string0 = "";
      javadoc0.setLink("");
      // Undeclared exception!
      try { 
        javadoc0.setExtdirs((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc_Html0.addText("");
      javadoc_Html0.addText("");
      javadoc_Html0.addText("");
      javadoc_Html0.addText("GY%u]6,#\"W~<vy7K");
      javadoc0.setNotree(false);
      javadoc0.setFailonerror(false);
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc_DocletInfo0.createParam();
      String string0 = javadoc_DocletParam0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc0.createGroup();
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc_PackageName0.toString();
      javadoc0.getProject();
      javadoc_PackageName0.getName();
      javadoc_GroupArgument0.addPackage(javadoc_PackageName0);
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.createLink();
      javadoc_LinkArgument0.setOffline(false);
      javadoc_LinkArgument0.setHref((String) null);
      javadoc0.setPrivate(true);
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc_TagArgument0.setDescription("57tL");
      // Undeclared exception!
      try { 
        javadoc_TagArgument0.setScope((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc$TagArgument", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      javadoc0.createGroup();
      javadoc0.setBootClasspathRef(reference0);
      // Undeclared exception!
      try { 
        javadoc0.setAdditionalparam("ox7\"eG),h5Vp'r");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // unbalanced quotes in ox7\"eG),h5Vp'r
         //
         verifyException("org.apache.tools.ant.types.Commandline", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc_PackageName0.setName("");
      Javadoc javadoc0 = new Javadoc();
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc0.createGroup();
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc_GroupArgument0.getTitle();
      javadoc_Html0.getText();
      javadoc_GroupArgument0.addTitle(javadoc_Html0);
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.createLink();
      javadoc_LinkArgument0.getPackagelistLoc();
      javadoc0.setSerialwarn(true);
      javadoc0.createGroup();
      javadoc0.addFooter(javadoc_Html0);
      javadoc0.setExtdirs("D{*(vbw1-'g5w\"");
      javadoc_PackageName0.getName();
      javadoc0.setDoclet("");
      javadoc0.createBootclasspath();
      javadoc_GroupArgument0.getPackages();
      javadoc0.setBottom("");
      javadoc_LinkArgument0.getPackagelistLoc();
      boolean boolean0 = javadoc_LinkArgument0.isLinkOffline();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setNoindex(false);
      javadoc0.setBottom("FpK");
      // Undeclared exception!
      try { 
        javadoc0.setLinkoffline("");
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // The linkoffline attribute must include a URL and a package-list file location separated by a space
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      try { 
        javadoc_TagArgument0.getParameter();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No name specified for custom tag.
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc$TagArgument", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      String string0 = null;
      Javadoc javadoc1 = new Javadoc();
      Path path0 = javadoc1.createBootclasspath();
      javadoc0.setSourcepath(path0);
      javadoc0.setExtdirs((String) null);
      javadoc0.setGroup((String) null);
      javadoc0.createTag();
      Path path1 = javadoc0.createSourcepath();
      javadoc0.setBootclasspath(path1);
      // Undeclared exception!
      try { 
        javadoc0.setCharset((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      String string0 = "";
      javadoc0.setPackagenames("");
      boolean boolean0 = true;
      javadoc0.setPrivate(true);
      javadoc0.setNonavbar(true);
      try { 
        javadoc0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No source files and no packages have been specified.
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc0.new DocletParam();
      javadoc_DocletParam0.setName("");
      javadoc_DocletParam0.getValue();
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.getHref();
      javadoc_LinkArgument0.getPackagelistLoc();
      // Undeclared exception!
      try { 
        javadoc0.setOverview((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setAuthor(true);
      javadoc0.setNoindex(false);
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      javadoc_DocletInfo0.getPath();
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc_PackageName0.toString();
      Javadoc.AccessType javadoc_AccessType0 = new Javadoc.AccessType();
      javadoc_AccessType0.getValues();
      javadoc_AccessType0.getIndex();
      javadoc_AccessType0.containsValue("FR");
      javadoc0.setAccess(javadoc_AccessType0);
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc_DocletInfo0.createParam();
      javadoc_DocletParam0.getName();
      javadoc_DocletParam0.getName();
      javadoc_DocletParam0.getValue();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc_TagArgument0.setName("rB![W+sk?V;C`07}N");
      javadoc0.setPackage(true);
      javadoc_DocletInfo0.createParam();
      javadoc_DocletInfo0.createPath();
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc_Html0.addText("{?EJ@tAY*w+");
      javadoc0.addHeader(javadoc_Html0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc0.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      Javadoc.SourceFile javadoc_SourceFile0 = new Javadoc.SourceFile((File) null);
      javadoc0.addSource(javadoc_SourceFile0);
      Javadoc.AccessType javadoc_AccessType0 = new Javadoc.AccessType();
      javadoc0.setAccess(javadoc_AccessType0);
      Path path0 = javadoc0.createSourcepath();
      javadoc0.setSourcepath(path0);
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc0.new GroupArgument();
      javadoc_GroupArgument0.setTitle("o.z`");
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      String string0 = javadoc_Html0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.createClasspath();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      javadoc_TagArgument0.createInclude();
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc_TagArgument0.createPatternSet();
      javadoc_TagArgument0.setFollowSymlinks(false);
      javadoc0.addDoctitle(javadoc_Html0);
      javadoc_TagArgument0.setDescription((String) null);
      Location location0 = javadoc0.getLocation();
      javadoc0.setLocation(location0);
      Path path0 = javadoc0.createClasspath();
      javadoc0.addTaglet((Javadoc.ExtensionInfo) null);
      javadoc0.setSourcepath(path0);
      javadoc0.setUse(true);
      javadoc0.setPublic(true);
      javadoc0.createClasspath();
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc0.createGroup();
      javadoc_GroupArgument0.addTitle(javadoc_Html0);
      javadoc_TagArgument0.setEnabled(true);
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      String string0 = javadoc_PackageName0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setProtected(false);
      javadoc0.setBootClasspathRef((Reference) null);
      javadoc0.setDoclet("3h1RUkr!ax2KC/~Mp:;");
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      javadoc0.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      // Undeclared exception!
      try { 
        javadoc0.setOverview((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Javadoc.ExtensionInfo javadoc_ExtensionInfo0 = new Javadoc.ExtensionInfo();
      Javadoc javadoc0 = new Javadoc();
      Path path0 = javadoc0.createBootclasspath();
      javadoc_ExtensionInfo0.setPath(path0);
      javadoc_ExtensionInfo0.getName();
      Path path1 = javadoc_ExtensionInfo0.getPath();
      Javadoc javadoc1 = new Javadoc();
      javadoc1.setClasspath(path1);
      try { 
        javadoc1.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No source files and no packages have been specified.
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.reconfigure();
      javadoc0.setProtected(false);
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      javadoc0.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      // Undeclared exception!
      try { 
        javadoc0.setDestdir((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      boolean boolean0 = false;
      javadoc0.setNoindex(false);
      javadoc0.setDefaultexcludes(false);
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      javadoc_DocletInfo0.createPath();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      javadoc_DocletInfo0.setPathRef(reference0);
      javadoc0.setNoindex(false);
      javadoc_DocletInfo0.log("", (-2386));
      javadoc_DocletInfo0.createParam();
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.getPackagelistLoc();
      javadoc_LinkArgument0.isLinkOffline();
      javadoc_LinkArgument0.isLinkOffline();
      javadoc_LinkArgument0.setPackagelistLoc((File) null);
      javadoc0.getTaskName();
      // Undeclared exception!
      try { 
        javadoc0.setOverview((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setNoindex(false);
      javadoc0.setAdditionalparam("");
      javadoc0.setPackagenames("");
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.getPackagelistLoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      javadoc_DocletInfo0.getPath();
      javadoc0.setSourcepath((Path) null);
      javadoc0.setSource("<wzt(i6L*y3x].*x");
      javadoc0.setDoclet("");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      Path path0 = javadoc_DocletInfo0.createPath();
      boolean boolean0 = true;
      javadoc0.setDefaultexcludes(true);
      String string0 = "";
      javadoc0.setAdditionalparam("");
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc_PackageName0.getName();
      javadoc_PackageName0.toString();
      javadoc0.setExtdirs("[,0\"YL3G->1arfkV");
      javadoc0.setSourcepath(path0);
      Javadoc javadoc1 = new Javadoc();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc1.new TagArgument();
      javadoc1.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      // Undeclared exception!
      try { 
        javadoc0.setHelpfile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.new DocletInfo();
      javadoc_DocletInfo0.setName("?XO%");
      javadoc_DocletInfo0.getParams();
      javadoc0.setUseExternalFile(false);
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc0.addDoctitle(javadoc_Html0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setPackageList("q]d?^ndwz^i-!CZ");
      javadoc0.setNodeprecatedlist(true);
      javadoc0.setOld(false);
      javadoc0.setAuthor(false);
      javadoc0.setProtected(false);
      // Undeclared exception!
      try { 
        javadoc0.setWindowtitle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc0.new DocletParam();
      javadoc_DocletParam0.getName();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      Path path0 = javadoc_DocletInfo0.createPath();
      javadoc_DocletInfo0.setPath(path0);
      javadoc0.setExtdirs(path0);
      javadoc0.setDoclet((String) null);
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc0.new GroupArgument();
      // Undeclared exception!
      try { 
        javadoc_GroupArgument0.setPackages((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.createLink();
      javadoc_LinkArgument0.getPackagelistLoc();
      javadoc_LinkArgument0.setHref("");
      javadoc_LinkArgument0.setPackagelistLoc((File) null);
      javadoc0.setEncoding("");
      javadoc_LinkArgument0.setOffline(true);
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc0.addFileset(javadoc_TagArgument0);
      String string0 = "%RE(@MC,|2B";
      javadoc0.setCharset("%RE(@MC,|2B");
      // Undeclared exception!
      try { 
        javadoc0.setOld(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      javadoc0.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      Javadoc.SourceFile javadoc_SourceFile0 = new Javadoc.SourceFile((File) null);
      javadoc0.addSource(javadoc_SourceFile0);
      javadoc0.createClasspath();
      javadoc_SourceFile0.setFile((File) null);
      javadoc0.setLocale("");
      javadoc_SourceFile0.setFile((File) null);
      javadoc0.setFailonerror(false);
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc_DocletInfo0.createParam();
      javadoc_DocletParam0.setValue("");
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc_Html0.getText();
      javadoc_Html0.getText();
      javadoc_Html0.getText();
      Javadoc javadoc1 = new Javadoc();
      Path path0 = javadoc1.createClasspath();
      javadoc0.setSourcepath(path0);
      assertFalse(javadoc0.equals((Object)javadoc1));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.createLink();
      javadoc_LinkArgument0.setOffline(true);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc0.addDoctitle(javadoc_Html0);
      javadoc0.setExtdirs("pRUSNV\"-");
      javadoc0.setLink("");
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc0.new GroupArgument();
      javadoc_GroupArgument0.setTitle("");
      Javadoc.ExtensionInfo javadoc_ExtensionInfo0 = new Javadoc.ExtensionInfo();
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      Path path0 = javadoc_DocletInfo0.createPath();
      javadoc_ExtensionInfo0.setPath(path0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      boolean boolean0 = true;
      FileSelector fileSelector0 = mock(FileSelector.class, new ViolatedAssumptionAnswer());
      javadoc_TagArgument0.appendSelector(fileSelector0);
      javadoc0.setUse(true);
      javadoc0.addFileset(javadoc_TagArgument0);
      String string0 = "@EdVJ ;oc_`>A[\"DF2";
      javadoc0.setBottom("@EdVJ ;oc_`>A[\"DF2");
      DirSet dirSet0 = mock(DirSet.class, new ViolatedAssumptionAnswer());
      javadoc0.addPackageset(dirSet0);
      // Undeclared exception!
      try { 
        javadoc0.setCharset("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setAdditionalparam((String) null);
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      Path path0 = javadoc0.createSourcepath();
      javadoc_DocletInfo0.setPath(path0);
      javadoc_DocletInfo0.getName();
      javadoc_DocletInfo0.getParams();
      javadoc0.setMaxmemory((String) null);
      Javadoc javadoc1 = new Javadoc();
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc1.new DocletParam();
      javadoc_DocletParam0.getName();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      javadoc_TagArgument0.setDescription((String) null);
      javadoc0.setSourcefiles("");
      javadoc1.setProtected(true);
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc1.createGroup();
      javadoc_GroupArgument0.addPackage((Javadoc.PackageName) null);
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.isLinkOffline();
      DirSet dirSet0 = mock(DirSet.class, new ViolatedAssumptionAnswer());
      javadoc0.addPackageset(dirSet0);
      assertFalse(javadoc0.equals((Object)javadoc1));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setTaskName("");
      javadoc0.setPublic(true);
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc0.getProject();
      javadoc_TagArgument0.getSelectors((Project) null);
      javadoc_TagArgument0.getDescription();
      javadoc_TagArgument0.addContains((ContainsSelector) null);
      javadoc0.addFileset(javadoc_TagArgument0);
      javadoc0.setFailonerror(true);
      javadoc0.createTag();
      String string0 = null;
      // Undeclared exception!
      try { 
        javadoc0.setSourcefiles((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setLocale("*=ZAAz=^oG>sGpFXeC");
      Path path0 = javadoc0.createSourcepath();
      javadoc0.setBootclasspath(path0);
      javadoc0.setSerialwarn(true);
      javadoc0.createDoclet();
      javadoc0.setAuthor(true);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setLocale("");
      javadoc0.setFooter("");
      javadoc0.setAdditionalparam("");
      javadoc0.addBottom((Javadoc.Html) null);
      javadoc0.setFailonerror(false);
      // Undeclared exception!
      try { 
        javadoc0.setWindowtitle("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setExtdirs("1%bwN-xIp\"|=i");
      Javadoc.SourceFile javadoc_SourceFile0 = new Javadoc.SourceFile();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc0.getProject();
      javadoc0.setSerialwarn(false);
      Javadoc javadoc1 = new Javadoc();
      javadoc1.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      javadoc_SourceFile0.setFile((File) null);
      javadoc_TagArgument0.getDir((Project) null);
      javadoc_SourceFile0.setFile((File) null);
      javadoc0.addSource(javadoc_SourceFile0);
      Javadoc.PackageName javadoc_PackageName0 = new Javadoc.PackageName();
      javadoc_PackageName0.setName("1%bwN-xIp\"|=i");
      javadoc_PackageName0.setName("1%bwN-xIp\"|=i");
      javadoc0.setDoctitle("1%bwN-xIp\"|=i");
      Javadoc.DocletInfo javadoc_DocletInfo0 = javadoc0.createDoclet();
      javadoc_DocletInfo0.createParam();
      javadoc_DocletInfo0.createParam();
      javadoc0.addTaglet(javadoc_DocletInfo0);
      Javadoc.GroupArgument javadoc_GroupArgument0 = javadoc0.createGroup();
      javadoc_GroupArgument0.getTitle();
      javadoc_GroupArgument0.setTitle((String) null);
      javadoc_GroupArgument0.setPackages("");
      javadoc0.createGroup();
      javadoc_DocletInfo0.setPath((Path) null);
      javadoc1.createLink();
      javadoc1.setMaxmemory("");
      assertFalse(javadoc1.equals((Object)javadoc0));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Javadoc.SourceFile javadoc_SourceFile0 = new Javadoc.SourceFile();
      Javadoc javadoc0 = new Javadoc();
      javadoc_SourceFile0.setFile((File) null);
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      javadoc0.getProject();
      javadoc_TagArgument0.getDir((Project) null);
      javadoc_SourceFile0.setFile((File) null);
      javadoc_SourceFile0.getFile();
      javadoc_SourceFile0.getFile();
      javadoc0.setSplitindex(false);
      Javadoc.Html javadoc_Html0 = new Javadoc.Html();
      javadoc0.addFooter(javadoc_Html0);
      javadoc0.createTag();
      javadoc0.setDocencoding((String) null);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      try { 
        javadoc0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No source files and no packages have been specified.
         //
         verifyException("org.apache.tools.ant.taskdefs.Javadoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setNodeprecated(true);
      javadoc0.setExcludePackageNames("");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.setPublic(false);
      Javadoc.DocletParam javadoc_DocletParam0 = javadoc0.new DocletParam();
      javadoc_DocletParam0.getValue();
      Javadoc.LinkArgument javadoc_LinkArgument0 = javadoc0.new LinkArgument();
      javadoc_LinkArgument0.getPackagelistLoc();
      // Undeclared exception!
      try { 
        javadoc0.setStylesheetfile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      javadoc0.setClasspathRef(reference0);
      javadoc0.getProject();
      javadoc0.setNohelp(true);
      Reference reference1 = mock(Reference.class, new ViolatedAssumptionAnswer());
      javadoc0.setSourcepathRef(reference1);
      javadoc0.setNodeprecatedlist(false);
      javadoc0.setVerbose(false);
      javadoc0.setFailonerror(true);
      String string0 = "";
      // Undeclared exception!
      try { 
        javadoc0.setWindowtitle("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.new TagArgument();
      javadoc0.getProject();
      javadoc_TagArgument0.selectorCount();
      javadoc_TagArgument0.getDir((Project) null);
      // Undeclared exception!
      try { 
        javadoc0.setStylesheetfile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Javadoc javadoc0 = new Javadoc();
      javadoc0.getOwningTarget();
      javadoc0.setVersion(true);
      javadoc0.setUseExternalFile(true);
      Javadoc.TagArgument javadoc_TagArgument0 = javadoc0.createTag();
      javadoc_TagArgument0.getDir((Project) null);
      // Undeclared exception!
      try { 
        javadoc0.setOverview((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Commandline$Argument", e);
      }
  }
}
