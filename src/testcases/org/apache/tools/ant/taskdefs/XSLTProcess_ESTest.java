/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:52:36 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Enumeration;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.XSLTLiaison;
import org.apache.tools.ant.taskdefs.XSLTProcess;
import org.apache.tools.ant.taskdefs.optional.TraXLiaison;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.apache.tools.ant.types.XMLCatalog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XSLTProcess_ESTest extends XSLTProcess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      XSLTProcess.Param xSLTProcess_Param0 = xSLTProcess0.createParam();
      xSLTProcess_Param0.setName("&~?uAXNuam^nl]");
      String string0 = xSLTProcess_Param0.getName();
      assertEquals("&~?uAXNuam^nl]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      XSLTProcess.Param xSLTProcess_Param0 = xSLTProcess0.createParam();
      xSLTProcess_Param0.setExpression("");
      String string0 = xSLTProcess_Param0.getExpression();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      XSLTLiaison xSLTLiaison0 = xSLTProcess0.getLiaison();
      assertNotNull(xSLTLiaison0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      TraXLiaison traXLiaison0 = mock(TraXLiaison.class, new ViolatedAssumptionAnswer());
      xSLTProcess0.configureTraXLiaison(traXLiaison0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XSLTProcess.Param xSLTProcess_Param0 = new XSLTProcess.Param();
      xSLTProcess_Param0.setName((String) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XSLTProcess.OutputProperty xSLTProcess_OutputProperty0 = new XSLTProcess.OutputProperty();
      xSLTProcess_OutputProperty0.setValue((String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XSLTProcess.OutputProperty xSLTProcess_OutputProperty0 = new XSLTProcess.OutputProperty();
      xSLTProcess_OutputProperty0.setName((String) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XSLTProcess.OutputProperty xSLTProcess_OutputProperty0 = new XSLTProcess.OutputProperty();
      String string0 = xSLTProcess_OutputProperty0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XSLTProcess.OutputProperty xSLTProcess_OutputProperty0 = new XSLTProcess.OutputProperty();
      String string0 = xSLTProcess_OutputProperty0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XSLTProcess.Factory xSLTProcess_Factory0 = new XSLTProcess.Factory();
      xSLTProcess_Factory0.setName((String) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XSLTProcess.Factory xSLTProcess_Factory0 = new XSLTProcess.Factory();
      String string0 = xSLTProcess_Factory0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      XSLTProcess.Factory xSLTProcess_Factory0 = xSLTProcess0.createFactory();
      Enumeration enumeration0 = xSLTProcess_Factory0.getAttributes();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XSLTProcess.Factory xSLTProcess_Factory0 = new XSLTProcess.Factory();
      xSLTProcess_Factory0.addAttribute((XSLTProcess.Factory.Attribute) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.setScanIncludedDirectories(false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.setReloadStylesheet(false);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.setProcessor((String) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      xSLTProcess0.setOut(file0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      xSLTProcess0.setIn(file0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.setForce(false);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.setExtension("b#;nZ{N^C\"l2.O9");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      xSLTProcess0.setDestdir(file0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      xSLTProcess0.setClasspathRef(reference0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      Path path0 = xSLTProcess0.createClasspath();
      xSLTProcess0.setClasspath(path0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.setBasedir((File) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.init();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      XSLTProcess.OutputProperty xSLTProcess_OutputProperty0 = xSLTProcess0.createOutputProperty();
      assertNotNull(xSLTProcess_OutputProperty0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.createClasspath();
      // Undeclared exception!
      try { 
        xSLTProcess0.getLiaison();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.tools.ant.taskdefs.XSLTProcess", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      try { 
        xSLTProcess0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // no stylesheet specified
         //
         verifyException("org.apache.tools.ant.taskdefs.XSLTProcess", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.setStyle("u0> up VE$lw");
      // Undeclared exception!
      try { 
        xSLTProcess0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.XSLTProcess", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      xSLTProcess0.createFactory();
      try { 
        xSLTProcess0.createFactory();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // 'factory' element must be unique
         //
         verifyException("org.apache.tools.ant.taskdefs.XSLTProcess", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      // Undeclared exception!
      try { 
        xSLTProcess0.configureTraXLiaison((TraXLiaison) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.XSLTProcess", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      // Undeclared exception!
      try { 
        xSLTProcess0.configureLiaison((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XSLTProcess xSLTProcess0 = new XSLTProcess();
      XMLCatalog xMLCatalog0 = mock(XMLCatalog.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xSLTProcess0.addConfiguredXMLCatalog(xMLCatalog0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.XMLCatalog", e);
      }
  }
}
