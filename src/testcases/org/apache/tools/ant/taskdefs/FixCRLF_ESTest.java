/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:48:39 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.FixCRLF;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FixCRLF_ESTest extends FixCRLF_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getPath();
      FixCRLF.OneLiner fixCRLF_OneLiner0 = null;
      try {
        fixCRLF_OneLiner0 = fixCRLF0.new OneLiner(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FixCRLF.CrLf fixCRLF_CrLf0 = new FixCRLF.CrLf();
      String[] stringArray0 = fixCRLF_CrLf0.getValues();
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FixCRLF.AddAsisRemove fixCRLF_AddAsisRemove0 = new FixCRLF.AddAsisRemove();
      String[] stringArray0 = fixCRLF_AddAsisRemove0.getValues();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      fixCRLF0.setSrcdir(file0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      fixCRLF0.setJavafiles(false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      fixCRLF0.setEncoding("\"-7nR");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      fixCRLF0.setDestdir((File) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      try { 
        fixCRLF0.setTablength((-1345));
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // tablength must be between 2 and 80
         //
         verifyException("org.apache.tools.ant.taskdefs.FixCRLF", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      FixCRLF.AddAsisRemove fixCRLF_AddAsisRemove0 = new FixCRLF.AddAsisRemove();
      // Undeclared exception!
      try { 
        fixCRLF0.setTab(fixCRLF_AddAsisRemove0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.FixCRLF", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      FixCRLF.CrLf fixCRLF_CrLf0 = new FixCRLF.CrLf();
      // Undeclared exception!
      try { 
        fixCRLF0.setEol(fixCRLF_CrLf0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.FixCRLF", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      FixCRLF.AddAsisRemove fixCRLF_AddAsisRemove0 = new FixCRLF.AddAsisRemove();
      // Undeclared exception!
      try { 
        fixCRLF0.setEof(fixCRLF_AddAsisRemove0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.FixCRLF", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      // Undeclared exception!
      try { 
        fixCRLF0.setCr((FixCRLF.AddAsisRemove) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FixCRLF fixCRLF0 = new FixCRLF();
      try { 
        fixCRLF0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // srcdir attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.FixCRLF", e);
      }
  }
}
