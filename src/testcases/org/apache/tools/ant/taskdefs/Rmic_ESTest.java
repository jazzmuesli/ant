/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:57:54 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Vector;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Location;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.RuntimeConfigurable;
import org.apache.tools.ant.Target;
import org.apache.tools.ant.taskdefs.Rmic;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.apache.tools.ant.types.selectors.OrSelector;
import org.apache.tools.ant.types.selectors.PresentSelector;
import org.apache.tools.ant.util.FileNameMapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Rmic_ESTest extends Rmic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(reference0).getRefId();
      doReturn((Object) null, (Object) null).when(reference0).getReferencedObject(any(org.apache.tools.ant.Project.class));
      rmic0.setClasspathRef(reference0);
      rmic0.createExtdirs();
      Path path0 = rmic0.createClasspath();
      rmic0.setExtdirs(path0);
      rmic0.getDebug();
      rmic0.getClasspath();
      rmic0.getIncludeantruntime();
      rmic0.createExcludesFile();
      rmic0.getIncludeantruntime();
      rmic0.getLoader();
      Path path1 = rmic0.createExtdirs();
      rmic0.setExtdirs(path1);
      rmic0.setIncludeantruntime(true);
      rmic0.setIdlopts("");
      rmic0.getVerify();
      rmic0.setClasspathRef((Reference) null);
      Path path2 = rmic0.getClasspath();
      // Undeclared exception!
      try { 
        rmic0.setExtdirs(path2);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // null doesn't denote a path null
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      Rmic rmic1 = new Rmic();
      rmic1.getProject();
      rmic0.getSelectors((Project) null);
      rmic0.setClasspathRef(reference0);
      rmic0.getIiopopts();
      rmic1.setStubVersion("");
      boolean boolean0 = false;
      rmic1.getBase();
      String[] stringArray0 = new String[0];
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      rmic1.scanDir((File) null, stringArray0, fileNameMapper0);
      rmic1.setIncludejavaruntime(false);
      rmic0.setCompiler((String) null);
      rmic0.setIiop(true);
      rmic1.setIncludeantruntime(true);
      rmic0.setIiopopts((String) null);
      rmic1.setIncludejavaruntime(true);
      rmic0.getIiop();
      rmic0.setIdlopts((String) null);
      try { 
        rmic0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // base attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.Rmic", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      boolean boolean0 = false;
      rmic0.setTaskName("");
      rmic0.setIiop(false);
      rmic0.getStubVersion();
      FileSet fileSet0 = rmic0.fileset;
      rmic0.fileset = fileSet0;
      rmic0.setIiop(false);
      rmic0.getIncludeantruntime();
      rmic0.setVerify(true);
      try { 
        rmic0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // base attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.Rmic", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      String string0 = "Ep0#dO";
      rmic0.setIncludes("Ep0#dO");
      rmic0.setDebug(true);
      rmic0.getDebug();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      rmic0.setClasspathRef(reference0);
      rmic0.getClasspath();
      rmic0.setCompiler("");
      Path path0 = rmic0.createClasspath();
      rmic0.setExtdirs(path0);
      Reference reference1 = mock(Reference.class, new ViolatedAssumptionAnswer());
      rmic0.setClasspathRef(reference1);
      try { 
        rmic0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // base attribute must be set!
         //
         verifyException("org.apache.tools.ant.taskdefs.Rmic", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.reconfigure();
      rmic0.setDebug(true);
      rmic0.setIiop(true);
      rmic0.setIdlopts("c");
      rmic0.addOr((OrSelector) null);
      rmic0.getBase();
      rmic0.setRuntimeConfigurableWrapper((RuntimeConfigurable) null);
      rmic0.setFiltering(true);
      Vector vector0 = rmic0.getCompileList();
      assertEquals(10, vector0.capacity());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      Class<Object> class0 = Object.class;
      rmic0.getRemoteInterface(class0);
      // Undeclared exception!
      try { 
        rmic0.getRemoteInterface((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.getLocation();
      rmic0.getStubVersion();
      rmic0.getSourceBase();
      rmic0.setBase((File) null);
      rmic0.setClasspathRef((Reference) null);
      rmic0.getFileList();
      rmic0.getIncludeantruntime();
      rmic0.setClassname("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.getSourceBase();
      rmic0.setSourceBase((File) null);
      rmic0.setProject((Project) null);
      rmic0.getFiltering();
      rmic0.setFiltering(true);
      rmic0.getIiopopts();
      rmic0.setBase((File) null);
      Path path0 = rmic0.createExtdirs();
      rmic0.setClasspath(path0);
      Class<String> class0 = String.class;
      rmic0.getRemoteInterface(class0);
      rmic0.setClasspath(path0);
      rmic0.createCompilerArg();
      rmic0.getClassname();
      rmic0.setFiltering(true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.getSourceBase();
      rmic0.setBase((File) null);
      rmic0.selectorCount();
      rmic0.setDebug(true);
      rmic0.getLocation();
      rmic0.getVerify();
      rmic0.setBase((File) null);
      rmic0.getLoader();
      rmic0.setIiopopts("W8::it$Y'");
      Path path0 = rmic0.createExtdirs();
      rmic0.getFileList();
      rmic0.getClasspath();
      rmic0.setIncludeantruntime(false);
      rmic0.setExtdirs(path0);
      // Undeclared exception!
      try { 
        rmic0.getCurrentCompilerArgs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Rmic", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.setCompiler("afi7XrS wGYFN?b");
      rmic0.getBase();
      // Undeclared exception!
      try { 
        rmic0.setExcludesfile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.PatternSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.setDebug(true);
      rmic0.getVerify();
      rmic0.getImplicitFileSet();
      rmic0.getIncludejavaruntime();
      rmic0.getOwningTarget();
      rmic0.setClasspath((Path) null);
      rmic0.setClasspath((Path) null);
      // Undeclared exception!
      try { 
        rmic0.getCompiler();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Rmic", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.setFollowSymlinks(true);
      rmic0.getIdlopts();
      rmic0.getStubVersion();
      rmic0.getVerify();
      rmic0.getClassname();
      rmic0.setIiopopts("E$Lp/e8?=J");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      FileSet fileSet0 = rmic0.fileset;
      rmic0.fileset = fileSet0;
      Location location0 = rmic0.getLocation();
      rmic0.setLocation(location0);
      rmic0.selectorElements();
      rmic0.getIiop();
      rmic0.getSourceBase();
      rmic0.setSourceBase((File) null);
      rmic0.getIncludeantruntime();
      rmic0.setStubVersion("");
      Path path0 = rmic0.createExtdirs();
      rmic0.setExtdirs(path0);
      Rmic.ImplementationSpecificArgument rmic_ImplementationSpecificArgument0 = rmic0.new ImplementationSpecificArgument();
      rmic_ImplementationSpecificArgument0.setCompiler("OjY$xH^d@fXr");
      rmic0.getIncludeantruntime();
      rmic0.getIdl();
      rmic0.createCompilerArg();
      rmic0.getIdlopts();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "OjY$xH^d@fXr";
      stringArray0[3] = "OjY$xH^d@fXr";
      stringArray0[4] = null;
      stringArray0[5] = "OjY$xH^d@fXr";
      stringArray0[6] = "2QxkMEYm:+SOWX";
      stringArray0[7] = null;
      stringArray0[8] = "OjY$xH^d@fXr";
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        rmic0.scanDir((File) null, stringArray0, fileNameMapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.setDebug(false);
      rmic0.getSourceBase();
      rmic0.getClasspath();
      rmic0.createExtdirs();
      rmic0.setIdl(false);
      ClassLoader classLoader0 = rmic0.getLoader();
      assertNull(classLoader0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.setIiop(true);
      rmic0.getOwningTarget();
      rmic0.setOwningTarget((Target) null);
      FileSet fileSet0 = rmic0.fileset;
      rmic0.fileset = fileSet0;
      rmic0.setCompiler("");
      Class<Integer> class0 = Integer.class;
      rmic0.getRemoteInterface(class0);
      boolean boolean0 = rmic0.getIncludeantruntime();
      rmic0.getVerify();
      rmic0.setIncludejavaruntime(false);
      rmic0.setClassname("");
      boolean boolean1 = rmic0.getVerify();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      Path path0 = rmic0.createExtdirs();
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.getVerify();
      boolean boolean0 = rmic0.getDebug();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      String string0 = "";
      // Undeclared exception!
      try { 
        rmic0.isValidRmiRemote("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      Class<String> class0 = String.class;
      rmic0.getRemoteInterface(class0);
      // Undeclared exception!
      try { 
        rmic0.getCurrentCompilerArgs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Rmic", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.getIiopopts();
      rmic0.getIiop();
      rmic0.getClasspath();
      rmic0.setExtdirs((Path) null);
      Class<Integer> class0 = Integer.class;
      rmic0.createClasspath();
      rmic0.getRemoteInterface(class0);
      rmic0.getIdl();
      rmic0.getCompileList();
      rmic0.getProject();
      rmic0.getClassname();
      rmic0.getIdl();
      rmic0.getSourceBase();
      boolean boolean0 = rmic0.getFiltering();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      rmic0.getExtdirs();
      rmic0.setExtdirs((Path) null);
      rmic0.getIdlopts();
      rmic0.getProject();
      rmic0.setCompiler("");
      PresentSelector presentSelector0 = mock(PresentSelector.class, new ViolatedAssumptionAnswer());
      rmic0.addPresent(presentSelector0);
      rmic0.getLoader();
      rmic0.getClasspath();
      rmic0.setClasspath((Path) null);
      // Undeclared exception!
      try { 
        rmic0.getCompiler();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Rmic", e);
      }
  }
}
