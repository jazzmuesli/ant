/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:33:42 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.War;
import org.apache.tools.ant.types.ZipFileSet;
import org.apache.tools.zip.ZipOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class War_ESTest extends War_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      War war0 = new War();
      ZipFileSet zipFileSet0 = mock(ZipFileSet.class, new ViolatedAssumptionAnswer());
      war0.addWebinf(zipFileSet0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      War war0 = new War();
      ZipFileSet zipFileSet0 = mock(ZipFileSet.class, new ViolatedAssumptionAnswer());
      war0.addLib(zipFileSet0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      War war0 = new War();
      ZipFileSet zipFileSet0 = mock(ZipFileSet.class, new ViolatedAssumptionAnswer());
      war0.addClasses(zipFileSet0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      War war0 = new War();
      war0.setWarfile((File) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      War war0 = new War();
      war0.cleanUp();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      War war0 = new War();
      // Undeclared exception!
      try { 
        war0.zipFile((File) null, (ZipOutputStream) null, "", 2728);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Zip", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      War war0 = new War();
      // Undeclared exception!
      try { 
        war0.setWebxml((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.War", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      War war0 = new War();
      try { 
        war0.initZipOutputStream((ZipOutputStream) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // webxml attribute is required
         //
         verifyException("org.apache.tools.ant.taskdefs.War", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      War war0 = new War();
      // Undeclared exception!
      try { 
        war0.addWebinf((ZipFileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.War", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      War war0 = new War();
      // Undeclared exception!
      try { 
        war0.addLib((ZipFileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.War", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      War war0 = new War();
      // Undeclared exception!
      try { 
        war0.addClasses((ZipFileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.War", e);
      }
  }
}
