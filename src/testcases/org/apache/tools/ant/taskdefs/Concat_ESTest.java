/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:56:48 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.taskdefs.Concat;
import org.apache.tools.ant.types.FileList;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.FilterChain;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Concat_ESTest extends Concat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Concat concat0 = new Concat();
      concat0.addText("Gu^~MD[Wv*-<kp");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      concat_TextElement0.setTrimLeading(false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      concat_TextElement0.setTrim(false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      concat_TextElement0.setFiltering(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      Project project0 = new Project();
      File file0 = project0.getBaseDir();
      // Undeclared exception!
      try { 
        concat_TextElement0.setFile(file0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // java.io.FileNotFoundException: /projects/ant (Is a directory)
         //
         verifyException("org.apache.tools.ant.taskdefs.Concat$TextElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      String string0 = concat_TextElement0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      concat_TextElement0.addText("Couldn't parse file: ");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Concat concat0 = new Concat();
      concat0.setForce(false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Concat concat0 = new Concat();
      concat0.setEncoding("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Concat concat0 = new Concat();
      concat0.setDestfile((File) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Concat concat0 = new Concat();
      concat0.setAppend(false);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Concat concat0 = new Concat();
      concat0.reset();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Concat concat0 = new Concat();
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      concat0.addHeader(concat_TextElement0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Concat concat0 = new Concat();
      Concat.TextElement concat_TextElement0 = new Concat.TextElement();
      concat0.addFooter(concat_TextElement0);
      concat0.createPath();
      concat0.execute();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Concat concat0 = new Concat();
      FilterChain filterChain0 = new FilterChain();
      concat0.addFilterChain(filterChain0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Concat concat0 = new Concat();
      FileSet fileSet0 = new FileSet();
      concat0.addFileset(fileSet0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Concat concat0 = new Concat();
      FileList fileList0 = new FileList();
      concat0.addFilelist(fileList0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Concat concat0 = new Concat();
      try { 
        concat0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // At least one file must be provided, or some text.
         //
         verifyException("org.apache.tools.ant.taskdefs.Concat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Concat concat0 = new Concat();
      concat0.createPath();
      // Undeclared exception!
      try { 
        concat0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Concat concat0 = new Concat();
      // Undeclared exception!
      try { 
        concat0.addText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Concat", e);
      }
  }
}
