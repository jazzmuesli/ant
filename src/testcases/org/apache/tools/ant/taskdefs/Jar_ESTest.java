/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:56:28 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.InputStream;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.Jar;
import org.apache.tools.ant.taskdefs.Manifest;
import org.apache.tools.ant.taskdefs.Zip;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.ZipFileSet;
import org.apache.tools.zip.ZipOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Jar_ESTest extends Jar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Jar jar0 = new Jar();
      ZipFileSet zipFileSet0 = mock(ZipFileSet.class, new ViolatedAssumptionAnswer());
      jar0.addMetainf(zipFileSet0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Jar.FilesetManifestConfig jar_FilesetManifestConfig0 = new Jar.FilesetManifestConfig();
      String[] stringArray0 = jar_FilesetManifestConfig0.getValues();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Jar jar0 = new Jar();
      jar0.setManifestEncoding("p!Ww=u>>-");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Jar jar0 = new Jar();
      jar0.setJarfile((File) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Jar jar0 = new Jar();
      jar0.setIndex(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Jar jar0 = new Jar();
      jar0.reset();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Jar jar0 = new Jar();
      jar0.finalizeZipOutputStream((ZipOutputStream) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Jar jar0 = new Jar();
      boolean boolean0 = jar0.createEmptyZip((File) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Jar jar0 = new Jar();
      jar0.cleanUp();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Jar jar0 = new Jar();
      Manifest manifest0 = mock(Manifest.class, new ViolatedAssumptionAnswer());
      jar0.addConfiguredManifest(manifest0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Jar jar0 = new Jar();
      // Undeclared exception!
      try { 
        jar0.zipFile((InputStream) null, (ZipOutputStream) null, "", 2259L, (File) null, (-935));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Jar jar0 = new Jar();
      Zip.WhenEmpty zip_WhenEmpty0 = mock(Zip.WhenEmpty.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jar0.setWhenempty(zip_WhenEmpty0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Jar jar0 = new Jar();
      // Undeclared exception!
      try { 
        jar0.setManifest((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Jar", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Jar jar0 = new Jar();
      Jar.FilesetManifestConfig jar_FilesetManifestConfig0 = new Jar.FilesetManifestConfig();
      // Undeclared exception!
      try { 
        jar0.setFilesetmanifest(jar_FilesetManifestConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Jar", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Jar jar0 = new Jar();
      try { 
        jar0.initZipOutputStream((ZipOutputStream) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Could not find default manifest: /org/apache/tools/ant/defaultManifest.mf
         //
         verifyException("org.apache.tools.ant.taskdefs.Manifest", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Jar jar0 = new Jar();
      FileSet[] fileSetArray0 = new FileSet[6];
      // Undeclared exception!
      try { 
        jar0.getResourcesToAdd(fileSetArray0, (File) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Jar", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Jar jar0 = new Jar();
      // Undeclared exception!
      try { 
        jar0.addMetainf((ZipFileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Jar", e);
      }
  }
}
