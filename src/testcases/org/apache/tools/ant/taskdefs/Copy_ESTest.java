/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:50:40 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Hashtable;
import java.util.Vector;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Location;
import org.apache.tools.ant.RuntimeConfigurable;
import org.apache.tools.ant.Target;
import org.apache.tools.ant.taskdefs.Copy;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.Mapper;
import org.apache.tools.ant.util.FileNameMapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Copy_ESTest extends Copy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Copy copy0 = new Copy();
      copy0.maybeConfigure();
      File file0 = null;
      copy0.setTodir((File) null);
      copy0.setTodir((File) null);
      copy0.includeEmpty = true;
      copy0.getFilterChains();
      copy0.fileCopyMap = null;
      // Undeclared exception!
      try { 
        copy0.doFileOperations();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Copy copy0 = new Copy();
      copy0.filesets = null;
      // Undeclared exception!
      try { 
        copy0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Copy copy0 = new Copy();
      File file0 = copy0.file;
      copy0.setTofile((File) null);
      copy0.filesets = null;
      copy0.getOutputEncoding();
      copy0.filtering = true;
      copy0.getLocation();
      // Undeclared exception!
      try { 
        copy0.validateAttributes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Copy copy0 = new Copy();
      copy0.getOwningTarget();
      copy0.setOwningTarget((Target) null);
      copy0.setTofile((File) null);
      copy0.getFileUtils();
      copy0.setOverwrite(true);
      copy0.getFilterSets();
      copy0.getOutputEncoding();
      copy0.createMapper();
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = null;
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(fileNameMapper0).mapFileName(anyString());
      copy0.buildMap((File) null, (File) null, stringArray0, fileNameMapper0, (Hashtable) null);
      assertEquals(9, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Copy copy0 = new Copy();
      File file0 = copy0.destDir;
      copy0.getOwningTarget();
      copy0.setTodir((File) null);
      copy0.setPreserveLastModified("Ra`Le2{");
      copy0.setIncludeEmptyDirs(false);
      copy0.setEncoding("Ra`Le2{");
      copy0.setOverwrite(true);
      copy0.getOutputEncoding();
      copy0.setTodir((File) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "Ra`Le2{";
      stringArray0[2] = "Ra`Le2{";
      stringArray0[3] = "Ra`Le2{";
      stringArray0[4] = "Ra`Le2{";
      copy0.scan((File) null, (File) null, stringArray0, stringArray0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Copy copy0 = new Copy();
      copy0.getOwningTarget();
      copy0.getFileUtils();
      copy0.init();
      boolean boolean0 = true;
      copy0.setOutputEncoding("");
      copy0.forceOverwrite = true;
      copy0.doFileOperations();
      copy0.createMapper();
      copy0.getEncoding();
      copy0.doFileOperations();
      // Undeclared exception!
      try { 
        copy0.setPreserveLastModified((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Project", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Copy copy0 = new Copy();
      copy0.getTaskName();
      copy0.getFilterChains();
      copy0.setOverwrite(true);
      File file0 = copy0.file;
      copy0.setTodir((File) null);
      copy0.createFilterSet();
      copy0.getOutputEncoding();
      copy0.doFileOperations();
      File file1 = copy0.destDir;
      copy0.setTodir((File) null);
      String[] stringArray0 = null;
      FileNameMapper fileNameMapper0 = mock(FileNameMapper.class, new ViolatedAssumptionAnswer());
      Hashtable<Integer, FileSet> hashtable0 = null;
      // Undeclared exception!
      try { 
        copy0.buildMap((File) null, (File) null, (String[]) null, fileNameMapper0, (Hashtable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Copy copy0 = new Copy();
      String string0 = "*";
      copy0.setOutputEncoding("*");
      copy0.createMapper();
      copy0.getPreserveLastModified();
      File file0 = copy0.file;
      copy0.setTofile((File) null);
      copy0.getFilterChains();
      try { 
        copy0.createMapper();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Cannot define more than one mapper
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Copy copy0 = new Copy();
      File file0 = null;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "$]B0=ieZ?,tn]GL5";
      stringArray0[1] = "9r:mT.:t<8\b>";
      copy0.createFilterSet();
      String string0 = "G\"]0Vk|f>5#7u=!WeGV";
      copy0.setFailOnError(false);
      copy0.getEncoding();
      stringArray0[2] = "G\"]0Vk|f>5#7u=!WeGV";
      // Undeclared exception!
      try { 
        copy0.scan((File) null, (File) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Copy copy0 = new Copy();
      File file0 = copy0.file;
      copy0.setOverwrite(false);
      copy0.setTofile((File) null);
      copy0.setPreserveLastModified(false);
      copy0.destFile = null;
      copy0.setVerbose(true);
      copy0.doFileOperations();
      copy0.getFilterChains();
      copy0.setVerbose(true);
      copy0.getOutputEncoding();
      try { 
        copy0.validateAttributes();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Specify at least one source - a file or a fileset.
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Copy copy0 = new Copy();
      Location location0 = copy0.getLocation();
      copy0.setLocation(location0);
      copy0.setPreserveLastModified("VrMnT& ({aXLk}I");
      Mapper mapper0 = copy0.mapperElement;
      copy0.mapperElement = null;
      String string0 = "";
      copy0.setOutputEncoding("");
      copy0.setLocation(location0);
      copy0.setTofile((File) null);
      boolean boolean0 = true;
      copy0.setVerbose(true);
      copy0.getFilterSets();
      copy0.setFlatten(true);
      copy0.setVerbose(true);
      copy0.getFileUtils();
      copy0.setEncoding("VrMnT& ({aXLk}I");
      copy0.setFiltering(true);
      copy0.setEncoding("");
      try { 
        copy0.validateAttributes();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Specify at least one source - a file or a fileset.
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Copy copy0 = new Copy();
      RuntimeConfigurable runtimeConfigurable0 = copy0.getRuntimeConfigurableWrapper();
      copy0.setRuntimeConfigurableWrapper(runtimeConfigurable0);
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      copy0.addFileset(fileSet0);
      copy0.getFileUtils();
      copy0.setPreserveLastModified(false);
      copy0.getEncoding();
      Copy copy1 = new Copy();
      File file0 = copy1.destFile;
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = "";
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = null;
      // Undeclared exception!
      try { 
        copy0.scan((File) null, (File) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.util.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Copy copy0 = new Copy();
      copy0.setFlatten(true);
      copy0.getOutputEncoding();
      copy0.getPreserveLastModified();
      copy0.verbosity = 2612;
      File file0 = copy0.destDir;
      copy0.setFile((File) null);
      copy0.includeEmpty = false;
      copy0.createFilterChain();
      copy0.setFlatten(false);
      copy0.setOverwrite(false);
      copy0.setTodir((File) null);
      copy0.getEncoding();
      copy0.setPreserveLastModified(false);
      copy0.getFileUtils();
      copy0.setVerbose(false);
      copy0.setFailOnError(false);
      copy0.createMapper();
      copy0.setVerbose(true);
      copy0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        copy0.scan((File) null, (File) null, stringArray0, stringArray0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // one of the attributes type or classname is required
         //
         verifyException("org.apache.tools.ant.types.Mapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Copy copy0 = new Copy();
      copy0.getOwningTarget();
      copy0.setTaskName("");
      copy0.setFlatten(true);
      copy0.setFiltering(true);
      copy0.getOutputEncoding();
      copy0.setOwningTarget((Target) null);
      copy0.getTaskName();
      File file0 = copy0.destFile;
      copy0.setFile((File) null);
      copy0.setFlatten(true);
      copy0.setFlatten(true);
      copy0.getFilterChains();
      copy0.getPreserveLastModified();
      FileSet fileSet0 = mock(FileSet.class, new ViolatedAssumptionAnswer());
      copy0.addFileset(fileSet0);
      copy0.createFilterChain();
      copy0.setOverwrite(true);
      copy0.fileCopyMap = null;
      boolean boolean0 = false;
      copy0.setIncludeEmptyDirs(false);
      copy0.setEncoding((String) null);
      copy0.setOverwrite(false);
      try { 
        copy0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // One of tofile or todir must be set.
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Copy copy0 = new Copy();
      String string0 = "-ki%*$~2";
      copy0.setDescription("-ki%*$~2");
      String string1 = "";
      File file0 = copy0.file;
      copy0.destDir = null;
      copy0.setEncoding("");
      String string2 = null;
      copy0.setTaskType((String) null);
      copy0.getFileUtils();
      try { 
        copy0.validateAttributes();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Specify at least one source - a file or a fileset.
         //
         verifyException("org.apache.tools.ant.taskdefs.Copy", e);
      }
  }
}
