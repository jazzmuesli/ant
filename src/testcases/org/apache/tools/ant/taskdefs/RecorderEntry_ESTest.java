/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:45:21 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildEvent;
import org.apache.tools.ant.Target;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.TaskAdapter;
import org.apache.tools.ant.UnknownElement;
import org.apache.tools.ant.taskdefs.RecorderEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecorderEntry_ESTest extends RecorderEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      UnknownElement unknownElement0 = new UnknownElement((String) null);
      BuildEvent buildEvent0 = new BuildEvent(unknownElement0);
      recorderEntry0.taskStarted(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XpDl$X{CLF$5/");
      recorderEntry0.setOutputPrintStream(mockPrintStream0);
      TaskAdapter taskAdapter0 = new TaskAdapter();
      BuildEvent buildEvent0 = new BuildEvent(taskAdapter0);
      recorderEntry0.taskFinished(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry(">V8t9Rji");
      Target target0 = new Target();
      Boolean boolean0 = Boolean.valueOf("file:");
      recorderEntry0.setRecordState(boolean0);
      BuildEvent buildEvent0 = new BuildEvent(target0);
      recorderEntry0.targetStarted(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XpDl$X{CLF$5/");
      recorderEntry0.setOutputPrintStream(mockPrintStream0);
      TaskAdapter taskAdapter0 = new TaskAdapter();
      BuildEvent buildEvent0 = new BuildEvent(taskAdapter0);
      recorderEntry0.targetFinished(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      UnknownElement unknownElement0 = new UnknownElement("'d[~n3Zs!eO");
      BuildEvent buildEvent0 = new BuildEvent(unknownElement0);
      recorderEntry0.messageLogged(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XpDl$X{CLF$5/");
      recorderEntry0.setOutputPrintStream(mockPrintStream0);
      TaskAdapter taskAdapter0 = new TaskAdapter();
      BuildEvent buildEvent0 = new BuildEvent(taskAdapter0);
      recorderEntry0.buildFinished(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      recorderEntry0.setMessageOutputLevel(1494);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XpDl$X{CLF$5/");
      recorderEntry0.setErrorPrintStream(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      recorderEntry0.setEmacsMode(false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      String string0 = recorderEntry0.getFilename();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry("7,Ogr-0WDa(Zwt:B");
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      recorderEntry0.buildStarted(buildEvent0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry("Couldn't get a file list from filespec");
      // Undeclared exception!
      try { 
        recorderEntry0.taskStarted((BuildEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.RecorderEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry("7,Ogr-0WDa(Zwt:B");
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Task) null).when(buildEvent0).getTask();
      // Undeclared exception!
      try { 
        recorderEntry0.taskFinished(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.RecorderEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry("Couldn't parse file: ");
      UnknownElement unknownElement0 = new UnknownElement("V\"~^_");
      BuildEvent buildEvent0 = new BuildEvent(unknownElement0);
      // Undeclared exception!
      try { 
        recorderEntry0.targetStarted(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.RecorderEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry("}I)*0KO'69eP");
      BuildEvent buildEvent0 = mock(BuildEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Target) null, (Target) null).when(buildEvent0).getTarget();
      // Undeclared exception!
      try { 
        recorderEntry0.targetFinished(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.RecorderEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry((String) null);
      // Undeclared exception!
      try { 
        recorderEntry0.messageLogged((BuildEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.RecorderEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RecorderEntry recorderEntry0 = new RecorderEntry("org.apache.oro.text.MalformedCachePatternException");
      Target target0 = new Target();
      BuildEvent buildEvent0 = new BuildEvent(target0);
      // Undeclared exception!
      try { 
        recorderEntry0.buildFinished(buildEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.RecorderEntry", e);
      }
  }
}
