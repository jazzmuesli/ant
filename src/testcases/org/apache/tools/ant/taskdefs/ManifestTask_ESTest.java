/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:23:54 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.taskdefs.Manifest;
import org.apache.tools.ant.taskdefs.ManifestTask;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ManifestTask_ESTest extends ManifestTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      Manifest.Section manifest_Section0 = mock(Manifest.Section.class, new ViolatedAssumptionAnswer());
      doReturn("").when(manifest_Section0).getName();
      manifestTask0.addConfiguredSection(manifest_Section0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ManifestTask.Mode manifestTask_Mode0 = new ManifestTask.Mode();
      String[] stringArray0 = manifestTask_Mode0.getValues();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      ManifestTask.Mode manifestTask_Mode0 = new ManifestTask.Mode();
      manifestTask0.setMode(manifestTask_Mode0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      manifestTask0.setFile(file0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      manifestTask0.setEncoding("");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      try { 
        manifestTask0.execute();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // the file attribute is required
         //
         verifyException("org.apache.tools.ant.taskdefs.ManifestTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      Manifest.Section manifest_Section0 = mock(Manifest.Section.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(manifest_Section0).getName();
      // Undeclared exception!
      try { 
        manifestTask0.addConfiguredSection(manifest_Section0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Sections must have a name
         //
         verifyException("org.apache.tools.ant.taskdefs.Manifest", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      // Undeclared exception!
      try { 
        manifestTask0.addConfiguredSection((Manifest.Section) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Manifest", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      Manifest.Attribute manifest_Attribute0 = mock(Manifest.Attribute.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(manifest_Attribute0).getKey();
      // Undeclared exception!
      try { 
        manifestTask0.addConfiguredAttribute(manifest_Attribute0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Attributes must have name and value
         //
         verifyException("org.apache.tools.ant.taskdefs.Manifest", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ManifestTask manifestTask0 = new ManifestTask();
      // Undeclared exception!
      try { 
        manifestTask0.addConfiguredAttribute((Manifest.Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Manifest", e);
      }
  }
}
