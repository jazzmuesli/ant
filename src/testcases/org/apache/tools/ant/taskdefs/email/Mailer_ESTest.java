/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:46:27 GMT 2020
 */

package org.apache.tools.ant.taskdefs.email;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.apache.tools.ant.Task;
import org.apache.tools.ant.taskdefs.email.EmailAddress;
import org.apache.tools.ant.taskdefs.email.Message;
import org.apache.tools.ant.taskdefs.email.MimeMailer;
import org.apache.tools.ant.taskdefs.email.PlainMailer;
import org.apache.tools.ant.taskdefs.email.UUMailer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Mailer_ESTest extends Mailer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlainMailer plainMailer0 = new PlainMailer();
      plainMailer0.setToList((Vector) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UUMailer uUMailer0 = new UUMailer();
      uUMailer0.setTask((Task) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UUMailer uUMailer0 = new UUMailer();
      uUMailer0.setSubject("$jzK1");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UUMailer uUMailer0 = new UUMailer();
      uUMailer0.setPort(1535);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UUMailer uUMailer0 = new UUMailer();
      uUMailer0.setMessage((Message) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MimeMailer mimeMailer0 = new MimeMailer();
      mimeMailer0.setIncludeFileNames(true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UUMailer uUMailer0 = new UUMailer();
      uUMailer0.setFrom((EmailAddress) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlainMailer plainMailer0 = new PlainMailer();
      plainMailer0.setFiles((Vector) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlainMailer plainMailer0 = new PlainMailer();
      plainMailer0.setCcList((Vector) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlainMailer plainMailer0 = new PlainMailer();
      plainMailer0.setBccList((Vector) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MimeMailer mimeMailer0 = new MimeMailer();
      String string0 = mimeMailer0.getDate();
      assertEquals("Sun, 05 Jan 2020 22:46:22 +0000", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MimeMailer mimeMailer0 = new MimeMailer();
      // Undeclared exception!
      try { 
        mimeMailer0.send();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MimeMailer mimeMailer0 = new MimeMailer();
      mimeMailer0.setHost("c;4f7P8]8}`e");
      // Undeclared exception!
      try { 
        mimeMailer0.send();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/sun/mail/util/MailLogger
         //
         verifyException("javax.mail.Session", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlainMailer plainMailer0 = new PlainMailer();
      // Undeclared exception!
      try { 
        plainMailer0.send();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }
}
