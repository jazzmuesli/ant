/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:51:29 GMT 2020
 */

package org.apache.tools.ant.taskdefs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import org.apache.tools.ant.taskdefs.Exec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Exec_ESTest extends Exec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Exec exec0 = new Exec();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(inputStream0).read(any(byte[].class) , anyInt() , anyInt());
      Exec.StreamPumper exec_StreamPumper0 = exec0.new StreamPumper(inputStream0, 2651);
      exec_StreamPumper0.run();
      assertEquals(0, exec_StreamPumper0.countStackFrames());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Exec exec0 = new Exec();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(inputStream0).read(any(byte[].class) , anyInt() , anyInt());
      Exec.StreamPumper exec_StreamPumper0 = exec0.new StreamPumper(inputStream0, 2651);
      exec_StreamPumper0.pumpStream();
      assertFalse(exec_StreamPumper0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Exec exec0 = new Exec();
      exec0.setOutput((String) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Exec exec0 = new Exec();
      exec0.setOs("=");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Exec exec0 = new Exec();
      exec0.setFailonerror(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Exec exec0 = new Exec();
      exec0.setCommand("#51(xh&\":&}");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Exec exec0 = new Exec();
      exec0.logFlush();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Exec exec0 = new Exec();
      // Undeclared exception!
      try { 
        exec0.setDir("JS-C)SLwOm3><[gLc_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.taskdefs.Exec", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Exec exec0 = new Exec();
      // Undeclared exception!
      try { 
        exec0.run("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Exec exec0 = new Exec();
      // Undeclared exception!
      try { 
        exec0.outputLog("", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Exec exec0 = new Exec();
      // Undeclared exception!
      try { 
        exec0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.Task", e);
      }
  }
}
