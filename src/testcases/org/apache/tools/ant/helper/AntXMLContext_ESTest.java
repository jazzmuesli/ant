/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:14:57 GMT 2020
 */

package org.apache.tools.ant.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Vector;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.RuntimeConfigurable;
import org.apache.tools.ant.Target;
import org.apache.tools.ant.helper.AntXMLContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.Locator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AntXMLContext_ESTest extends AntXMLContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(attributes0).getValue(anyString());
      antXMLContext0.configureId("<", attributes0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      antXMLContext0.setLocator((Locator) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      Target target0 = antXMLContext0.getImplicitTarget();
      antXMLContext0.setImplicitTarget(target0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      antXMLContext0.setIgnoreProjectTag(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      antXMLContext0.setCurrentTarget((Target) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      antXMLContext0.setCurrentProjectName((String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      antXMLContext0.pushWrapper((RuntimeConfigurable) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      antXMLContext0.popWrapper();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      RuntimeConfigurable runtimeConfigurable0 = antXMLContext0.parentWrapper();
      assertNull(runtimeConfigurable0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      boolean boolean0 = antXMLContext0.isIgnoringProjectTag();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      Vector vector0 = antXMLContext0.getWrapperStack();
      assertEquals(10, vector0.capacity());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      Vector vector0 = antXMLContext0.getTargets();
      assertEquals(10, vector0.capacity());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      Project project1 = antXMLContext0.getProject();
      assertSame(project1, project0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      Locator locator0 = antXMLContext0.getLocator();
      assertNull(locator0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      Target target0 = antXMLContext0.getCurrentTarget();
      assertNull(target0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      String string0 = antXMLContext0.getCurrentProjectName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AntXMLContext antXMLContext0 = new AntXMLContext((Project) null);
      File file0 = antXMLContext0.getBuildFileParent();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      File file0 = antXMLContext0.getBuildFile();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      RuntimeConfigurable runtimeConfigurable0 = antXMLContext0.currentWrapper();
      assertNull(runtimeConfigurable0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      Target target0 = antXMLContext0.getImplicitTarget();
      antXMLContext0.addTarget(target0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      // Undeclared exception!
      try { 
        antXMLContext0.setBuildFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.helper.AntXMLContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      AntXMLContext antXMLContext0 = new AntXMLContext(project0);
      // Undeclared exception!
      try { 
        antXMLContext0.configureId((Object) null, (Attributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.helper.AntXMLContext", e);
      }
  }
}
