/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:52:13 GMT 2020
 */

package org.apache.tools.ant;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import org.apache.tools.ant.DemuxOutputStream;
import org.apache.tools.ant.Project;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DemuxOutputStream_ESTest extends DemuxOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream(project0, false);
      demuxOutputStream0.write(3179);
      ByteArrayOutputStream byteArrayOutputStream0 = mock(ByteArrayOutputStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(byteArrayOutputStream0).toString();
      demuxOutputStream0.processFlush(byteArrayOutputStream0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream(project0, false);
      demuxOutputStream0.write(3179);
      ByteArrayOutputStream byteArrayOutputStream0 = mock(ByteArrayOutputStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(byteArrayOutputStream0).toString();
      demuxOutputStream0.processBuffer(byteArrayOutputStream0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream(project0, false);
      demuxOutputStream0.flush();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream(project0, false);
      demuxOutputStream0.close();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream((Project) null, false);
      // Undeclared exception!
      try { 
        demuxOutputStream0.write((-1779));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.DemuxOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream(project0, false);
      ByteArrayOutputStream byteArrayOutputStream0 = mock(ByteArrayOutputStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(byteArrayOutputStream0).toString();
      // Undeclared exception!
      try { 
        demuxOutputStream0.processFlush(byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.DemuxOutputStream$BufferInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream(project0, false);
      ByteArrayOutputStream byteArrayOutputStream0 = mock(ByteArrayOutputStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(byteArrayOutputStream0).toString();
      // Undeclared exception!
      try { 
        demuxOutputStream0.processBuffer(byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.DemuxOutputStream$BufferInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DemuxOutputStream demuxOutputStream0 = new DemuxOutputStream((Project) null, true);
      byte[] byteArray0 = new byte[7];
      demuxOutputStream0.write(byteArray0);
      // Undeclared exception!
      try { 
        demuxOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.DemuxOutputStream", e);
      }
  }
}
