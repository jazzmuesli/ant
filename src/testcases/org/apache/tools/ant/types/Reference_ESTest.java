/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:13:12 GMT 2020
 */

package org.apache.tools.ant.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.types.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Reference_ESTest extends Reference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Reference reference0 = new Reference("");
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn("").when(project0).getReference(anyString());
      Object object0 = reference0.getReferencedObject(project0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Reference reference0 = new Reference("");
      reference0.setRefId("6_S");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Reference reference0 = new Reference("");
      String string0 = reference0.getRefId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Reference reference0 = new Reference();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      try { 
        reference0.getReferencedObject(project0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No reference specified
         //
         verifyException("org.apache.tools.ant.types.Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Reference reference0 = new Reference("");
      // Undeclared exception!
      try { 
        reference0.getReferencedObject((Project) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Reference", e);
      }
  }
}
