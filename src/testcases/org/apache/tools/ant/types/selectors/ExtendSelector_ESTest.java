/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:56:56 GMT 2020
 */

package org.apache.tools.ant.types.selectors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.types.Parameter;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.apache.tools.ant.types.selectors.ExtendSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExtendSelector_ESTest extends ExtendSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      extendSelector0.verifySettings();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      extendSelector0.selectorCreate();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      Parameter parameter0 = new Parameter();
      extendSelector0.addParam(parameter0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      Project project0 = new Project();
      Path path0 = new Path(project0);
      extendSelector0.setClasspath(path0);
      extendSelector0.setClassname("DMME1q_CdM9N");
      // Undeclared exception!
      try { 
        extendSelector0.verifySettings();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.selectors.ExtendSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      Reference reference0 = new Reference("");
      extendSelector0.setClasspathref(reference0);
      Path path0 = new Path((Project) null, "_1<w<brQ^io=XvO3aC");
      path0.createPathElement();
      // Undeclared exception!
      try { 
        extendSelector0.setClasspath(path0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must either set location or path on <pathelement>
         //
         verifyException("org.apache.tools.ant.types.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      Reference reference0 = new Reference((String) null);
      reference0.setRefId("Xi'M+H`:");
      extendSelector0.setClasspathref(reference0);
      Path path0 = extendSelector0.getClasspath();
      // Undeclared exception!
      try { 
        extendSelector0.setClasspath(path0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      extendSelector0.setClassname("J'ZbTswByB9x");
      extendSelector0.createClasspath();
      // Undeclared exception!
      try { 
        extendSelector0.selectorCreate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.selectors.ExtendSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      Project project0 = new Project();
      File file0 = project0.resolveFile("Dr@a1SV");
      try { 
        extendSelector0.isSelected(file0, "", file0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // There is no classname specified
         //
         verifyException("org.apache.tools.ant.types.selectors.BaseSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      Reference reference0 = new Reference();
      extendSelector0.setClasspathref(reference0);
      extendSelector0.setClassname("+zx)");
      MockFile mockFile0 = new MockFile("", "org.apache.xalan.xpath.SimpleNodeLocator");
      // Undeclared exception!
      try { 
        extendSelector0.isSelected(mockFile0, "+zx)", mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.selectors.ExtendSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      Reference reference0 = new Reference();
      extendSelector0.setRefid(reference0);
      // Undeclared exception!
      try { 
        extendSelector0.createClasspath();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not specify nested elements when using refid
         //
         verifyException("org.apache.tools.ant.types.DataType", e);
      }
  }
}
