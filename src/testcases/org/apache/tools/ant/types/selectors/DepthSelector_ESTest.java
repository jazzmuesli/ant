/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:59:12 GMT 2020
 */

package org.apache.tools.ant.types.selectors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.types.Parameter;
import org.apache.tools.ant.types.selectors.DepthSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DepthSelector_ESTest extends DepthSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      Parameter[] parameterArray0 = new Parameter[9];
      Parameter parameter0 = new Parameter();
      parameterArray0[0] = parameter0;
      parameterArray0[1] = parameterArray0[0];
      parameterArray0[2] = parameterArray0[1];
      parameterArray0[3] = parameterArray0[0];
      parameterArray0[4] = parameterArray0[3];
      parameterArray0[5] = parameterArray0[4];
      parameterArray0[6] = parameterArray0[5];
      parameterArray0[7] = parameterArray0[4];
      parameterArray0[8] = parameter0;
      depthSelector0.setParameters(parameterArray0);
      assertEquals((-1), depthSelector0.min);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      depthSelector0.verifySettings();
      assertEquals((-1), depthSelector0.min);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      String string0 = depthSelector0.toString();
      assertEquals("{depthselector min: -1 max: -1}", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      depthSelector0.setMin(47);
      assertEquals((-1), depthSelector0.max);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      depthSelector0.setMax(2042);
      File file0 = MockFile.createTempFile("org.apache.oro.io.AwkFilenameFilter", "org.apache.oro.io.AwkFilenameFilter", (File) null);
      boolean boolean0 = depthSelector0.isSelected(file0, "org.apache.oro.io.AwkFilenameFilter", file0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      Parameter[] parameterArray0 = new Parameter[2];
      // Undeclared exception!
      try { 
        depthSelector0.setParameters(parameterArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.selectors.DepthSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      // Undeclared exception!
      try { 
        depthSelector0.isSelected((File) null, "RN7`M_", (File) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must set at least one of the min or the max levels.
         //
         verifyException("org.apache.tools.ant.types.selectors.BaseSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DepthSelector depthSelector0 = new DepthSelector();
      depthSelector0.max = 1430;
      MockFile mockFile0 = new MockFile("zj}Pxr.9|DS", "");
      // Undeclared exception!
      try { 
        depthSelector0.isSelected((File) null, "u?zf_;eN8L", mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.selectors.DepthSelector", e);
      }
  }
}
