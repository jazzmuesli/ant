/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:45:51 GMT 2020
 */

package org.apache.tools.ant.types.selectors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.types.selectors.PresentSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PresentSelector_ESTest extends PresentSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      presentSelector0.verifySettings();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      PresentSelector.FilePresence presentSelector_FilePresence0 = new PresentSelector.FilePresence();
      presentSelector0.setPresent(presentSelector_FilePresence0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PresentSelector.FilePresence presentSelector_FilePresence0 = new PresentSelector.FilePresence();
      String[] stringArray0 = presentSelector_FilePresence0.getValues();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      String string0 = presentSelector0.toString();
      assertEquals("{presentselector targetdir: NOT YET SET present: both}", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      presentSelector0.setTargetdir((File) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      presentSelector0.createMapper();
      // Undeclared exception!
      try { 
        presentSelector0.verifySettings();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // one of the attributes type or classname is required
         //
         verifyException("org.apache.tools.ant.types.Mapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      // Undeclared exception!
      try { 
        presentSelector0.setPresent((PresentSelector.FilePresence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.selectors.PresentSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      // Undeclared exception!
      try { 
        presentSelector0.isSelected((File) null, "Uv5Tso]U?M+rL", (File) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // The targetdir attribute is required.
         //
         verifyException("org.apache.tools.ant.types.selectors.BaseSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      presentSelector0.createMapper();
      try { 
        presentSelector0.createMapper();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Cannot define more than one mapper
         //
         verifyException("org.apache.tools.ant.types.selectors.PresentSelector", e);
      }
  }
}
