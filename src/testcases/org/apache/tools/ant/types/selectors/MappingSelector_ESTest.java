/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:22:36 GMT 2020
 */

package org.apache.tools.ant.types.selectors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.types.selectors.DependSelector;
import org.apache.tools.ant.types.selectors.DifferentSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MappingSelector_ESTest extends MappingSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DependSelector dependSelector0 = new DependSelector();
      dependSelector0.verifySettings();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DifferentSelector differentSelector0 = new DifferentSelector();
      differentSelector0.setTargetdir((File) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DifferentSelector differentSelector0 = new DifferentSelector();
      differentSelector0.setGranularity((-1));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DifferentSelector differentSelector0 = new DifferentSelector();
      differentSelector0.createMapper();
      // Undeclared exception!
      try { 
        differentSelector0.verifySettings();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // one of the attributes type or classname is required
         //
         verifyException("org.apache.tools.ant.types.Mapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DependSelector dependSelector0 = new DependSelector();
      // Undeclared exception!
      try { 
        dependSelector0.isSelected((File) null, "{G~Te9G%9v", (File) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // The targetdir attribute is required.
         //
         verifyException("org.apache.tools.ant.types.selectors.BaseSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DifferentSelector differentSelector0 = new DifferentSelector();
      differentSelector0.createMapper();
      try { 
        differentSelector0.createMapper();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Cannot define more than one mapper
         //
         verifyException("org.apache.tools.ant.types.selectors.MappingSelector", e);
      }
  }
}
