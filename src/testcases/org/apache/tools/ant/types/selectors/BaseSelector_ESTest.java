/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:44:22 GMT 2020
 */

package org.apache.tools.ant.types.selectors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.types.selectors.ContainsRegexpSelector;
import org.apache.tools.ant.types.selectors.ContainsSelector;
import org.apache.tools.ant.types.selectors.ExtendSelector;
import org.apache.tools.ant.types.selectors.NoneSelector;
import org.apache.tools.ant.types.selectors.PresentSelector;
import org.apache.tools.ant.types.selectors.SelectSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSelector_ESTest extends BaseSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContainsRegexpSelector containsRegexpSelector0 = new ContainsRegexpSelector();
      containsRegexpSelector0.setExpression("");
      containsRegexpSelector0.validate();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NoneSelector noneSelector0 = new NoneSelector();
      boolean boolean0 = noneSelector0.isSelected((File) null, "", (File) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PresentSelector presentSelector0 = new PresentSelector();
      presentSelector0.verifySettings();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContainsSelector containsSelector0 = new ContainsSelector();
      containsSelector0.setError("xmlns:");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SelectSelector selectSelector0 = new SelectSelector();
      String string0 = selectSelector0.getError();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExtendSelector extendSelector0 = new ExtendSelector();
      // Undeclared exception!
      try { 
        extendSelector0.validate();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // There is no classname specified
         //
         verifyException("org.apache.tools.ant.types.selectors.BaseSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ContainsSelector containsSelector0 = new ContainsSelector();
      Project project0 = new Project();
      File file0 = project0.getBaseDir();
      // Undeclared exception!
      try { 
        containsSelector0.isSelected(file0, "D{Jj(", file0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // The text attribute is required
         //
         verifyException("org.apache.tools.ant.types.selectors.BaseSelector", e);
      }
  }
}
