/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:50:08 GMT 2020
 */

package org.apache.tools.ant.types.optional.image;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.media.jai.PlanarImage;
import org.apache.tools.ant.types.optional.image.Draw;
import org.apache.tools.ant.types.optional.image.Rotate;
import org.apache.tools.ant.types.optional.image.Text;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Rotate_ESTest extends Rotate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      rotate0.setAngle("6");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      PlanarImage planarImage0 = mock(PlanarImage.class, new ViolatedAssumptionAnswer());
      PlanarImage planarImage1 = rotate0.performRotate(planarImage0);
      PlanarImage planarImage2 = rotate0.executeTransformOperation(planarImage1);
      assertFalse(planarImage2.equals((Object)planarImage1));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      PlanarImage planarImage0 = rotate0.executeDrawOperation();
      assertNull(planarImage0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      // Undeclared exception!
      try { 
        rotate0.setAngle("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      // Undeclared exception!
      try { 
        rotate0.setAngle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      // Undeclared exception!
      try { 
        rotate0.performRotate((PlanarImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // operation \"Rotate\" requires all source objects to be valid input; a null is supplied.
         //
         verifyException("javax.media.jai.JAI", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      Draw draw0 = mock(Draw.class, new ViolatedAssumptionAnswer());
      rotate0.addDraw(draw0);
      // Undeclared exception!
      try { 
        rotate0.executeTransformOperation((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.optional.image.Rotate", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      // Undeclared exception!
      try { 
        rotate0.executeTransformOperation((PlanarImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // operation \"Rotate\" requires all source objects to be valid input; a null is supplied.
         //
         verifyException("javax.media.jai.JAI", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      Text text0 = mock(Text.class, new ViolatedAssumptionAnswer());
      doReturn((PlanarImage) null).when(text0).executeDrawOperation();
      rotate0.addText(text0);
      // Undeclared exception!
      try { 
        rotate0.executeDrawOperation();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // operation \"Rotate\" requires all source objects to be valid input; a null is supplied.
         //
         verifyException("javax.media.jai.JAI", e);
      }
  }
}
