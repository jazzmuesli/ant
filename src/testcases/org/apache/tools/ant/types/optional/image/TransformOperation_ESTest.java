/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:08:18 GMT 2020
 */

package org.apache.tools.ant.types.optional.image;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.media.jai.PlanarImage;
import org.apache.tools.ant.types.optional.image.Draw;
import org.apache.tools.ant.types.optional.image.Rectangle;
import org.apache.tools.ant.types.optional.image.Scale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransformOperation_ESTest extends TransformOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Scale scale0 = new Scale();
      Rectangle rectangle0 = mock(Rectangle.class, new ViolatedAssumptionAnswer());
      scale0.addRectangle(rectangle0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Scale scale0 = new Scale();
      scale0.setHeight("'4=v_wCLpCYf'F");
      // Undeclared exception!
      try { 
        scale0.executeTransformOperation((PlanarImage) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Draw draw0 = new Draw();
      Scale scale0 = new Scale();
      scale0.addDraw(draw0);
      // Undeclared exception!
      try { 
        scale0.executeTransformOperation((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.optional.image.Scale", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Scale scale0 = new Scale();
      // Undeclared exception!
      try { 
        scale0.executeTransformOperation((PlanarImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // operation \"Scale\" requires all source objects to be valid input; a null is supplied.
         //
         verifyException("javax.media.jai.JAI", e);
      }
  }
}
