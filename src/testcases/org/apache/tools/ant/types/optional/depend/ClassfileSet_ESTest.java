/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:05:55 GMT 2020
 */

package org.apache.tools.ant.types.optional.depend;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.types.Reference;
import org.apache.tools.ant.types.optional.depend.ClassfileSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassfileSet_ESTest extends ClassfileSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      ClassfileSet.ClassRoot classfileSet_ClassRoot0 = new ClassfileSet.ClassRoot();
      classfileSet0.addConfiguredRoot(classfileSet_ClassRoot0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      ClassfileSet classfileSet1 = new ClassfileSet(classfileSet0);
      assertFalse(classfileSet1.equals((Object)classfileSet0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassfileSet.ClassRoot classfileSet_ClassRoot0 = new ClassfileSet.ClassRoot();
      classfileSet_ClassRoot0.setClassname((String) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassfileSet.ClassRoot classfileSet_ClassRoot0 = new ClassfileSet.ClassRoot();
      String string0 = classfileSet_ClassRoot0.getClassname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      classfileSet0.setRootClass("}DMUc");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      Object object0 = classfileSet0.clone();
      assertFalse(object0.equals((Object)classfileSet0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      // Undeclared exception!
      try { 
        classfileSet0.getDirectoryScanner((Project) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No directory specified for ClassfileSet.
         //
         verifyException("org.apache.tools.ant.types.AbstractFileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      classfileSet0.addRootFileset(classfileSet0);
      // Undeclared exception!
      try { 
        classfileSet0.getDirectoryScanner((Project) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      Reference reference0 = mock(Reference.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(reference0).getReferencedObject(any(org.apache.tools.ant.Project.class));
      classfileSet0.setRefid(reference0);
      // Undeclared exception!
      try { 
        classfileSet0.getDirectoryScanner((Project) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.AbstractFileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassfileSet classfileSet0 = new ClassfileSet();
      // Undeclared exception!
      try { 
        classfileSet0.addConfiguredRoot((ClassfileSet.ClassRoot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.optional.depend.ClassfileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassfileSet classfileSet0 = null;
      try {
        classfileSet0 = new ClassfileSet((ClassfileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.AbstractFileSet", e);
      }
  }
}
