/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:24:41 GMT 2020
 */

package org.apache.tools.ant.types.optional.image;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.SampleModel;
import javax.media.jai.PlanarImage;
import org.apache.tools.ant.types.optional.image.Arc;
import org.apache.tools.ant.types.optional.image.Draw;
import org.apache.tools.ant.types.optional.image.Ellipse;
import org.apache.tools.ant.types.optional.image.Rectangle;
import org.apache.tools.ant.types.optional.image.Text;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Draw_ESTest extends Draw_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Draw draw0 = new Draw();
      Text text0 = mock(Text.class, new ViolatedAssumptionAnswer());
      draw0.addText(text0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Draw draw0 = new Draw();
      Rectangle rectangle0 = mock(Rectangle.class, new ViolatedAssumptionAnswer());
      draw0.addRectangle(rectangle0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Draw draw0 = new Draw();
      draw0.addEllipse((Ellipse) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Draw draw0 = new Draw();
      draw0.setYloc((-875));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Draw draw0 = new Draw();
      draw0.setXloc((-1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Draw draw0 = new Draw();
      draw0.addArc((Arc) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Draw draw0 = new Draw();
      PlanarImage planarImage0 = mock(PlanarImage.class, new ViolatedAssumptionAnswer());
      doReturn((BufferedImage) null).when(planarImage0).getAsBufferedImage();
      // Undeclared exception!
      try { 
        draw0.executeTransformOperation(planarImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.optional.image.Draw", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Draw draw0 = new Draw();
      BufferedImage bufferedImage0 = mock(BufferedImage.class, new ViolatedAssumptionAnswer());
      doReturn((ColorModel) null).when(bufferedImage0).getColorModel();
      doReturn((Graphics) null).when(bufferedImage0).getGraphics();
      doReturn(0).when(bufferedImage0).getHeight();
      doReturn(0).when(bufferedImage0).getMinX();
      doReturn(0).when(bufferedImage0).getMinY();
      doReturn((SampleModel) null).when(bufferedImage0).getSampleModel();
      doReturn(0).when(bufferedImage0).getTileGridXOffset();
      doReturn(0).when(bufferedImage0).getTileGridYOffset();
      doReturn(0).when(bufferedImage0).getTileHeight();
      doReturn(0).when(bufferedImage0).getTileWidth();
      doReturn(0).when(bufferedImage0).getWidth();
      PlanarImage planarImage0 = mock(PlanarImage.class, new ViolatedAssumptionAnswer());
      doReturn(bufferedImage0).when(planarImage0).getAsBufferedImage();
      // Undeclared exception!
      try { 
        draw0.executeTransformOperation(planarImage0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The specified dimensional parameter is non-positive.
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Draw draw0 = new Draw();
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      BufferedImage bufferedImage0 = mock(BufferedImage.class, new ViolatedAssumptionAnswer());
      doReturn(graphics0).when(bufferedImage0).getGraphics();
      PlanarImage planarImage0 = mock(PlanarImage.class, new ViolatedAssumptionAnswer());
      doReturn(bufferedImage0).when(planarImage0).getAsBufferedImage();
      // Undeclared exception!
      try { 
        draw0.executeTransformOperation(planarImage0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.awt.Graphics$MockitoMock$1909958766 cannot be cast to java.awt.Graphics2D
         //
         verifyException("org.apache.tools.ant.types.optional.image.Draw", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Draw draw0 = new Draw();
      draw0.instructions = null;
      // Undeclared exception!
      try { 
        draw0.addText((Text) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.optional.image.Draw", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Draw draw0 = new Draw();
      draw0.instructions = null;
      // Undeclared exception!
      try { 
        draw0.addRectangle((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.optional.image.Draw", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Draw draw0 = new Draw();
      draw0.instructions = null;
      Ellipse ellipse0 = mock(Ellipse.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        draw0.addEllipse(ellipse0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.optional.image.Draw", e);
      }
  }
}
