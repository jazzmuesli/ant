/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:52:09 GMT 2020
 */

package org.apache.tools.ant.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.types.AntFilterReader;
import org.apache.tools.ant.types.Parameter;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.types.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AntFilterReader_ESTest extends AntFilterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      Path path0 = antFilterReader0.createClasspath();
      antFilterReader0.setClasspath(path0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      Reference reference0 = new Reference("org.apache.xalan.xpath.SimpleNodeLocator");
      antFilterReader0.setClasspathRef(reference0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      Parameter[] parameterArray0 = antFilterReader0.getParams();
      assertEquals(0, parameterArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      Path path0 = antFilterReader0.getClasspath();
      assertNull(path0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      String string0 = antFilterReader0.getClassName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      antFilterReader0.addParam((Parameter) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      antFilterReader0.setClassName("{7t2;2BG*@p)q\"5Em!");
      try { 
        antFilterReader0.setRefid((Reference) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not specify more than one attribute when using refid
         //
         verifyException("org.apache.tools.ant.types.DataType", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      // Undeclared exception!
      try { 
        antFilterReader0.setRefid((Reference) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.AntFilterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      Reference reference0 = new Reference();
      antFilterReader0.ref = reference0;
      Path path0 = Path.systemClasspath;
      // Undeclared exception!
      try { 
        antFilterReader0.setClasspath(path0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not specify more than one attribute when using refid
         //
         verifyException("org.apache.tools.ant.types.DataType", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AntFilterReader antFilterReader0 = new AntFilterReader();
      Reference reference0 = new Reference();
      antFilterReader0.ref = reference0;
      // Undeclared exception!
      try { 
        antFilterReader0.createClasspath();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not specify nested elements when using refid
         //
         verifyException("org.apache.tools.ant.types.DataType", e);
      }
  }
}
