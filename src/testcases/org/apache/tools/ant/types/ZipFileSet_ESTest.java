/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:11:42 GMT 2020
 */

package org.apache.tools.ant.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.ZipFileSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ZipFileSet_ESTest extends ZipFileSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      zipFileSet0.setSrc((File) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      zipFileSet0.setFileMode("7");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      zipFileSet0.setDirMode("6");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      ZipFileSet zipFileSet1 = new ZipFileSet(zipFileSet0);
      assertFalse(zipFileSet1.equals((Object)zipFileSet0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      ZipFileSet zipFileSet1 = new ZipFileSet(zipFileSet0);
      assertFalse(zipFileSet1.equals((Object)zipFileSet0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      zipFileSet0.setPrefix("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      zipFileSet0.setFullpath("i)tdzLN>H/@ZED:");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      File file0 = zipFileSet0.getSrc();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      String string0 = zipFileSet0.getPrefix();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      String string0 = zipFileSet0.getFullpath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      int int0 = zipFileSet0.getFileMode();
      assertEquals(33188, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      int int0 = zipFileSet0.getDirMode();
      assertEquals(16877, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      zipFileSet0.setDir((File) null);
      // Undeclared exception!
      try { 
        zipFileSet0.setSrc((File) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Cannot set both dir and src attributes
         //
         verifyException("org.apache.tools.ant.types.ZipFileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      // Undeclared exception!
      try { 
        zipFileSet0.setFileMode((String) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      // Undeclared exception!
      try { 
        zipFileSet0.setDirMode("p~");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"p~\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      // Undeclared exception!
      try { 
        zipFileSet0.getRef((Project) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.ZipFileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ZipFileSet zipFileSet0 = new ZipFileSet();
      // Undeclared exception!
      try { 
        zipFileSet0.getDirectoryScanner((Project) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No directory specified for ZipFileSet.
         //
         verifyException("org.apache.tools.ant.types.AbstractFileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ZipFileSet zipFileSet0 = null;
      try {
        zipFileSet0 = new ZipFileSet((ZipFileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.AbstractFileSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ZipFileSet zipFileSet0 = null;
      try {
        zipFileSet0 = new ZipFileSet((FileSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.AbstractFileSet", e);
      }
  }
}
