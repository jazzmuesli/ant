/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:45:20 GMT 2020
 */

package org.apache.tools.ant.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.types.FileList;
import org.apache.tools.ant.types.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileList_ESTest extends FileList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileList fileList0 = new FileList();
      fileList0.setRefid((Reference) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileList fileList0 = new FileList();
      FileList fileList1 = new FileList(fileList0);
      assertFalse(fileList1.equals((Object)fileList0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileList fileList0 = new FileList();
      fileList0.setDir((File) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileList fileList0 = new FileList();
      File file0 = fileList0.getDir((Project) null);
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileList fileList0 = new FileList();
      fileList0.setFiles("[9D-v0oo");
      try { 
        fileList0.setRefid((Reference) null);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // You must not specify more than one attribute when using refid
         //
         verifyException("org.apache.tools.ant.types.DataType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileList fileList0 = new FileList();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        fileList0.getRef(project0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.FileList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileList fileList0 = new FileList();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        fileList0.getFiles(project0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No directory specified for filelist.
         //
         verifyException("org.apache.tools.ant.types.FileList", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileList fileList0 = null;
      try {
        fileList0 = new FileList((FileList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.types.FileList", e);
      }
  }
}
