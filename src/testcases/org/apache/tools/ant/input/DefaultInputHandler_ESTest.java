/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:01:34 GMT 2020
 */

package org.apache.tools.ant.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.input.DefaultInputHandler;
import org.apache.tools.ant.input.InputRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultInputHandler_ESTest extends DefaultInputHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultInputHandler defaultInputHandler0 = new DefaultInputHandler();
      InputRequest inputRequest0 = mock(InputRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(inputRequest0).getPrompt();
      doReturn(true).when(inputRequest0).isInputValid();
      defaultInputHandler0.handleInput(inputRequest0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultInputHandler defaultInputHandler0 = new DefaultInputHandler();
      InputRequest inputRequest0 = mock(InputRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(inputRequest0).getPrompt();
      String string0 = defaultInputHandler0.getPrompt(inputRequest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultInputHandler defaultInputHandler0 = new DefaultInputHandler();
      InputStream inputStream0 = defaultInputHandler0.getInputStream();
      assertNotNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultInputHandler defaultInputHandler0 = new DefaultInputHandler();
      InputRequest inputRequest0 = mock(InputRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(inputRequest0).getPrompt();
      doReturn(false).when(inputRequest0).isInputValid();
      try { 
        defaultInputHandler0.handleInput(inputRequest0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Failed to read input from Console.
         //
         verifyException("org.apache.tools.ant.input.DefaultInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultInputHandler defaultInputHandler0 = new DefaultInputHandler();
      // Undeclared exception!
      try { 
        defaultInputHandler0.handleInput((InputRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.input.DefaultInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultInputHandler defaultInputHandler0 = new DefaultInputHandler();
      // Undeclared exception!
      try { 
        defaultInputHandler0.getPrompt((InputRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.input.DefaultInputHandler", e);
      }
  }
}
