/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 21:55:00 GMT 2020
 */

package org.apache.tools.ant;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Hashtable;
import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.ComponentHelper;
import org.apache.tools.ant.DummyTaskOk;
import org.apache.tools.ant.DummyTaskPackage;
import org.apache.tools.ant.DummyTaskWithoutDefaultConstructor;
import org.apache.tools.ant.DummyTaskWithoutPublicConstructor;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.ProjectTest;
import org.apache.tools.ant.TaskAdapter;
import org.apache.tools.ant.UnknownElement;
import org.apache.tools.ant.util.WeakishReference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ComponentHelper_ESTest extends ComponentHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      componentHelper0.getTaskDefinitions();
      componentHelper0.getDataTypeDefinitions();
      componentHelper0.getTaskDefinitions();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((Hashtable) null, componentHelper0).when(project0).getReference(anyString());
      ComponentHelper componentHelper1 = ComponentHelper.getComponentHelper(project0);
      Project project1 = componentHelper1.project;
      ComponentHelper componentHelper2 = ComponentHelper.getComponentHelper(project1);
      componentHelper2.project = project1;
      String string0 = "";
      Class<WeakishReference> class0 = WeakishReference.class;
      componentHelper2.setNext(componentHelper0);
      componentHelper1.addDataTypeDefinition("", class0);
      // Undeclared exception!
      try { 
        componentHelper2.createComponent("", "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      componentHelper0.getTaskDefinitions();
      componentHelper0.getDataTypeDefinitions();
      componentHelper0.getTaskDefinitions();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((Hashtable) null, (Object) null, (Object) null).when(project0).getReference(anyString());
      ComponentHelper componentHelper1 = ComponentHelper.getComponentHelper(project0);
      componentHelper1.createDataType("");
      Project project1 = componentHelper1.project;
      ComponentHelper componentHelper2 = ComponentHelper.getComponentHelper(project1);
      componentHelper2.project = project1;
      ComponentHelper.getComponentHelper(project1);
      String string0 = "";
      Class<WeakishReference> class0 = WeakishReference.class;
      componentHelper2.setNext(componentHelper0);
      componentHelper1.addDataTypeDefinition("", class0);
      componentHelper2.createComponent("", "");
      try { 
        componentHelper2.checkTaskClass(class0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // class org.apache.tools.ant.util.WeakishReference is abstract
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn("Va!Ycs8ew3G").when(project0).getReference(anyString());
      // Undeclared exception!
      try { 
        ComponentHelper.getComponentHelper(project0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.apache.tools.ant.ComponentHelper
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      ComponentHelper componentHelper1 = new ComponentHelper();
      Project project0 = componentHelper1.project;
      componentHelper0.setProject((Project) null);
      UnknownElement unknownElement0 = mock(UnknownElement.class, new ViolatedAssumptionAnswer());
      String string0 = "L0W<";
      String string1 = "us";
      componentHelper0.createComponent("L0W<", "us");
      String string2 = "&x)&fv]NNsim&'tJ1";
      Class<ProjectTest.DummyTaskProtected> class0 = ProjectTest.DummyTaskProtected.class;
      // Undeclared exception!
      try { 
        componentHelper0.checkTaskClass(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(project0).getReference(anyString());
      ComponentHelper componentHelper1 = ComponentHelper.getComponentHelper(project0);
      Project project1 = componentHelper1.project;
      componentHelper0.setProject(project1);
      componentHelper0.getNext();
      String string0 = "VCx-9";
      componentHelper0.createTask("VCx-9");
      // Undeclared exception!
      try { 
        componentHelper1.getElementName((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      componentHelper0.getTaskDefinitions();
      componentHelper0.getDataTypeDefinitions();
      componentHelper0.getTaskDefinitions();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(project0).getReference(anyString());
      ComponentHelper componentHelper1 = ComponentHelper.getComponentHelper(project0);
      Project project1 = componentHelper1.project;
      ComponentHelper componentHelper2 = ComponentHelper.getComponentHelper(project1);
      componentHelper2.project = project1;
      String string0 = "";
      Class<WeakishReference> class0 = WeakishReference.class;
      componentHelper2.setNext(componentHelper0);
      componentHelper1.addDataTypeDefinition("", class0);
      componentHelper2.createComponent("", "");
      try { 
        componentHelper2.checkTaskClass(class0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // class org.apache.tools.ant.util.WeakishReference is abstract
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      Class<TaskAdapter> class0 = TaskAdapter.class;
      componentHelper0.getTaskDefinitions();
      componentHelper0.checkTaskClass(class0);
      componentHelper0.setNext((ComponentHelper) null);
      componentHelper0.getDataTypeDefinitions();
      String string0 = "8yc\"|I.]{*8b(y";
      // Undeclared exception!
      try { 
        componentHelper0.createDataType("8yc\"|I.]{*8b(y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      Class<TaskAdapter> class0 = TaskAdapter.class;
      Class<DummyTaskOk> class1 = DummyTaskOk.class;
      // Undeclared exception!
      try { 
        componentHelper0.addTaskDefinition("", class1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      componentHelper0.getNext();
      UnknownElement unknownElement0 = mock(UnknownElement.class, new ViolatedAssumptionAnswer());
      String string0 = "'[lhB";
      // Undeclared exception!
      try { 
        componentHelper0.createComponent(unknownElement0, "'[lhB", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      ComponentHelper componentHelper1 = componentHelper0.next;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        componentHelper0.addDataTypeDefinition("", class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      componentHelper0.getDataTypeDefinitions();
      // Undeclared exception!
      try { 
        componentHelper0.createTask("$_DD(!X&RlEz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      componentHelper0.getTaskDefinitions();
      componentHelper0.getTaskDefinitions();
      Project project0 = componentHelper0.project;
      componentHelper0.setProject((Project) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        componentHelper0.createDataType("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper$AntTaskTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(project0).getReference(anyString());
      ComponentHelper componentHelper1 = ComponentHelper.getComponentHelper(project0);
      componentHelper1.getElementName(componentHelper0);
      Project project1 = componentHelper1.project;
      componentHelper0.setProject(project1);
      Project project2 = componentHelper0.project;
      componentHelper0.setProject(project2);
      ComponentHelper.getComponentHelper(project2);
      componentHelper1.getElementName(project1);
      Class<Object> class0 = Object.class;
      componentHelper0.project = project2;
      try { 
        componentHelper1.checkTaskClass(class0);
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // No public execute() in class java.lang.Object
         //
         verifyException("org.apache.tools.ant.TaskAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      ComponentHelper componentHelper1 = new ComponentHelper();
      componentHelper0.next = componentHelper1;
      componentHelper1.getTaskDefinitions();
      componentHelper0.next.createComponent("", "");
      ComponentHelper componentHelper2 = componentHelper0.getNext();
      String string0 = "<%YdWj-5G^`";
      componentHelper0.getNext();
      componentHelper0.next.createComponent("<%YdWj-5G^`", "<%YdWj-5G^`");
      // Undeclared exception!
      try { 
        componentHelper0.next.getElementName(componentHelper2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      String string0 = "9U>yQ.3[a*;S^ep";
      UnknownElement unknownElement0 = mock(UnknownElement.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        componentHelper0.createTask("9U>yQ.3[a*;S^ep");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      // Undeclared exception!
      try { 
        componentHelper0.getElementName("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      try { 
        componentHelper0.initDefaultDefinitions();
        fail("Expecting exception: BuildException");
      
      } catch(BuildException e) {
         //
         // Can't load default task list
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ComponentHelper componentHelper0 = new ComponentHelper();
      Project project0 = componentHelper0.project;
      // Undeclared exception!
      try { 
        ComponentHelper.getComponentHelper((Project) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.ant.ComponentHelper", e);
      }
  }
}
