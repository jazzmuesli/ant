/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 05 22:46:53 GMT 2020
 */

package org.apache.tools.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tools.zip.ZipShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ZipShort_ESTest extends ZipShort_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZipShort zipShort0 = new ZipShort((-1));
      ZipShort zipShort1 = new ZipShort((-1809));
      boolean boolean0 = zipShort0.equals(zipShort1);
      assertEquals((-1809), zipShort1.getValue());
      assertFalse(boolean0);
      assertFalse(zipShort1.equals((Object)zipShort0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ZipShort zipShort0 = new ZipShort(352);
      byte[] byteArray0 = zipShort0.getBytes();
      assertArrayEquals(new byte[] {(byte)96, (byte)1}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZipShort zipShort0 = new ZipShort(0);
      int int0 = zipShort0.getValue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ZipShort zipShort0 = new ZipShort((-1));
      int int0 = zipShort0.getValue();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZipShort zipShort0 = null;
      try {
        zipShort0 = new ZipShort((byte[]) null, (-1895));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.zip.ZipShort", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ZipShort zipShort0 = null;
      try {
        zipShort0 = new ZipShort(byteArray0, (byte)32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.tools.zip.ZipShort", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ZipShort zipShort0 = null;
      try {
        zipShort0 = new ZipShort(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.tools.zip.ZipShort", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ZipShort zipShort0 = new ZipShort(352);
      int int0 = zipShort0.getValue();
      assertEquals(352, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ZipShort zipShort0 = new ZipShort(byteArray0);
      assertEquals(0, zipShort0.getValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZipShort zipShort0 = new ZipShort(1);
      ZipShort zipShort1 = new ZipShort(2789);
      boolean boolean0 = zipShort0.equals(zipShort1);
      assertFalse(zipShort1.equals((Object)zipShort0));
      assertEquals(2789, zipShort1.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ZipShort zipShort0 = new ZipShort(byteArray0, (byte)0);
      boolean boolean0 = zipShort0.equals("");
      assertEquals(0, zipShort0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZipShort zipShort0 = new ZipShort(1);
      boolean boolean0 = zipShort0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(1, zipShort0.getValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ZipShort zipShort0 = new ZipShort(byteArray0, (byte)0);
      zipShort0.hashCode();
      assertEquals(0, zipShort0.getValue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ZipShort zipShort0 = new ZipShort(byteArray0, (byte)0);
      boolean boolean0 = zipShort0.equals(zipShort0);
      assertTrue(boolean0);
      assertEquals(0, zipShort0.getValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZipShort zipShort0 = null;
      try {
        zipShort0 = new ZipShort((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tools.zip.ZipShort", e);
      }
  }
}
